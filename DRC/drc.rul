drcExtractRules(
;*******************************************************************************
;*                                                                             *
;*   Path, Component, Release: cmrf7sf/rel/Assura/DRC/drc.rul, assuraDRC, cad_cmrf7sf
;*   CMVC Revision: 1.277 13/12/18 16:36:02
;*                                                                             *
;*******************************************************************************
;*                                                                             *
;*   These files may only be used with a valid license for the                 *
;*   Cadence Design Systems, Inc. products.                                    *
;*                                                                             *
;*******************************************************************************
;*  License Materials  -  Property of IBM                                      *
;*                                                                             *
;*  CMRF-7sf V2.0.1.0                                                          *
;*                                                                             *
;*  (C) Copyright IBM Corp. 2003, 2013                                         *
;*                                                                             *
;*  IBM Confidential                                                           *
;*                                                                             *
;*  US Government Users Restricted Rights - Use, duplication.                  *
;*  or disclosure restricted by GSA ADP Schedule Contract                      *
;*  with IBM Corp.                                                             *
;*                                                                             *
;*******************************************************************************
;*                                                                             *
;*           OWNER:  Analog and Mixed Signal Solutions                         *
;*                   IBM Burlington, VT   USA                                  *
;*                                                                             *
;*******************************************************************************
;*                                                                             *
;*********************|-----------------------------------|*********************
;*********************|             CMRF-7sf              |*********************
;*********************| Assura Design Rule Checking Deck  |*********************
;*********************|-----------------------------------|*********************
;*                                                                             *
;*******************************************************************************
;*                                                                             *
;*      This deck is based on the rules found in the following manual:         *
;*                                                                             *
;*              Release Date             : December, 2013                      *
;*              Engineering Specification: 70P3342                             *
;*              Engineering Change       : H47585                              *
;*                                                                             *
;*******************************************************************************

;==========================
;=====  LAYERS INPUT  =====
;==========================

  ;==============================
  ;===== LAYERS INPUT (DF2) =====
  ;==============================

  bkgnd = geomBkgnd()

  layerDefs( "DF2"

    ;===== MASK BUILD LAYERS =====

    am             = layer( "AM"    type( "drawing" "vdd" "gnd" ))
    as             = layer( "AS"    type( "drawing"             ))
    bb             = layer( "BB"    type( "drawing"             ))
    bf             = layer( "BF"    type( "drawing"             ))
    bh             = layer( "BH"    type( "drawing"             ))
    bn             = layer( "BN"    type( "drawing"             ))
    bp             = layer( "BP"    type( "drawing"             ))
    bp2nd          = layer( "BP2ND" type( "drawing"             ))
    bt             = layer( "BT"    type( "drawing"             ))
    ca             = layer( "CA"    type( "drawing"             ))
    cabar          = layer( "CABAR" type( "drawing"             ))
    de             = layer( "DE"    type( "drawing"             ))
    df             = layer( "DF"    type( "drawing"             ))
    dg             = layer( "DG"    type( "drawing"             ))
    dv             = layer( "DV"    type( "drawing"             ))
    e1             = layer( "E1"    type( "drawing" "vdd" "gnd" ))
    e2             = layer( "E2"    type( "drawing"             ))
    ft             = layer( "FT"    type( "drawing"             ))
    ftbar          = layer( "FT"    type( "BAR"                 ))
    hr             = layer( "HR"    type( "drawing"             ))
    ht             = layer( "HT"    type( "drawing"             ))
    jc             = layer( "JC"    type( "drawing"             ))
    jd             = layer( "JD"    type( "drawing"             ))
    js             = layer( "JS"    type( "drawing"             ))
    k1             = layer( "K1"    type( "drawing"             ))
    lv             = layer( "LV"    type( "drawing"             ))
    m1             = layer( "M1"    type( "drawing" "vdd" "gnd" ))
    m2             = layer( "M2"    type( "drawing" "vdd" "gnd" ))
    m3             = layer( "M3"    type( "drawing" "vdd" "gnd" ))
    m4             = layer( "M4"    type( "drawing" "vdd" "gnd" ))
    m5             = layer( "M5"    type( "drawing" "vdd" "gnd" ))
    ma             = layer( "MA"    type( "drawing" "vdd" "gnd" ))
    ml             = layer( "ML"    type( "drawing" "vdd" "gnd" ))
    mt             = layer( "MT"    type( "drawing" "vdd" "gnd" ))
    mz             = layer( "MZ"    type( "drawing" "vdd" "gnd" ))
    nr             = layer( "NR"    type( "drawing"             ))
    ns             = layer( "NS"    type( "drawing"             ))
    nv             = layer( "NV"    type( "drawing"             ))
    nw             = layer( "NW"    type( "drawing"             ))
    op             = layer( "OP"    type( "drawing"             ))
    pv             = layer( "PV"    type( "drawing"             ))
    pc             = layer( "PC"    type( "drawing"             ))
    pcfuse         = layer( "PC"    type( "FUSE"                ))
    pcing          = layer( "PCING" type( "drawing"             ))
    pd             = layer( "BN"    type( "DEV"                 ))
    ph             = layer( "PH"    type( "drawing"             ))
    pi             = layer( "PI"    type( "drawing"             ))
    pr             = layer( "PR"    type( "drawing"             ))
    qt             = layer( "QT"    type( "drawing"             ))
    rn             = layer( "RN"    type( "drawing"             ))
    rp             = layer( "RP"    type( "drawing"             ))
    rr             = layer( "RR"    type( "drawing"             ))
    rx             = layer( "RX"    type( "drawing"             ))
    te             = layer( "TE"    type( "drawing"             ))
    tf             = layer( "TF"    type( "drawing"             ))
    tg             = layer( "TG"    type( "drawing"             ))
    ti             = layer( "TI"    type( "drawing"             ))
    tv             = layer( "TV"    type( "drawing"             ))
    v1             = layer( "V1"    type( "drawing"             ))
    v1bar          = layer( "V1BAR" type( "drawing"             ))
    v2             = layer( "V2"    type( "drawing"             ))
    v2bar          = layer( "V2BAR" type( "drawing"             ))
    v3             = layer( "V3"    type( "drawing"             ))
    v3bar          = layer( "V3BAR" type( "drawing"             ))
    v4             = layer( "V4"    type( "drawing"             ))
    v4bar          = layer( "V4BAR" type( "drawing"             ))
    v5             = layer( "V5"    type( "drawing"             ))
    v5bar          = layer( "V5BAR" type( "drawing"             ))


    ;===== DUMMY DESIGN and UTILITY LAYERS =====

    amexclud       = layer( "AM"          type( "TRANS"       ))
    bfcus          = layer( "BF"          type( "user"        ))
    bfmoat         = layer( "OUTLINE"     type( "BFMOAT"      ))
    bipolar        = layer( "BIPOLAR"     type( "drawing"     ))
    bondpad        = layer( "PAD"         type( "DEV"         ))
    bperi          = layer( "OUTLINE"     type( "BPERI"       ))
    btcus          = layer( "BT"          type( "user"        ))
    c4lv           = layer( "C4"          type( "LV"          ))
    cap            = layer( "OUTLINE"     type( "CAP"         ))
    chipedge       = layer( "CHIPEDGE"    type( "drawing"     ))
    crackstop      = layer( "CRACKSTOP"   type( "drawing"     ))
    cupillar       = layer( "PAD"         type( "PILLAR"      ))
    dcap           = layer( "PC"          type( "CAP"         ))
    dgv            = layer( "DGV"         type( "drawing"     ))
    di             = layer( "DI"          type( "drawing"     ))
    dipi           = layer( "DIPI"        type( "drawing"     ))
    dns_sram       = layer( "FEATURE"     type( "DNSRAM"      ))
    ds_match       = layer( "DS"          type( "drawing"     ))
    e1_coil        = layer( "E1"          type( "COIL"        ))
    e1exclud       = layer( "E1"          type( "TRANS"       ))
    esd_cdm        = layer( "ESD"         type( "cdm"         ))
    esdrf          = layer( "ESDUMMY"     type( "rf"          ))
    esdummy        = layer( "ESDUMMY"     type( "drawing"     ))
    fivevonly      = layer( "FIVEVONLY"   type( "drawing"     ))
    fltgate        = layer( "FLTGATE"     type( "drawing"     ))
    grlogic        = layer( "GRLOGIC"     type( "drawing"     ))
    guardrng       = layer( "GUARDRNG"    type( "drawing"     ))
    guardedge      = layer( "GUARDEDGE"   type( "drawing"     ))
    hrcus          = layer( "HR"          type( "user"        ))
    ind_filt       = layer( "OUTLINE"     type( "IND"         ))
    logobnd        = layer( "LOGOBND"     type( "drawing"     ))
    lowcrnt        = layer( "OUTLINE"     type( "LOWCRNT"     ))
    lvdummy        = layer( "LVDUMMY"     type( "drawing"     ))
    m1chexcl       = layer( "M1"          type( "CHEXCL"      ))
    m1exclud       = layer( "M1"          type( "TRANS"       ))
    m2exclud       = layer( "M2"          type( "TRANS"       ))
    m3_coil        = layer( "M3"          type( "COIL"        ))
    m3exclud       = layer( "M3"          type( "TRANS"       ))
    m4_coil        = layer( "M4"          type( "COIL"        ))
    m4exclud       = layer( "M4"          type( "TRANS"       ))
    m5_coil        = layer( "M5"          type( "COIL"        ))
    m5exclud       = layer( "M5"          type( "TRANS"       ))
    maexclud       = layer( "MA"          type( "TRANS"       ))
    mimhd          = layer( "MIM"         type( "HD"          ))
    mimhk          = layer( "MIM"         type( "HK"          ))
    mlexclud       = layer( "ML"          type( "TRANS"       ))
    mosvar         = layer( "OUTLINE"     type( "MOSVARACTOR" ))
    mpw_edge       = layer( "MPW_EDGE"    type( "drawing"     ))
    mt_coil        = layer( "MT"          type( "COIL"        ))
    mtexclud       = layer( "MT"          type( "TRANS"       ))
    mzexclud       = layer( "MZ"          type( "TRANS"       ))
    nixbf          = layer( "BF"          type( "nix"         ))
    nixbt          = layer( "BT"          type( "nix"         ))
    nixhr          = layer( "HR"          type( "nix"         ))
    nohr           = layer( "NOHR"        type( "drawing"     ))
    noibmcrackstop = layer( "NOIBMCS"     type( "drawing"     ))
   ;noplymd        = layer( "NOPLYMD"     type( "drawing"     ))
    nosubc         = layer( "OUTLINE"     type( "NOSUBC"      ))
    nwasp          = layer( "NWASP"       type( "drawing"     ))
    outlinefill    = layer( "OUTLINEFILL" type( "drawing"     ))
    padfiltr       = layer( "OUTLINE"     type( "FILTER"      ))
    pcexclud       = layer( "PC"          type( "exclude"     ))
    plyoncrk       = layer( "PLYONCRK"    type( "drawing"     ))
    reshv          = layer( "RES"         type( "HV"          ))
    rf_modfill     = layer( "RF_MODFILL"  type( "drawing"     ))
    rx5v           = layer( "RX5V"        type( "drawing"     ))
    rxexclud       = layer( "RX"          type( "exclude"     ))
    sblk           = layer( "SBLK"        type( "drawing"     ))
    scgate         = layer( "SCGATE"      type( "drawing"     ))
    schky          = layer( "SCHKY"       type( "drawing"     ))
    seg_gring      = layer( "GUARDRNG"    type( "SEGMENTED"   ))
    tline_am       = layer( "AM"          type( "IND"         ))
    tline_ma       = layer( "MA"          type( "IND"         ))
    tline_ml       = layer( "ML"          type( "IND"         ))
    trans          = layer( "OUTLINE"     type( "TRANS"       ))
    vncapcount     = layer( "VNCAP"       type( "count"       ))
    vncapm1        = layer( "M1"          type( "CAP"         ))
    vncapm2        = layer( "M2"          type( "CAP"         ))
    vncapm3        = layer( "M3"          type( "CAP"         ))
    vncapm4        = layer( "M4"          type( "CAP"         ))
    vncapm5        = layer( "M5"          type( "CAP"         ))
    vncapmt        = layer( "MT"          type( "CAP"         ))
    vncapparm      = layer( "VNCAP"       type( "parm"        ))
    vtsens         = layer( "VTSENS"      type( "drawing"     ))
    wellasp        = layer( "WELLASP"     type( "drawing"     ))
    wvr            = layer( "WVR"         type( "drawing"     ))
    zerovt         = layer( "ZEROVT"      type( "drawing"     ))


    ;===== LAYERS INPUT FOR NET/PIN COVERED CHECKING =====

    ca_net         = layer( "CA"    type( "net"       ))
    cab_net        = layer( "CABAR" type( "net"       ))
    e2_net         = layer( "E2"    type( "net"       ))
    ft_net         = layer( "FT"    type( "net"       ))
    ns_net         = layer( "NS"    type( "net"       ))
    nw_net         = layer( "NW"    type( "net"       ))
    pc_net         = layer( "PC"    type( "net"       ))
    v1_net         = layer( "V1"    type( "net"       ))
    v1b_net        = layer( "V1BAR" type( "net"       ))
    v2_net         = layer( "V2"    type( "net"       ))
    v2b_net        = layer( "V2BAR" type( "net"       ))
    v3_net         = layer( "V3"    type( "net"       ))
    v3b_net        = layer( "V3BAR" type( "net"       ))
    v4_net         = layer( "V4"    type( "net"       ))
    v4b_net        = layer( "V4BAR" type( "net"       ))
    v5_net         = layer( "V5"    type( "net"       ))
    v5b_net        = layer( "V5BAR" type( "net"       ))
    tv_net         = layer( "TV"    type( "net"       ))

    am_ntpn        = layer( "AM"    type( "net" "pin" ))
    dv_ntpn        = layer( "DV"    type( "net" "pin" ))
    e1_ntpn        = layer( "E1"    type( "net" "pin" ))
    lv_ntpn        = layer( "LV"    type( "net" "pin" ))
    m1_ntpn        = layer( "M1"    type( "net" "pin" ))
    m2_ntpn        = layer( "M2"    type( "net" "pin" ))
    m3_ntpn        = layer( "M3"    type( "net" "pin" ))
    m4_ntpn        = layer( "M4"    type( "net" "pin" ))
    m5_ntpn        = layer( "M5"    type( "net" "pin" ))
    ma_ntpn        = layer( "MA"    type( "net" "pin" ))
    ml_ntpn        = layer( "ML"    type( "net" "pin" ))
    mt_ntpn        = layer( "MT"    type( "net" "pin" ))
    nw_ntpn        = layer( "NW"    type( "net" "pin" ))
    rx_ntpn        = layer( "RX"    type( "net" "pin" ))

    pc_pin         = layer( "PC"    type( "pin"       ))


    ;==========================================
    ;===== LAYERS INPUT FOR TEXT CHECKING =====
    ;==========================================

    ;===== MASK BUILD LAYERS =====

    amTxt          = text( "AM"          type( "drawing" "vdd" "gnd" ) idOnly )
    asTxt          = text( "AS"          type( "drawing"             ) idOnly )
    bbTxt          = text( "BB"          type( "drawing"             ) idOnly )
    bfTxt          = text( "BF"          type( "drawing"             ) idOnly )
    bhTxt          = text( "BH"          type( "drawing"             ) idOnly )
    bnTxt          = text( "BN"          type( "drawing"             ) idOnly )
    bpTxt          = text( "BP"          type( "drawing"             ) idOnly )
    bp2ndTxt       = text( "BP2ND"       type( "drawing"             ) idOnly )
    btTxt          = text( "BT"          type( "drawing"             ) idOnly )
    caTxt          = text( "CA"          type( "drawing"             ) idOnly )
    cabarTxt       = text( "CABAR"       type( "drawing"             ) idOnly )
    deTxt          = text( "DE"          type( "drawing"             ) idOnly )
    dfTxt          = text( "DF"          type( "drawing"             ) idOnly )
    dgTxt          = text( "DG"          type( "drawing"             ) idOnly )
    dvTxt          = text( "DV"          type( "drawing"             ) idOnly )
    e1Txt          = text( "E1"          type( "drawing" "vdd" "gnd" ) idOnly )
    e2Txt          = text( "E2"          type( "drawing"             ) idOnly )
    ftTxt          = text( "FT"          type( "drawing"             ) idOnly )
    ftbarTxt       = text( "FT"          type( "BAR"                 ) idOnly )
    hrTxt          = text( "HR"          type( "drawing"             ) idOnly )
    htTxt          = text( "HT"          type( "drawing"             ) idOnly )
    jcTxt          = text( "JC"          type( "drawing"             ) idOnly )
    jdTxt          = text( "JD"          type( "drawing"             ) idOnly )
    jsTxt          = text( "JS"          type( "drawing"             ) idOnly )
    k1Txt          = text( "K1"          type( "drawing"             ) idOnly )
    lvTxt          = text( "LV"          type( "drawing"             ) idOnly )
    m1Txt          = text( "M1"          type( "drawing" "vdd" "gnd" ) idOnly )
    m2Txt          = text( "M2"          type( "drawing" "vdd" "gnd" ) idOnly )
    m3Txt          = text( "M3"          type( "drawing" "vdd" "gnd" ) idOnly )
    m4Txt          = text( "M4"          type( "drawing" "vdd" "gnd" ) idOnly )
    m5Txt          = text( "M5"          type( "drawing" "vdd" "gnd" ) idOnly )
    maTxt          = text( "MA"          type( "drawing" "vdd" "gnd" ) idOnly )
    mlTxt          = text( "ML"          type( "drawing" "vdd" "gnd" ) idOnly )
    mtTxt          = text( "MT"          type( "drawing" "vdd" "gnd" ) idOnly )
    mzTxt          = text( "MZ"          type( "drawing" "vdd" "gnd" ) idOnly )
    nrTxt          = text( "NR"          type( "drawing"             ) idOnly )
    nsTxt          = text( "NS"          type( "drawing"             ) idOnly )
    nvTxt          = text( "NV"          type( "drawing"             ) idOnly )
    nwTxt          = text( "NW"          type( "drawing"             ) idOnly )
    opTxt          = text( "OP"          type( "drawing"             ) idOnly )
    pvTxt          = text( "PV"          type( "drawing"             ) idOnly )
    pcTxt          = text( "PC"          type( "drawing"             ) idOnly )
    pcfuseTxt      = text( "PC"          type( "FUSE"                ) idOnly )
    pcingTxt       = text( "PCING"       type( "drawing"             ) idOnly )
    pdTxt          = text( "BN"          type( "DEV"                 ) idOnly )
    phTxt          = text( "PH"          type( "drawing"             ) idOnly )
    piTxt          = text( "PI"          type( "drawing"             ) idOnly )
    prTxt          = text( "PR"          type( "drawing"             ) idOnly )
    qtTxt          = text( "QT"          type( "drawing"             ) idOnly )
    rnTxt          = text( "RN"          type( "drawing"             ) idOnly )
    rpTxt          = text( "RP"          type( "drawing"             ) idOnly )
    rrTxt          = text( "RR"          type( "drawing"             ) idOnly )
    rxTxt          = text( "RX"          type( "drawing"             ) idOnly )
    teTxt          = text( "TE"          type( "drawing"             ) idOnly )
    tfTxt          = text( "TF"          type( "drawing"             ) idOnly )
    tgTxt          = text( "TG"          type( "drawing"             ) idOnly )
    tiTxt          = text( "TI"          type( "drawing"             ) idOnly )
    tvTxt          = text( "TV"          type( "drawing"             ) idOnly )
    v1Txt          = text( "V1"          type( "drawing"             ) idOnly )
    v1barTxt       = text( "V1BAR"       type( "drawing"             ) idOnly )
    v2Txt          = text( "V2"          type( "drawing"             ) idOnly )
    v2barTxt       = text( "V2BAR"       type( "drawing"             ) idOnly )
    v3Txt          = text( "V3"          type( "drawing"             ) idOnly )
    v3barTxt       = text( "V3BAR"       type( "drawing"             ) idOnly )
    v4Txt          = text( "V4"          type( "drawing"             ) idOnly )
    v4barTxt       = text( "V4BAR"       type( "drawing"             ) idOnly )
    v5Txt          = text( "V5"          type( "drawing"             ) idOnly )
    v5barTxt       = text( "V5BAR"       type( "drawing"             ) idOnly )


    ;===== DUMMY DESIGN and UTILITY LAYERS =====

    amexcludTxt       = text( "AM"          type( "TRANS"       ) idOnly )
    bfcusTxt          = text( "BF"          type( "user"        ) idOnly )
    bfmoatTxt         = text( "OUTLINE"     type( "BFMOAT"      ) idOnly )
    bipolarTxt        = text( "BIPOLAR"     type( "drawing"     ) idOnly )
    bondpadTxt        = text( "PAD"         type( "DEV"         ) idOnly )
    bperiTxt          = text( "OUTLINE"     type( "BPERI"       ) idOnly )
    btcusTxt          = text( "BT"          type( "user"        ) idOnly )
    c4lvTxt           = text( "C4"          type( "LV"          ) idOnly )
    capTxt            = text( "OUTLINE"     type( "CAP"         ) idOnly )
    chipedgeTxt       = text( "CHIPEDGE"    type( "drawing"     ) idOnly )
    crackstopTxt      = text( "CRACKSTOP"   type( "drawing"     ) idOnly )
    cupillarTxt       = text( "PAD"         type( "PILLAR"      ) idOnly )
    dcapTxt           = text( "PC"          type( "CAP"         ) idOnly )
    dgvTxt            = text( "DGV"         type( "drawing"     ) idOnly )
    diTxt             = text( "DI"          type( "drawing"     ) idOnly )
    dipiTxt           = text( "DIPI"        type( "drawing"     ) idOnly )
    dns_sramTxt       = text( "FEATURE"     type( "DNSRAM"      ) idOnly )
    ds_matchTxt       = text( "DS"          type( "drawing"     ) idOnly )
    e1_coilTxt        = text( "E1"          type( "COIL"        ) idOnly )
    e1excludTxt       = text( "E1"          type( "TRANS"       ) idOnly )
    esd_cdmTxt        = text( "ESD"         type( "cdm"         ) idOnly )
    esdrfTxt          = text( "ESDUMMY"     type( "rf"          ) idOnly )
    esdummyTxt        = text( "ESDUMMY"     type( "drawing"     ) idOnly )
    fivevonlyTxt      = text( "FIVEVONLY"   type( "drawing"     ) idOnly )
    fltgateTxt        = text( "FLTGATE"     type( "drawing"     ) idOnly )
    grlogicTxt        = text( "GRLOGIC"     type( "drawing"     ) idOnly )
    hrcusTxt          = text( "HR"          type( "user"        ) idOnly )
    ind_filtTxt       = text( "OUTLINE"     type( "IND"         ) idOnly )
    logobndTxt        = text( "LOGOBND"     type( "drawing"     ) idOnly )
    lowcrntTxt        = text( "OUTLINE"     type( "LOWCRNT"     ) idOnly )
    lvdummyTxt        = text( "LVDUMMY"     type( "drawing"     ) idOnly )
    m1chexclTxt       = text( "M1"          type( "CHEXCL"      ) idOnly )
    m1excludTxt       = text( "M1"          type( "TRANS"       ) idOnly )
    m2excludTxt       = text( "M2"          type( "TRANS"       ) idOnly )
    m3_coilTxt        = text( "M3"          type( "COIL"        ) idOnly )
    m3excludTxt       = text( "M3"          type( "TRANS"       ) idOnly )
    m4_coilTxt        = text( "M4"          type( "COIL"        ) idOnly )
    m4excludTxt       = text( "M4"          type( "TRANS"       ) idOnly )
    m5_coilTxt        = text( "M5"          type( "COIL"        ) idOnly )
    m5excludTxt       = text( "M5"          type( "TRANS"       ) idOnly )
    maexcludTxt       = text( "MA"          type( "TRANS"       ) idOnly )
    mimhdTxt          = text( "MIM"         type( "HD"          ) idOnly )
    mimhkTxt          = text( "MIM"         type( "HK"          ) idOnly )
    mlexcludTxt       = text( "ML"          type( "TRANS"       ) idOnly )
    mosvarTxt         = text( "OUTLINE"     type( "MOSVARACTOR" ) idOnly )
    mt_coilTxt        = text( "MT"          type( "COIL"        ) idOnly )
    mtexcludTxt       = text( "MT"          type( "TRANS"       ) idOnly )
    mzexcludTxt       = text( "MZ"          type( "TRANS"       ) idOnly )
    nixbfTxt          = text( "BF"          type( "nix"         ) idOnly )
    nixbtTxt          = text( "BT"          type( "nix"         ) idOnly )
    nixhrTxt          = text( "HR"          type( "nix"         ) idOnly )
    nohrTxt           = text( "NOHR"        type( "drawing"     ) idOnly )
    noibmcrackstopTxt = text( "NOIBMCS"     type( "drawing"     ) idOnly )
   ;noplymdTxt        = text( "NOPLYMD"     type( "drawing"     ) idOnly )
    nosubcTxt         = text( "OUTLINE"     type( "NOSUBC"      ) idOnly )
    nwaspTxt          = text( "NWASP"       type( "drawing"     ) idOnly )
    outlinefillTxt    = text( "OUTLINEFILL" type( "drawing"     ) idOnly )
    padfiltrTxt       = text( "OUTLINE"     type( "FILTER"      ) idOnly )
    pcexcludTxt       = text( "PC"          type( "exclude"     ) idOnly )
    plyoncrkTxt       = text( "PLYONCRK"    type( "drawing"     ) idOnly )
    reshvTxt          = text( "RES"         type( "HV"          ) idOnly )
    rf_modfillTxt     = text( "RF_MODFILL"  type( "drawing"     ) idOnly )
    rx5vTxt           = text( "RX5V"        type( "drawing"     ) idOnly )
    rxexcludTxt       = text( "RX"          type( "exclude"     ) idOnly )
    sblkTxt           = text( "SBLK"        type( "drawing"     ) idOnly )
    scgateTxt         = text( "SCGATE"      type( "drawing"     ) idOnly )
    schkyTxt          = text( "SCHKY"       type( "drawing"     ) idOnly )
    tline_amTxt       = text( "AM"          type( "IND"         ) idOnly )
    tline_maTxt       = text( "MA"          type( "IND"         ) idOnly )
    tline_mlTxt       = text( "ML"          type( "IND"         ) idOnly )
    transTxt          = text( "OUTLINE"     type( "TRANS"       ) idOnly )
    vncapcountTxt     = text( "VNCAP"       type( "count"       ) idOnly )
    vncapm1Txt        = text( "M1"          type( "CAP"         ) idOnly )
    vncapm2Txt        = text( "M2"          type( "CAP"         ) idOnly )
    vncapm3Txt        = text( "M3"          type( "CAP"         ) idOnly )
    vncapm4Txt        = text( "M4"          type( "CAP"         ) idOnly )
    vncapm5Txt        = text( "M5"          type( "CAP"         ) idOnly )
    vncapmtTxt        = text( "MT"          type( "CAP"         ) idOnly )
    vncapparmTxt      = text( "VNCAP"       type( "parm"        ) idOnly )
    vtsensTxt         = text( "VTSENS"      type( "drawing"     ) idOnly )
    wellaspTxt        = text( "WELLASP"     type( "drawing"     ) idOnly )
    wvrTxt            = text( "WVR"         type( "drawing"     ) idOnly )
    zerovtTxt         = text( "ZEROVT"      type( "drawing"     ) idOnly )


    ;===== MISC LAYER DEFINITIONS =====

    amFill        = layer( "AM" type( "fill"    ))
    e1Fill        = layer( "E1" type( "fill"    ))
    m1Fill        = layer( "M1" type( "fill"    ))
    m2Fill        = layer( "M2" type( "fill"    ))
    m3Fill        = layer( "M3" type( "fill"    ))
    m4Fill        = layer( "M4" type( "fill"    ))
    m5Fill        = layer( "M5" type( "fill"    ))
    maFill        = layer( "MA" type( "fill"    ))
    mlFill        = layer( "ML" type( "fill"    ))
    mtFill        = layer( "MT" type( "fill"    ))
    pcFill        = layer( "PC" type( "fill"    ))
    rxFill        = layer( "RX" type( "fill"    ))

    m1exclud_rl03 = layer( "M1" type( "exclude" ))
    m2exclud_rl03 = layer( "M1" type( "exclude" ))
    m3exclud_rl03 = layer( "M1" type( "exclude" ))
    m4exclud_rl03 = layer( "M1" type( "exclude" ))
    m5exclud_rl03 = layer( "M1" type( "exclude" ))

    ipci          = cellBoundary( "*IPCI*" ) ;for PCING checking (781b)

    origin        = layerGeometry( (root rectangle(0.00:0.00 10.00:10.00) ) )

    chipedge_rby  = layerGeometry( ("" rectangle(0.00:0.00 0.10:0.10) ))
    chipedge_ref  = layerGeometry( ("" rectangle(0.04:0.00 0.06:0.02)
                                       rectangle(0.08:0.00 0.10:0.02)
                                       rectangle(0.00:0.04 0.02:0.06)
                                       rectangle(0.00:0.08 0.02:0.10) ))


    ;===== SRAM WAIVER LAYERS (by cell name) =====

    sram_std  = cellBoundary( "B74HCELL2" "B74RCELL2" "B74TCELL2" "B75HCELL2" "B75RCELL2" "B75TCELL2" )

    dsram     = cellBoundary( "srm_dense_6t*" "srm_dense_gap*" "srm_twist*" "srm_notwist*" "scel481e" "scel481o" 
                              "A7RCELL2_H" "base_pcap" "base_pcap2" "base_pcapo" "BASE_FLMW" "BASE_FLMW_M1"
                              "BASE_FLMW_POS" "BASE_CCMW_A7RCELL2_H" "A7RCELL2_H_MODEL" "*fltcc*" "*FLTCC*" "*flcc*" "*FLCC*"
                              "A7RHCELL2_H" "BASE_FLMW_H" "A7RCELL2_H_POS" "BASE_CCMW_ARTISAN_H_POS" "BASE_FLMW_H_POS"
                              "BASE_CCMW_H_ARTISAN_H_POS" "7RFH_*" "7RFHCELL2_H" "A7FHCELL2_H" "A7RFHCELL2_H"
                              "BASE_CCMW_A7RFHCELL2_H" "A7RFHCELL2_H_POS" "A74CELL2_H" "A74CELL2" "A74H_CELL16"
                              "A74H_WLDVR" "A73CELL2_H" "A73CELL2" "A73H_CELL16" "A73H_WLDVR" "A74F_CELL16" "A74F_WLDVR"
                              "A73F_CELL16" "A73F_WLDVR" "A74TCELL2*" "A75TCELL2*" "A74DCELL2*" "A75DCELL2*")
 
    sram_hvt  = cellBoundary( "R7HCELL2"
                              "7RFHCELL1_P_H_ra1_hvt"
                              "7RFHCELL2_H_pc_ra1_hvt"
                              "7RFHCELL2_H_ra1_hvt"
                              "7RFHCELL2_H_rf1_hvt"
                              "7RFH_CELL2_H_M"
                              "7RFH_CELL2_H_ccmw_rf1_hvt"
                              "7RFH_CELL2_H_flmwg_ra1_hvt"
                              "7RFH_CELL2_H_flmwgl_ra1_hvt"
                              "7RFH_CELL2_H_flmwp_ra1_hvt"
                              "7RFH_CELL2_H_flmwpl_ra1_hvt"
                              "A7RCELL1_H_ra1_rvt"
                              "A7RCELL1_H_rf1_rvt"
                              "A7RCELL2_H_MODEL_rf1_rvt"
                              "A7RCELL2_H_ra1_rvt"
                              "A7RCELL2_H_rf1_rvt"
                              "BASE_CCMW_A7RCELL2_H_rf1_rvt"
                              "BASE_FLMW_M1_rf1_hvt"
                              "BASE_FLMW_M1_rf1_rvt"
                              "BASE_FLMW_ra1_rvt"
                              "BASE_FLMW_rf1_hvt"
                              "BASE_FLMW_rf1_rvt"
                              "*FLCCMBLST" "*FLCCMBLST" "*FLCCMBLST2" "*FLCCMBLST2" "*FLCCMBLSTU"
                              "*FLCCSTRAPR" "*FLCCSTRAP_ENDCAP"
                              "*FLTCC"
                              "*PCAP" "*PCAP2" "*PCAP2_M1" "*PCAPG" "*PCAPG2"
                              "*PCAPO_MBLBASE"
                              "*PCAPP" "*PCAPP2"
                              "base_pcap2_rf1_hvt" "base_pcap_rf1_hvt" "base_pcapo_rf1_hvt" )

    sram_dual = cellBoundary( "D75HTRAM8T_10*"
                              "D75HTRAM8T_EDGELR*"
                              "D75HTRAM8T_EDGETB_L*"
                              "D75HTRAM8T_EDGETB_R*"
                              "D75HRAM8T_10*"
                              "D75HRAM8T_EDGELR*"
                              "D75HRAM8T_EDGETB_L*"
                              "D75HRAM8T_EDGETB_R*"
                              "D74HTRAM8T_10*"
                              "D74HTRAM8T_EDGELR*"
                              "D74HTRAM8T_EDGETB_L*"
                              "D74HTRAM8T_EDGETB_R*"
                              "D74HRAM8T_10*"
                              "D74HRAM8T_EDGELR*"
                              "D74HRAM8T_EDGETB_L*"
                              "D74HRAM8T_EDGETB_R*"
                              "D75TRAM8T_10*"
                              "D75TRAM8T_EDGELR*"
                              "D75TRAM8T_EDGETB_L*"
                              "D75TRAM8T_EDGETB_R*"
                              "D75DRAM8T_10*"
                              "D75DRAM8T_EDGELR*"
                              "D75DRAM8T_EDGETB_L*"
                              "D75DRAM8T_EDGETB_R*"
                              "D74TRAM8T_10*"
                              "D74TRAM8T_EDGELR*"
                              "D74TRAM8T_EDGETB_L*"
                              "D74TRAM8T_EDGETB_R*"
                              "D74DRAM8T_10*"
                              "D74DRAM8T_EDGELR*"
                              "D74DRAM8T_EDGETB_L*"
                              "D74DRAM8T_EDGETB_R*" )
  );End layerDefs DF2


  ;===============================
  ;===== LAYERS INPUT (GDS2) =====
  ;===============================

  layerDefs( "GDS2"

    ;===== MASK BUILD LAYERS =====

    am             = layer(  53  type(   0 ))
    as             = layer(  12  type( 203 ))
    bb             = layer(   8  type(   0 ))
    bf             = layer(   5  type(   0 ))
    bh             = layer(  12  type(   5 ))
    bn             = layer(  11  type(   0 ))
    bp             = layer(  10  type(   0 ))
    bp2nd          = layer(  10  type(  18 ))
    bt             = layer(  64  type(   6 ))
    ca             = layer(  14  type(   0 ))
    cabar          = layer(  14  type(   1 ))
    de             = layer(  12  type(   7 ))
    df             = layer(  12  type(  55 ))
    dg             = layer(  12  type(   4 ))
    dv             = layer(  47  type(   0 ))
    e1             = layer(  45  type(   0 ))
    e2             = layer(  52  type(   0 ))
    ft             = layer( 127  type(   0 ))
    ftbar          = layer( 127  type(   1 ))
    hr             = layer(  64  type(   4 ))
    ht             = layer(  30  type(  20 ))
    jc             = layer( 212  type(  55 ))
    jd             = layer(   9  type(   4 ))
    js             = layer( 212  type( 135 ))
    k1             = layer(   6  type(   1 ))
    lv             = layer(  28  type(   0 ))
    m1             = layer(  15  type(   0 ))
    m2             = layer(  17  type(   0 ))
    m3             = layer(  19  type(   0 ))
    m4             = layer(  21  type(   0 ))
    m5             = layer(  31  type(   0 ))
    ma             = layer(  48  type(   0 ))
    ml             = layer(  46  type(   0 ))
    mt             = layer(  25  type(   0 ))
    mz             = layer(  38  type(   0 ))
    nr             = layer(  12  type(   8 ))
    ns             = layer(   0  type(   0 ))
    nv             = layer(  12  type(  30 ))
    nw             = layer(   4  type(   0 ))
    op             = layer(  37  type(   0 ))
    pc             = layer(   7  type(   0 ))
    pcing          = layer(   7  type(   4 ))
    pcfuse         = layer(   7  type(  44 ))
    pd             = layer(  11  type(   1 ))
    ph             = layer(  12  type(   6 ))
    pi             = layer(   1  type(   4 ))
    pr             = layer(  12  type(   9 ))
    pv             = layer(  12  type(  31 ))
    qt             = layer(  30  type(   4 ))
    rn             = layer(  23  type(   0 ))
    rp             = layer(  63  type(  14 ))
    rr             = layer(  59  type(   0 ))
    rx             = layer(   2  type(   0 ))
    te             = layer(  12  type(  18 ))
    tf             = layer(  12  type(  91 ))
    tg             = layer(   7  type(  13 ))
    ti             = layer(   1  type(   0 ))
    tv             = layer(  26  type(   0 ))
    v1             = layer(  16  type(   0 ))
    v1bar          = layer(  16  type(   1 ))
    v2             = layer(  18  type(   0 ))
    v2bar          = layer(  18  type(   1 ))
    v3             = layer(  20  type(   0 ))
    v3bar          = layer(  20  type(   1 ))
    v4             = layer(  22  type(   0 ))
    v4bar          = layer(  22  type(   1 ))
    v5             = layer(  32  type(   0 ))
    v5bar          = layer(  32  type(   1 ))


    ;===== DUMMY DESIGN and UTILITY LAYERS =====

    amexclud       = layer(  53  type(  18 ))
    bfcus          = layer( 104  type(   3 ))
    bfmoat         = layer(  60  type(  19 ))
    bipolar        = layer(  12  type(  54 ))
    bondpad        = layer(  41  type(  25 ))
    bperi          = layer(  60  type(   1 ))
    btcus          = layer( 104  type( 142 ))
    c4lv           = layer(  41  type(  22 ))
    cap            = layer(  60  type(  15 ))
    chipedge       = layer(  62  type(   1 ))
    crackstop      = layer( 212  type( 176 ))
    cupillar       = layer(  41  type(  29 ))
    dcap           = layer(   7  type(  15 ))
    dgv            = layer(   6  type(   0 ))
    di             = layer(  29  type(   0 ))
    dipi           = layer( 212  type(   2 ))
    dns_sram       = layer(  12  type( 230 ))
    ds_match       = layer( 212  type(  95 ))
    e1_coil        = layer( 124  type(  19 ))
    e1exclud       = layer(  45  type(  18 ))
    esd_cdm        = layer(  12  type(  88 ))
    esdrf          = layer(  63  type(  33 ))
    esdummy        = layer(  63  type(  36 ))
    fivevonly      = layer( 212  type( 152 ))
    fltgate        = layer(  62  type(  16 ))
    grlogic        = layer(  63  type(  42 ))
    guardedge      = layer(  12  type(  36 ))
    guardrng       = layer(  12  type(  71 ))
    hrcus          = layer( 104  type( 148 ))
    ind_filt       = layer(  60  type(  4  ))
    logobnd        = layer(  62  type(   5 ))
    lowcrnt        = layer(  60  type(  28 ))
    lvdummy        = layer(  28  type(   1 ))
    m1chexcl       = layer(  15  type(  35 ))
    m1exclud       = layer(  15  type(  18 ))
    m2exclud       = layer(  17  type(  18 ))
    m3_coil        = layer(  19  type(  19 ))
    m3exclud       = layer(  19  type(  18 ))
    m4_coil        = layer(  21  type(  19 ))
    m4exclud       = layer(  21  type(  18 ))
    m5_coil        = layer(  31  type(  19 ))
    m5exclud       = layer(  31  type(  18 ))
    maexclud       = layer(  48  type(  18 ))
    mimhd          = layer(  61  type(  53 ))
    mimhk          = layer(  61  type(  51 ))
    mlexclud       = layer(  46  type(  18 ))
    mosvar         = layer(  60  type(  27 ))
    mpw_edge       = layer(  62  type(  48 ))
    mt_coil        = layer(  25  type(  19 ))
    mtexclud       = layer(  25  type(  18 ))
    mzexclud       = layer(  38  type(  18 ))
    nixbf          = layer( 106  type(   5 ))
    nixbt          = layer( 106  type(  83 ))
    nixhr          = layer( 106  type(  85 ))
    noibmcrackstop = layer( 208  type( 212 ))
    nohr           = layer(  64  type(   5 ))
   ;noplymd        = layer( 212  type( 136 ))
    nosubc         = layer( 213  type(  21 ))
    nwasp          = layer(   4  type(   3 ))
    outlinefill    = layer(  63  type(  87 ))
    padfiltr       = layer(  60  type(  32 ))
    pcexclud       = layer(   7  type(   2 ))
    plyoncrk       = layer(  62  type(   3 ))
    reshv          = layer(  61  type( 109 ))
    rf_modfill     = layer( 212  type( 183 ))
    rx5v           = layer(  61  type( 101 ))
    rxexclud       = layer(   2  type(   2 ))
    sblk           = layer(  12  type(  48 ))
    scgate         = layer(  62  type(  18 ))
    schky          = layer( 212  type( 174 ))
    seg_gring      = layer( 212  type( 246 ))
    tline_am       = layer(  53  type(   4 ))
    tline_ma       = layer(  48  type(  19 ))
    tline_ml       = layer(  46  type(  19 ))
    trans          = layer(  60  type(  18 ))
    vncapcount     = layer(  63  type( 105 ))
    vncapm1        = layer(  15  type(  80 ))
    vncapm2        = layer(  17  type(  80 ))
    vncapm3        = layer(  19  type(  80 ))
    vncapm4        = layer(  21  type(  80 ))
    vncapm5        = layer(  31  type(  80 ))
    vncapmt        = layer(  25  type(  80 ))
    vncapparm      = layer(  63  type( 104 ))
    vtsens         = layer(  12  type(  52 ))
    wellasp        = layer( 208  type( 213 ))
    wvr            = layer(  62  type(   0 ))
    zerovt         = layer(  12  type(   0 ))


    ;===== LAYERS INPUT FOR NET/PIN COVERED CHECKING =====

    ca_net         = layer(  14  type(  98 ))
    cab_net        = layer(  14  type(  99 ))
    e2_net         = layer(  52  type(  98 ))
    ft_net         = layer( 127  type(  98 ))
    ns_net         = layer(   0  type(  98 ))
    nw_net         = layer(   4  type(  98 ))
    pc_net         = layer(   7  type(  98 ))
    v1_net         = layer(  16  type(  98 ))
    v1b_net        = layer(  16  type(  99 ))
    v2_net         = layer(  18  type(  98 ))
    v2b_net        = layer(  18  type(  99 ))
    v3_net         = layer(  20  type(  98 ))
    v3b_net        = layer(  20  type(  99 ))
    v4_net         = layer(  22  type(  98 ))
    v4b_net        = layer(  22  type(  99 ))
    v5_net         = layer(  32  type(  98 ))
    v5b_net        = layer(  32  type(  99 ))
    tv_net         = layer(  26  type(  98 ))

    am_ntpn        = layer(  53  type(  98 32 ))
    dv_ntpn        = layer(  47  type(  98 32 ))
    e1_ntpn        = layer(  45  type(  98 32 ))
    lv_ntpn        = layer(  28  type(  98 32 ))
    m1_ntpn        = layer(  15  type(  98 32 ))
    m2_ntpn        = layer(  17  type(  98 32 ))
    m3_ntpn        = layer(  19  type(  98 32 ))
    m4_ntpn        = layer(  21  type(  98 32 ))
    m5_ntpn        = layer(  31  type(  98 32 ))
    ma_ntpn        = layer(  48  type(  98 32 ))
    ml_ntpn        = layer(  46  type(  98 32 ))
    mt_ntpn        = layer(  25  type(  98 32 ))
    nw_ntpn        = layer(   4  type(  98 32 ))
    rx_ntpn        = layer(   2  type(  98 32 ))

    pc_pin         = layer(   7  type(  32 ))


    ;===== LAYERS INPUT FOR TEXT CHECKING =====

    ;===== MASK BUILD LAYERS =====

    amTxt      = text(  53  type(   0 ) idOnly )
    asTxt      = text(  12  type( 203 ) idOnly )
    bbTxt      = text(   8  type(   0 ) idOnly )
    bfTxt      = text(   5  type(   0 ) idOnly )
    bhTxt      = text(  12  type(   5 ) idOnly )
    bnTxt      = text(  11  type(   0 ) idOnly )
    bpTxt      = text(  10  type(   0 ) idOnly )
    caTxt      = text(  14  type(   0 ) idOnly )
    cabarTxt   = text(  14  type(   1 ) idOnly )
    deTxt      = text(  12  type(   7 ) idOnly )
    dfTxt      = text(  12  type(  55 ) idOnly )
    dgTxt      = text(  12  type(   4 ) idOnly )
    dgvTxt     = text(   6  type(   0 ) idOnly )
    diTxt      = text(  29  type(   0 ) idOnly )
    dvTxt      = text(  47  type(   0 ) idOnly )
    e1Txt      = text(  45  type(   0 ) idOnly )
    e2Txt      = text(  52  type(   0 ) idOnly )
    ftTxt      = text( 127  type(   0 ) idOnly )
    ftbarTxt   = text( 127  type(   1 ) idOnly )
    htTxt      = text(  30  type(  20 ) idOnly )
    jdTxt      = text(   9  type(   4 ) idOnly )
    k1Txt      = text(   6  type(   1 ) idOnly )
    lvTxt      = text(  28  type(   0 ) idOnly )
    m1Txt      = text(  15  type(   0 ) idOnly )
    m2Txt      = text(  17  type(   0 ) idOnly )
    m3Txt      = text(  19  type(   0 ) idOnly )
    m4Txt      = text(  21  type(   0 ) idOnly )
    m5Txt      = text(  31  type(   0 ) idOnly )
    maTxt      = text(  48  type(   0 ) idOnly )
    mlTxt      = text(  46  type(   0 ) idOnly )
    mtTxt      = text(  25  type(   0 ) idOnly )
    nrTxt      = text(  12  type(   8 ) idOnly )
    nsTxt      = text(   0  type(   0 ) idOnly )
    nwTxt      = text(   4  type(   0 ) idOnly )
    opTxt      = text(  37  type(   0 ) idOnly )
    pcTxt      = text(   7  type(   0 ) idOnly )
    pcfuseTxt  = text(   7  type(  44 ) idOnly )
    pcingTxt   = text(   7  type(   4 ) idOnly )
    phTxt      = text(  12  type(   6 ) idOnly )
    piTxt      = text(   1  type(   4 ) idOnly )
    prTxt      = text(  12  type(   9 ) idOnly )
    qtTxt      = text(  30  type(   4 ) idOnly )
    rnTxt      = text(  23  type(   0 ) idOnly )
    rpTxt      = text(  63  type(  14 ) idOnly )
    rrTxt      = text(  59  type(   0 ) idOnly )
    rxTxt      = text(   2  type(   0 ) idOnly )
    v1Txt      = text(  16  type(   0 ) idOnly )
    v1barTxt   = text(  16  type(   1 ) idOnly )
    v2Txt      = text(  18  type(   0 ) idOnly )
    v2barTxt   = text(  18  type(   1 ) idOnly )
    v3Txt      = text(  20  type(   0 ) idOnly )
    v3barTxt   = text(  20  type(   1 ) idOnly )
    v4Txt      = text(  22  type(   0 ) idOnly )
    v4barTxt   = text(  22  type(   1 ) idOnly )
    v5Txt      = text(  32  type(   0 ) idOnly )
    v5barTxt   = text(  32  type(   1 ) idOnly )


    ;===== DUMMY DESIGN and UTILITY LAYERS =====

    amexcludTxt       = text(  53  type(  18 ) idOnly )
    bfcusTxt          = text( 104  type(   3 ) idOnly )
    bfmoatTxt         = text(  60  type(  19 ) idOnly )
    bipolarTxt        = text(  12  type(  54 ) idOnly )
    bondpadTxt        = text(  41  type(  25 ) idOnly )
    bperiTxt          = text(  60  type(   1 ) idOnly )
    btcusTxt          = text( 104  type( 142 ) idOnly )
    c4lvTxt           = text(  41  type(  22 ) idOnly )
    capTxt            = text(  60  type(  15 ) idOnly )
    chipedgeTxt       = text(  62  type(   1 ) idOnly )
    crackstopTxt      = text( 212  type( 176 ) idOnly )
    cupillarTxt       = text(  41  type(  29 ) idOnly )
    dcapTxt           = text(   7  type(  15 ) idOnly )
    dgvTxt            = text(   6  type(   0 ) idOnly )
    diTxt             = text(  29  type(   0 ) idOnly )
    dipiTxt           = text( 212  type(   2 ) idOnly )
    dns_sramTxt       = text(  12  type( 230 ) idOnly )
    ds_matchTxt       = text( 212  type(  95 ) idOnly )
    e1_coilTxt        = text( 124  type(  19 ) idOnly )
    e1excludTxt       = text(  45  type(  18 ) idOnly )
    esd_cdmTxt        = text(  12  type(  88 ) idOnly )
    esdrfTxt          = text(  63  type(  33 ) idOnly )
    esdummyTxt        = text(  63  type(  36 ) idOnly )
    fivevonlyTxt      = text( 212  type( 152 ) idOnly )
    fltgateTxt        = text(  62  type(  16 ) idOnly )
    grlogicTxt        = text(  63  type(  42 ) idOnly )
    hrcusTxt          = text( 104  type( 148 ) idOnly )
    ind_filtTxt       = text(  60  type(  4  ) idOnly )
    logobndTxt        = text(  62  type(   5 ) idOnly )
    lowcrntTxt        = text(  60  type(  28 ) idOnly )
    lvdummyTxt        = text(  28  type(   1 ) idOnly )
    m1chexclTxt       = text(  15  type(  35 ) idOnly )
    m1excludTxt       = text(  15  type(  18 ) idOnly )
    m2excludTxt       = text(  17  type(  18 ) idOnly )
    m3_coilTxt        = text(  19  type(  19 ) idOnly )
    m3excludTxt       = text(  19  type(  18 ) idOnly )
    m4_coilTxt        = text(  21  type(  19 ) idOnly )
    m4excludTxt       = text(  21  type(  18 ) idOnly )
    m5_coilTxt        = text(  31  type(  19 ) idOnly )
    m5excludTxt       = text(  31  type(  18 ) idOnly )
    maexcludTxt       = text(  48  type(  18 ) idOnly )
    mimhdTxt          = text(  61  type(  53 ) idOnly )
    mimhkTxt          = text(  61  type(  51 ) idOnly )
    mlexcludTxt       = text(  46  type(  18 ) idOnly )
    mosvarTxt         = text(  60  type(  27 ) idOnly )
    mt_coilTxt        = text(  25  type(  19 ) idOnly )
    mtexcludTxt       = text(  25  type(  18 ) idOnly )
    mzexcludTxt       = text(  38  type(  18 ) idOnly )
    nixbfTxt          = text( 106  type(   5 ) idOnly )
    nixbtTxt          = text( 106  type(  83 ) idOnly )
    nixhrTxt          = text( 106  type(  85 ) idOnly )
    noibmcrackstopTxt = text( 208  type( 212 ) idOnly )
    nohrTxt           = text(  64  type(   5 ) idOnly )
   ;noplymdTxt        = text( 212  type( 136 ) idOnly )
    nosubcTxt         = text( 213  type(  21 ) idOnly )
    nwaspTxt          = text(   4  type(   3 ) idOnly )
    outlinefillTxt    = text(  63  type(  87 ) idOnly )
    padfiltrTxt       = text(  60  type(  32 ) idOnly )
    pcexcludTxt       = text(   7  type(   2 ) idOnly )
    plyoncrkTxt       = text(  62  type(   3 ) idOnly )
    reshvTxt          = text(  61  type( 109 ) idOnly )
    rf_modfillTxt     = text( 212  type( 183 ) idOnly )
    rx5vTxt           = text(  61  type( 101 ) idOnly )
    rxexcludTxt       = text(   2  type(   2 ) idOnly )
    sblkTxt           = text(  12  type(  48 ) idOnly )
    scgateTxt         = text(  62  type(  18 ) idOnly )
    schkyTxt          = text( 212  type( 174 ) idOnly )
    tline_amTxt       = text(  53  type(   4 ) idOnly )
    tline_maTxt       = text(  48  type(  19 ) idOnly )
    tline_mlTxt       = text(  46  type(  19 ) idOnly )
    transTxt          = text(  60  type(  18 ) idOnly )
    vncapcountTxt     = text(  63  type( 105 ) idOnly )
    vncapm1Txt        = text(  15  type(  80 ) idOnly )
    vncapm2Txt        = text(  17  type(  80 ) idOnly )
    vncapm3Txt        = text(  19  type(  80 ) idOnly )
    vncapm4Txt        = text(  21  type(  80 ) idOnly )
    vncapm5Txt        = text(  31  type(  80 ) idOnly )
    vncapmtTxt        = text(  25  type(  80 ) idOnly )
    vncapparmTxt      = text(  63  type( 104 ) idOnly )
    vtsensTxt         = text(  12  type(  52 ) idOnly )
    wellaspTxt        = text( 208  type( 213 ) idOnly )
    wvrTxt            = text(  62  type(   0 ) idOnly )
    zerovtTxt         = text(  12  type(   0 ) idOnly )


    ;===== MISC LAYER DEFINITIONS =====

    amFill        = layer( 131  type(  35 ))
    e1Fill        = layer( 124  type(  35 ))
    m1Fill        = layer(  15  type(  36 ))
    m2Fill        = layer(  17  type(  35 ))
    m3Fill        = layer(  19  type(  35 ))
    m4Fill        = layer(  21  type(  35 ))
    m5Fill        = layer(  31  type(  35 ))
    maFill        = layer( 125  type(  35 ))
    mlFill        = layer(  46  type(  35 ))
    mtFill        = layer(  25  type(  35 ))
    pcFill        = layer(   7  type(  35 ))
    rxFill        = layer(   2  type(  35 ))

    m1exclud_rl03 = layer(  15  type(   2 ))
    m2exclud_rl03 = layer(  15  type(   2 ))
    m3exclud_rl03 = layer(  15  type(   2 ))
    m4exclud_rl03 = layer(  15  type(   2 ))
    m5exclud_rl03 = layer(  15  type(   2 ))

    ipci          = cellBoundary( "*IPCI*" )

    chipedge_rby  = layerGeometry( ("" rectangle(0.00:0.00 0.10:0.10) ))
    chipedge_ref  = layerGeometry( ("" rectangle(0.04:0.00 0.06:0.02)
                                       rectangle(0.08:0.00 0.10:0.02)
                                       rectangle(0.00:0.04 0.02:0.06)
                                       rectangle(0.00:0.08 0.02:0.10) ))


    ;===== SRAM WAIVER LAYERS (by cell name) =====

    sram_std  = cellBoundary( "B74HCELL2" "B74RCELL2" "B74TCELL2" "B75HCELL2" "B75RCELL2" "B75TCELL2" )

    dsram     = cellBoundary( "srm_dense_6t*" "srm_dense_gap*" "srm_twist*" "srm_notwist*" "scel481e" "scel481o" 
                              "A7RCELL2_H" "base_pcap" "base_pcap2" "base_pcapo" "BASE_FLMW" "BASE_FLMW_M1"
                              "BASE_FLMW_POS" "BASE_CCMW_A7RCELL2_H" "A7RCELL2_H_MODEL" "*fltcc*" "*FLTCC*" "*flcc*" "*FLCC*"
                              "A7RHCELL2_H" "BASE_FLMW_H" "A7RCELL2_H_POS" "BASE_CCMW_ARTISAN_H_POS" "BASE_FLMW_H_POS"
                              "BASE_CCMW_H_ARTISAN_H_POS" "7RFH_*" "7RFHCELL2_H" "A7FHCELL2_H" "A7RFHCELL2_H"
                              "BASE_CCMW_A7RFHCELL2_H" "A7RFHCELL2_H_POS" "A74CELL2_H" "A74CELL2" "A74H_CELL16"
                              "A74H_WLDVR" "A73CELL2_H" "A73CELL2" "A73H_CELL16" "A73H_WLDVR" "A74F_CELL16" "A74F_WLDVR"
                              "A73F_CELL16" "A73F_WLDVR" "A74TCELL2*" "A75TCELL2*" "A74DCELL2*" "A75DCELL2*")
 
    sram_hvt  = cellBoundary( "R7HCELL2"
                              "7RFHCELL1_P_H_ra1_hvt"
                              "7RFHCELL2_H_pc_ra1_hvt"
                              "7RFHCELL2_H_ra1_hvt"
                              "7RFHCELL2_H_rf1_hvt"
                              "7RFH_CELL2_H_M"
                              "7RFH_CELL2_H_ccmw_rf1_hvt"
                              "7RFH_CELL2_H_flmwg_ra1_hvt"
                              "7RFH_CELL2_H_flmwgl_ra1_hvt"
                              "7RFH_CELL2_H_flmwp_ra1_hvt"
                              "7RFH_CELL2_H_flmwpl_ra1_hvt"
                              "A7RCELL1_H_ra1_rvt"
                              "A7RCELL1_H_rf1_rvt"
                              "A7RCELL2_H_MODEL_rf1_rvt"
                              "A7RCELL2_H_ra1_rvt"
                              "A7RCELL2_H_rf1_rvt"
                              "BASE_CCMW_A7RCELL2_H_rf1_rvt"
                              "BASE_FLMW_M1_rf1_hvt"
                              "BASE_FLMW_M1_rf1_rvt"
                              "BASE_FLMW_ra1_rvt"
                              "BASE_FLMW_rf1_hvt"
                              "BASE_FLMW_rf1_rvt"
                              "*FLCCMBLST" "*FLCCMBLST" "*FLCCMBLST2" "*FLCCMBLST2" "*FLCCMBLSTU"
                              "*FLCCSTRAPR" "*FLCCSTRAP_ENDCAP"
                              "*FLTCC"
                              "*PCAP" "*PCAP2" "*PCAP2_M1" "*PCAPG" "*PCAPG2"
                              "*PCAPO_MBLBASE"
                              "*PCAPP" "*PCAPP2"
                              "base_pcap2_rf1_hvt" "base_pcap_rf1_hvt" "base_pcapo_rf1_hvt" )

    sram_dual = cellBoundary( "D75HTRAM8T_10*"
                              "D75HTRAM8T_EDGELR*"
                              "D75HTRAM8T_EDGETB_L*"
                              "D75HTRAM8T_EDGETB_R*"
                              "D75HRAM8T_10*"
                              "D75HRAM8T_EDGELR*"
                              "D75HRAM8T_EDGETB_L*"
                              "D75HRAM8T_EDGETB_R*"
                              "D74HTRAM8T_10*"
                              "D74HTRAM8T_EDGELR*"
                              "D74HTRAM8T_EDGETB_L*"
                              "D74HTRAM8T_EDGETB_R*"
                              "D74HRAM8T_10*"
                              "D74HRAM8T_EDGELR*"
                              "D74HRAM8T_EDGETB_L*"
                              "D74HRAM8T_EDGETB_R*"
                              "D75TRAM8T_10*"
                              "D75TRAM8T_EDGELR*"
                              "D75TRAM8T_EDGETB_L*"
                              "D75TRAM8T_EDGETB_R*"
                              "D75DRAM8T_10*"
                              "D75DRAM8T_EDGELR*"
                              "D75DRAM8T_EDGETB_L*"
                              "D75DRAM8T_EDGETB_R*"
                              "D74TRAM8T_10*"
                              "D74TRAM8T_EDGELR*"
                              "D74TRAM8T_EDGETB_L*"
                              "D74TRAM8T_EDGETB_R*"
                              "D74DRAM8T_10*"
                              "D74DRAM8T_EDGELR*"
                              "D74DRAM8T_EDGETB_L*"
                              "D74DRAM8T_EDGETB_R*" )
  );End layerDefs GDS2


  ;===== CHECK FOR NET/PIN PURPOSE COVERAGE =====

  errorLayer( geomAndNot( ca_net  ca )     "ERROR: CA(net) not covered by CA(drawing) found!")
  errorLayer( geomAndNot( cab_net cabar )  "ERROR: CABAR(net) not covered by CABAR(drawing) found!")
  errorLayer( geomAndNot( e2_net  e2 )     "ERROR: E2(net) not covered by E2(drawing) found!")
  errorLayer( geomAndNot( ft_net  ft )     "ERROR: FT(net) not covered by FT(drawing) found!")
  errorLayer( geomAndNot( ns_net  ns )     "ERROR: NS(net) not covered by NS(drawing) found!")
  errorLayer( geomAndNot( nw_net  nw )     "ERROR: NW(net) not covered by NW(drawing) found!")
  errorLayer( geomAndNot( v1_net  v1 )     "ERROR: V1(net) not covered by V1(drawing) found!")
  errorLayer( geomAndNot( v1b_net v1bar )  "ERROR: V1BAR(net) not covered by V1BAR(drawing) found!")
  errorLayer( geomAndNot( v2_net  v2 )     "ERROR: V2(net) not covered by V2(drawing) found!")
  errorLayer( geomAndNot( v2b_net v2bar )  "ERROR: V2BAR(net) not covered by V2BAR(drawing) found!")
  errorLayer( geomAndNot( v3_net  v3 )     "ERROR: V3(net) not covered by V3(drawing) found!")
  errorLayer( geomAndNot( v3b_net v3bar )  "ERROR: V3BAR(net) not covered by V3BAR(drawing) found!")
  errorLayer( geomAndNot( v4_net  v4 )     "ERROR: V4(net) not covered by V4(drawing) found!")
  errorLayer( geomAndNot( v4b_net v4bar )  "ERROR: V4BAR(net) not covered by V4BAR(drawing) found!")
  errorLayer( geomAndNot( v5_net  v5 )     "ERROR: V5(net) not covered by V5(drawing) found!")
  errorLayer( geomAndNot( v5b_net v5bar )  "ERROR: V5BAR(net) not covered by V5BAR(drawing) found!")

  errorLayer( geomAndNot( am_ntpn am )     "ERROR: AM(net or pin) not covered by AM(drawing) found!")
  errorLayer( geomAndNot( dv_ntpn dv )     "ERROR: DV(net or pin) not covered by DV(drawing) found!")
  errorLayer( geomAndNot( e1_ntpn e1 )     "ERROR: E1(net or pin) not covered by E1(drawing) found!")
  errorLayer( geomAndNot( lv_ntpn lv )     "ERROR: LV(net or pin) not covered by LV(drawing) found!")
  errorLayer( geomAndNot( m1_ntpn m1 )     "ERROR: M1(net or pin) not covered by M1(drawing) found!")
  errorLayer( geomAndNot( m2_ntpn m2 )     "ERROR: M2(net or pin) not covered by M2(drawing) found!")
  errorLayer( geomAndNot( m3_ntpn m3 )     "ERROR: M3(net or pin) not covered by M3(drawing) found!")
  errorLayer( geomAndNot( m4_ntpn m4 )     "ERROR: M4(net or pin) not covered by M4(drawing) found!")
  errorLayer( geomAndNot( m5_ntpn m5 )     "ERROR: M5(net or pin) not covered by M5(drawing) found!")
  errorLayer( geomAndNot( ma_ntpn ma )     "ERROR: MA(net or pin) not covered by MA(drawing) found!")
  errorLayer( geomAndNot( ml_ntpn ml )     "ERROR: ML(net or pin) not covered by ML(drawing) found!")
  errorLayer( geomAndNot( mt_ntpn mt )     "ERROR: MT(net or pin) not covered by MT(drawing) found!")
  errorLayer( geomAndNot( nw_ntpn nw )     "ERROR: NW(net or pin) not covered by NW(drawing) found!")
  errorLayer( geomAndNot( rx_ntpn rx )     "ERROR: RX(net or pin) not covered by RX(drawing) found!")

  err_pc_nt =             geomAndNot( pc_net pc )
  err_pc_pn = geomAndNot( geomAndNot( pc_pin pc ) grlogic )
  errorLayer( err_pc_nt  "ERROR: PC(net) not covered by PC(drawing) found!")
  errorLayer( err_pc_pn  "ERROR: PC(pin) not covered by PC(drawing) found!")


  ;===== CHECKS FOR DRAWN LEVGEN SHAPES

  errorLayer( bf         "ERROR: SHAPE(S) ON A NON-DESIGN LEVEL FOUND! (BF)")
  errorLayer( bh         "ERROR: SHAPE(S) ON A NON-DESIGN LEVEL FOUND! (BH)")
  errorLayer( bn         "ERROR: SHAPE(S) ON A NON-DESIGN LEVEL FOUND! (BN)")
  errorLayer( de         "ERROR: SHAPE(S) ON A NON-DESIGN LEVEL FOUND! (DE)")
  errorLayer( df         "ERROR: SHAPE(S) ON A NON-DESIGN LEVEL FOUND! (DF)")
  errorLayer( ph         "ERROR: SHAPE(S) ON A NON-DESIGN LEVEL FOUND! (PH)")


  ;===== CHECKS FOR DRAWN FILL SHAPES

  errorLayer( amFill     "ERROR: SHAPE(S) ON AN IBM RESERVED LAYER FOUND! (AMFILL)")
  errorLayer( e1Fill     "ERROR: SHAPE(S) ON AN IBM RESERVED LAYER FOUND! (E1FILL)")
  errorLayer( m1Fill     "ERROR: SHAPE(S) ON AN IBM RESERVED LAYER FOUND! (M1FILL)")
  errorLayer( m2Fill     "ERROR: SHAPE(S) ON AN IBM RESERVED LAYER FOUND! (M2FILL)")
  errorLayer( m3Fill     "ERROR: SHAPE(S) ON AN IBM RESERVED LAYER FOUND! (M3FILL)")
  errorLayer( m4Fill     "ERROR: SHAPE(S) ON AN IBM RESERVED LAYER FOUND! (M4FILL)")
  errorLayer( m5Fill     "ERROR: SHAPE(S) ON AN IBM RESERVED LAYER FOUND! (M5FILL)")
  errorLayer( maFill     "ERROR: SHAPE(S) ON AN IBM RESERVED LAYER FOUND! (MAFILL)")
  errorLayer( mlFill     "ERROR: SHAPE(S) ON AN IBM RESERVED LAYER FOUND! (MLFILL)")
  errorLayer( mtFill     "ERROR: SHAPE(S) ON AN IBM RESERVED LAYER FOUND! (MTFILL)")
  errorLayer( pcFill     "ERROR: SHAPE(S) ON AN IBM RESERVED LAYER FOUND! (PCFILL)")
  errorLayer( rxFill     "ERROR: SHAPE(S) ON AN IBM RESERVED LAYER FOUND! (RXFILL)")


  ;===== CHECKS FOR PART NUMBER AREA (LOGOBND)

  ;RULE PN001
    errpn001_zerovt    = geomStraddle( zerovt     logobnd )
    errpn001_ft        = geomStraddle( ft         logobnd )
    errpn001_ftbar     = geomStraddle( ftbar      logobnd )
    errpn001_am        = geomStraddle( am         logobnd )
    errpn001_ma        = geomStraddle( ma         logobnd )
    errpn001_e1        = geomStraddle( e1         logobnd )
    errpn001_e2        = geomStraddle( e2         logobnd )
    errpn001_ml        = geomStraddle( ml         logobnd )
    errpn001_bb        = geomStraddle( bb         logobnd )
    errpn001_bf        = geomStraddle( bf         logobnd )
    errpn001_bfmoat    = geomStraddle( bfmoat     logobnd )
    errpn001_bh        = geomStraddle( bh         logobnd )
    errpn001_bn        = geomStraddle( bn         logobnd )
    errpn001_bp        = geomStraddle( bp         logobnd )
    errpn001_bp2nd     = geomStraddle( bp2nd      logobnd )
    errpn001_ca        = geomStraddle( ca         logobnd )
    errpn001_cabar     = geomStraddle( cabar      logobnd )
    errpn001_cap       = geomStraddle( cap        logobnd )
    errpn001_de        = geomStraddle( de         logobnd )
    errpn001_df        = geomStraddle( df         logobnd )
    errpn001_tg        = geomStraddle( tg         logobnd )
    errpn001_dg        = geomStraddle( dg         logobnd )
    errpn001_di        = geomStraddle( di         logobnd )
    errpn001_ht        = geomStraddle( ht         logobnd )
    errpn001_k1        = geomStraddle( k1         logobnd )
    errpn001_m1        = geomStraddle( m1         logobnd )
    errpn001_m1chexcl  = geomStraddle( m1chexcl   logobnd )
    errpn001_m2        = geomStraddle( m2         logobnd )
    errpn001_m3        = geomStraddle( m3         logobnd )
    errpn001_m4        = geomStraddle( m4         logobnd )
    errpn001_m5        = geomStraddle( m5         logobnd )
    errpn001_mimhk     = geomStraddle( mimhk      logobnd )
    errpn001_mimhd     = geomStraddle( mimhd      logobnd )
    errpn001_mosvar    = geomStraddle( mosvar     logobnd )
    errpn001_mt        = geomStraddle( mt         logobnd )
    errpn001_ns        = geomStraddle( ns         logobnd )
    errpn001_nw        = geomStraddle( nw         logobnd )
    errpn001_nwasp     = geomStraddle( nwasp      logobnd )
    errpn001_op        = geomStraddle( op         logobnd )
    errpn001_pc        = geomStraddle( pc         logobnd )
    errpn001_pcing     = geomStraddle( pcing      logobnd )
    errpn001_pd        = geomStraddle( pd         logobnd )
    errpn001_pcfuse    = geomStraddle( pcfuse     logobnd )
    errpn001_ph        = geomStraddle( ph         logobnd )
    errpn001_pi        = geomStraddle( pi         logobnd )
    errpn001_qt        = geomStraddle( qt         logobnd )
    errpn001_rn        = geomStraddle( rn         logobnd )
    errpn001_rp        = geomStraddle( rp         logobnd )
    errpn001_rr        = geomStraddle( rr         logobnd )
    errpn001_pr        = geomStraddle( pr         logobnd )
    errpn001_nr        = geomStraddle( nr         logobnd )
    errpn001_rx        = geomStraddle( rx         logobnd )
    errpn001_v1        = geomStraddle( v1         logobnd )
    errpn001_v1bar     = geomStraddle( v1bar      logobnd )
    errpn001_v2        = geomStraddle( v2         logobnd )
    errpn001_v2bar     = geomStraddle( v2bar      logobnd )
    errpn001_v3        = geomStraddle( v3         logobnd )
    errpn001_v3bar     = geomStraddle( v3bar      logobnd )
    errpn001_v4        = geomStraddle( v4         logobnd )
    errpn001_v4bar     = geomStraddle( v4bar      logobnd )
    errpn001_v5        = geomStraddle( v5         logobnd )
    errpn001_v5bar     = geomStraddle( v5bar      logobnd )
    errpn001_dgv       = geomStraddle( dgv        logobnd )
    errpn001_lvdummy   = geomStraddle( lvdummy    logobnd )
    errpn001_esd_cdm   = geomStraddle( esd_cdm    logobnd )
    errpn001_c4lv      = geomStraddle( c4lv       logobnd )
    errpn001_dipi      = geomStraddle( dipi       logobnd )
    errpn001_grlogic   = geomStraddle( grlogic    logobnd )
    errpn001_fltgate   = geomStraddle( fltgate    logobnd )
    errpn001_wvr       = geomStraddle( wvr        logobnd )
    errpn001_sblk      = geomStraddle( sblk       logobnd )
    errpn001_jd        = geomStraddle( jd         logobnd )
    errpn001_ind       = geomStraddle( ind_filt   logobnd )
    errpn001_bondpad   = geomStraddle( bondpad    logobnd )
    errpn001_tline_am  = geomStraddle( tline_am   logobnd )
    errpn001_tline_ma  = geomStraddle( tline_ma   logobnd )
    errpn001_tline_ml  = geomStraddle( tline_ml   logobnd )
    errpn001_lowcrnt   = geomStraddle( lowcrnt    logobnd )
    errpn001_vncapm1   = geomStraddle( vncapm1    logobnd )
    errpn001_vncapm2   = geomStraddle( vncapm2    logobnd )
    errpn001_vncapm3   = geomStraddle( vncapm3    logobnd )
    errpn001_vncapm4   = geomStraddle( vncapm4    logobnd )
    errpn001_vncapm5   = geomStraddle( vncapm5    logobnd )
    errpn001_vncapmt   = geomStraddle( vncapmt    logobnd )
    errpn001_vncapcnt  = geomStraddle( vncapcount logobnd )
    errpn001_vncapparm = geomStraddle( vncapparm  logobnd )
    errpn001_rx5v      = geomStraddle( rx5v       logobnd )
    errpn001_reshv     = geomStraddle( reshv      logobnd )
    errpn001_5vonly    = geomStraddle( fivevonly  logobnd )
    errpn001_bipolar   = geomStraddle( bipolar    logobnd )
    errpn001_schky     = geomStraddle( schky      logobnd )
    errpn001_scgate    = geomStraddle( scgate     logobnd )
    errpn001_plyoncrk  = geomStraddle( plyoncrk   logobnd )
    errpn001_ti        = geomStraddle( ti         logobnd )

    errorLayer( errpn001_zerovt     "GRPN001: Shape straddling LOGOBND found! (ZEROVT)")
    errorLayer( errpn001_dgv        "GRPN001: Shape straddling LOGOBND found! (dgv      )")
    errorLayer( errpn001_lvdummy    "GRPN001: Shape straddling LOGOBND found! (lvdummy  )")
    errorLayer( errpn001_esd_cdm    "GRPN001: Shape straddling LOGOBND found! (esd_cdm  )")
    errorLayer( errpn001_c4lv       "GRPN001: Shape straddling LOGOBND found! (c4lv     )")
    errorLayer( errpn001_dipi       "GRPN001: Shape straddling LOGOBND found! (dipi     )")
    errorLayer( errpn001_grlogic    "GRPN001: Shape straddling LOGOBND found! (grlogic  )")
    errorLayer( errpn001_fltgate    "GRPN001: Shape straddling LOGOBND found! (fltgate  )")
    errorLayer( errpn001_wvr        "GRPN001: Shape straddling LOGOBND found! (wvr      )")
    errorLayer( errpn001_sblk       "GRPN001: Shape straddling LOGOBND found! (sblk     )")
    errorLayer( errpn001_ind        "GRPN001: Shape straddling LOGOBND found! (ind_filt )")
    errorLayer( errpn001_bondpad    "GRPN001: Shape straddling LOGOBND found! (bondpad  )")
    errorLayer( errpn001_tline_am   "GRPN001: Shape straddling LOGOBND found! (tline_am )")
    errorLayer( errpn001_tline_ma   "GRPN001: Shape straddling LOGOBND found! (tline_ma )")
    errorLayer( errpn001_tline_ml   "GRPN001: Shape straddling LOGOBND found! (tline_ml )")
    errorLayer( errpn001_lowcrnt    "GRPN001: Shape straddling LOGOBND found! (lowcrnt  )")
    errorLayer( errpn001_vncapm1    "GRPN001: Shape straddling LOGOBND found! (vncapm1  )")
    errorLayer( errpn001_vncapm2    "GRPN001: Shape straddling LOGOBND found! (vncapm2  )")
    errorLayer( errpn001_vncapm3    "GRPN001: Shape straddling LOGOBND found! (vncapm3  )")
    errorLayer( errpn001_vncapm4    "GRPN001: Shape straddling LOGOBND found! (vncapm4  )")
    errorLayer( errpn001_vncapm5    "GRPN001: Shape straddling LOGOBND found! (vncapm5  )")
    errorLayer( errpn001_vncapmt    "GRPN001: Shape straddling LOGOBND found! (vncapmt  )")
    errorLayer( errpn001_vncapcnt   "GRPN001: Shape straddling LOGOBND found! (vncapcnt )")
    errorLayer( errpn001_vncapparm  "GRPN001: Shape straddling LOGOBND found! (vncapparm)")
    errorLayer( errpn001_rx5v       "GRPN001: Shape straddling LOGOBND found! (rx5v     )")
    errorLayer( errpn001_reshv      "GRPN001: Shape straddling LOGOBND found! (reshv    )")
    errorLayer( errpn001_5vonly     "GRPN001: Shape straddling LOGOBND found! (5vonly   )")
    errorLayer( errpn001_bipolar    "GRPN001: Shape straddling LOGOBND found! (bipolar  )")
    errorLayer( errpn001_schky      "GRPN001: Shape straddling LOGOBND found! (schky    )")
    errorLayer( errpn001_scgate     "GRPN001: Shape straddling LOGOBND found! (scgate   )")
    errorLayer( errpn001_plyoncrk   "GRPN001: Shape straddling LOGOBND found! (plyoncrk )")
    errorLayer( errpn001_ftbar      "GRPN001: Shape straddling LOGOBND found! (FRBAR)")
    errorLayer( errpn001_bp2nd      "GRPN001: Shape straddling LOGOBND found! (BP2ND)")
    errorLayer( errpn001_nwasp      "GRPN001: Shape straddling LOGOBND found! (NWASP)")
    errorLayer( errpn001_ft         "GRPN001: Shape straddling LOGOBND found! (FT)")
    errorLayer( errpn001_jd         "GRPN001: Shape straddling LOGOBND found! (JD)")
    errorLayer( errpn001_tg         "GRPN001: Shape straddling LOGOBND found! (TG)")
    errorLayer( errpn001_ma         "GRPN001: Shape straddling LOGOBND found! (MA)")
    errorLayer( errpn001_pr         "GRPN001: Shape straddling LOGOBND found! (PR)")
    errorLayer( errpn001_nr         "GRPN001: Shape straddling LOGOBND found! (NR)")
    errorLayer( errpn001_e1         "GRPN001: Shape straddling LOGOBND found! (E1)")
    errorLayer( errpn001_e2         "GRPN001: Shape straddling LOGOBND found! (E2)")
    errorLayer( errpn001_ml         "GRPN001: Shape straddling LOGOBND found! (ML)")
    errorLayer( errpn001_am         "GRPN001: Shape straddling LOGOBND found! (AM)")
    errorLayer( errpn001_bb         "GRPN001: Shape straddling LOGOBND found! (BB)")
    errorLayer( errpn001_bf         "GRPN001: Shape straddling LOGOBND found! (BF)")
    errorLayer( errpn001_bfmoat     "GRPN001: Shape straddling LOGOBND found! (BFMOAT)")
    errorLayer( errpn001_bh         "GRPN001: Shape straddling LOGOBND found! (BH)")
    errorLayer( errpn001_bn         "GRPN001: Shape straddling LOGOBND found! (BN)")
    errorLayer( errpn001_bp         "GRPN001: Shape straddling LOGOBND found! (BP)")
    errorLayer( errpn001_ca         "GRPN001: Shape straddling LOGOBND found! (CA)")
    errorLayer( errpn001_cabar      "GRPN001: Shape straddling LOGOBND found! (CABAR)")
    errorLayer( errpn001_cap        "GRPN001: Shape straddling LOGOBND found! (CAP)")
    errorLayer( errpn001_de         "GRPN001: Shape straddling LOGOBND found! (DE)")
    errorLayer( errpn001_df         "GRPN001: Shape straddling LOGOBND found! (DF)")
    errorLayer( errpn001_dg         "GRPN001: Shape straddling LOGOBND found! (DG)")
    errorLayer( errpn001_di         "GRPN001: Shape straddling LOGOBND found! (DI)")
    errorLayer( errpn001_ht         "GRPN001: Shape straddling LOGOBND found! (HT)")
    errorLayer( errpn001_k1         "GRPN001: Shape straddling LOGOBND found! (K1)")
    errorLayer( errpn001_m1         "GRPN001: Shape straddling LOGOBND found! (M1)")
    errorLayer( errpn001_m1chexcl   "GRPN001: Shape straddling LOGOBND found! (M1CHEXCL)")
    errorLayer( errpn001_m2         "GRPN001: Shape straddling LOGOBND found! (M2)")
    errorLayer( errpn001_m3         "GRPN001: Shape straddling LOGOBND found! (M3)")
    errorLayer( errpn001_m4         "GRPN001: Shape straddling LOGOBND found! (M4)")
    errorLayer( errpn001_m5         "GRPN001: Shape straddling LOGOBND found! (M5)")
    errorLayer( errpn001_mimhk      "GRPN001: Shape straddling LOGOBND found! (MIM_HK)")
    errorLayer( errpn001_mimhd      "GRPN001: Shape straddling LOGOBND found! (MIM_HD)")
    errorLayer( errpn001_mosvar     "GRPN001: Shape straddling LOGOBND found! (MOSVAR)")
    errorLayer( errpn001_mt         "GRPN001: Shape straddling LOGOBND found! (MT)")
    errorLayer( errpn001_ns         "GRPN001: Shape straddling LOGOBND found! (NS)")
    errorLayer( errpn001_nw         "GRPN001: Shape straddling LOGOBND found! (NW)")
    errorLayer( errpn001_op         "GRPN001: Shape straddling LOGOBND found! (OP)")
    errorLayer( errpn001_pc         "GRPN001: Shape straddling LOGOBND found! (PC)")
    errorLayer( errpn001_pcing      "GRPN001: Shape straddling LOGOBND found! (PCING)")
    errorLayer( errpn001_pd         "GRPN001: Shape straddling LOGOBND found! (PD)")
    errorLayer( errpn001_pcfuse     "GRPN001: Shape straddling LOGOBND found! (PCFUSE)")
    errorLayer( errpn001_ph         "GRPN001: Shape straddling LOGOBND found! (PH)")
    errorLayer( errpn001_pi         "GRPN001: Shape straddling LOGOBND found! (PI)")
    errorLayer( errpn001_qt         "GRPN001: Shape straddling LOGOBND found! (QT)")
    errorLayer( errpn001_rn         "GRPN001: Shape straddling LOGOBND found! (RN)")
    errorLayer( errpn001_rp         "GRPN001: Shape straddling LOGOBND found! (RP)")
    errorLayer( errpn001_rr         "GRPN001: Shape straddling LOGOBND found! (RR)")
    errorLayer( errpn001_rx         "GRPN001: Shape straddling LOGOBND found! (RX)")
    errorLayer( errpn001_v1         "GRPN001: Shape straddling LOGOBND found! (V1)")
    errorLayer( errpn001_v1bar      "GRPN001: Shape straddling LOGOBND found! (V1BAR)")
    errorLayer( errpn001_v2         "GRPN001: Shape straddling LOGOBND found! (V2)")
    errorLayer( errpn001_v2bar      "GRPN001: Shape straddling LOGOBND found! (V2BAR)")
    errorLayer( errpn001_v3         "GRPN001: Shape straddling LOGOBND found! (V3)")
    errorLayer( errpn001_v3bar      "GRPN001: Shape straddling LOGOBND found! (V3BAR)")
    errorLayer( errpn001_v4         "GRPN001: Shape straddling LOGOBND found! (V4)")
    errorLayer( errpn001_v4bar      "GRPN001: Shape straddling LOGOBND found! (V4BAR)")
    errorLayer( errpn001_v5         "GRPN001: Shape straddling LOGOBND found! (V5)")
    errorLayer( errpn001_v5bar      "GRPN001: Shape straddling LOGOBND found! (V5BAR)")

  ;RULE PN203
    ca_all  = geomOr( ca cabar )
    ca_logo = geomAnd( ca_all logobnd )
    drc( ca_logo sepNotch < 0.40 withSingularPoint "GRPN203: CA to CA space (logo) >= 0.400 um.")

  ;RULE PN502
    m1_logo = geomAnd( m1 logobnd )
    drc( m1_logo sepNotch < 0.40 withSingularPoint "GRPN502: M1 to M1 space (logo) >= 0.400 um.")

  ;RULE PN553
    v1_all  = geomOr( v1 v1bar )
    v2_all  = geomOr( v2 v2bar )
    v3_all  = geomOr( v3 v3bar )
    v4_all  = geomOr( v4 v4bar )
    v5_all  = geomOr( v5 v5bar )
    v1_logo = geomAnd( v1_all logobnd )
    v2_logo = geomAnd( v2_all logobnd )
    v3_logo = geomAnd( v3_all logobnd )
    v4_logo = geomAnd( v4_all logobnd )
    v5_logo = geomAnd( v5_all logobnd )
    drc( v1_logo sepNotch < 0.40 withSingularPoint "GRPN553: V1 to V1 space (logo) >= 0.400 um.")
    drc( v2_logo sepNotch < 0.40 withSingularPoint "GRPN553: V2 to V2 space (logo) >= 0.400 um.")
    drc( v3_logo sepNotch < 0.40 withSingularPoint "GRPN553: V3 to V3 space (logo) >= 0.400 um.")
    drc( v4_logo sepNotch < 0.40 withSingularPoint "GRPN553: V4 to V4 space (logo) >= 0.400 um.")
    drc( v5_logo sepNotch < 0.40 withSingularPoint "GRPN553: V5 to V5 space (logo) >= 0.400 um.")

  ;RULE PN602
    m2_logo = geomAnd( m2 logobnd )
    m3_logo = geomAnd( m3 logobnd )
    m4_logo = geomAnd( m4 logobnd )
    m5_logo = geomAnd( m5 logobnd )
    mt_logo = geomAnd( mt logobnd )
    drc( m2_logo sepNotch < 0.40 withSingularPoint "GRPN602: M2 to M2 space (logo) >= 0.400 um.")
    drc( m3_logo sepNotch < 0.40 withSingularPoint "GRPN602: M3 to M3 space (logo) >= 0.400 um.")
    drc( m4_logo sepNotch < 0.40 withSingularPoint "GRPN602: M4 to M4 space (logo) >= 0.400 um.")
    drc( m5_logo sepNotch < 0.40 withSingularPoint "GRPN602: M5 to M5 space (logo) >= 0.400 um.")
    drc( mt_logo sepNotch < 0.40 withSingularPoint "GRPN602: MT to MT space (logo) >= 0.400 um.")

  ;RULE PN907
    errorLayer( geomAnd( geomAndNot( dv crackstop ) logobnd ) "GRPN907: DV over LOGOBND found!")
    errorLayer( geomAnd( geomAndNot( lv crackstop ) logobnd ) "GRPN907: LV over LOGOBND found!")
    errorLayer( geomAnd( geomAndNot( tv crackstop ) logobnd ) "GRPN907: TV over LOGOBND found!")


  ;RULE NOPLYMD01
   ;noplymd_exists = geomEnclose( bkgnd noplymd )
   ;errorLayer(  noplymd_exists "# WARNING: NOPLYMD Level found #")

 ;RULE NOPLYMD02
  ;err_noplymd02 = geomAnd( geomOr( geomAndNot( geomSize( chipedge -0.04 ) noplymd ) geomAndNot( geomSize( noplymd -0.04 ) chipedge ) ) noplymd_exists )
  ;errorLayer( err_noplymd02       "GRNOPLYMD02: If NOPLYMD exists, NOPLYMD must be drawn exactly coincident with CHIPEDGE.")


;===================================
;=====  LEVEL OF METAL SET UP  =====
;===================================

  ;===== LOWER METALS =====

   m1_exists = geomEnclose( bkgnd m1 )
   m2_empty  = geomOutside( bkgnd m2 )
   m2_exists = geomEnclose( bkgnd m2 )
   m3_empty  = geomOutside( bkgnd m3 )
   m3_exists = geomEnclose( bkgnd m3 )
   m4_empty  = geomOutside( bkgnd m4 )
   m4_exists = geomEnclose( bkgnd m4 )
   m5_empty  = geomOutside( bkgnd m5 )
   m5_exists = geomEnclose( bkgnd m5 )

   LM1       = geomAnd( geomAnd( geomAnd( geomAnd( m1_exists m2_empty ) m3_empty ) m4_empty ) m5_empty )
   LM2       = geomAnd( geomAnd( geomAnd( m2_exists m3_empty ) m4_empty ) m5_empty )
   LM3       = geomAnd( geomAnd( m3_exists m4_empty ) m5_empty )
   LM4       = geomAnd( m4_exists m5_empty )
   LM5       = geomOr( m5_exists )
   LM2_5     = geomOr( LM2 LM3 LM4 LM5 )
   LM3_5     = geomOr( LM3 LM4 LM5 )
   LM4_5     = geomOr( LM4 LM5 )


  ;===== LAST METALS =====

   am_empty  = geomOutside( bkgnd am )
   am_exists = geomEnclose( bkgnd am )
   ma_empty  = geomOutside( bkgnd ma )
   ma_exists = geomEnclose( bkgnd ma )
   ml_empty  = geomOutside( bkgnd ml )
   ml_exists = geomEnclose( bkgnd ml )
   mz_empty  = geomOutside( bkgnd mz )
   mz_exists = geomEnclose( bkgnd mz )

   LM0AM     = geomAnd( am_exists geomAnd( geomAnd( ma_empty ml_empty ) mz_empty ) )
   LM1AM     = geomAnd( am_exists LM1 )
   LM2AM     = geomAnd( am_exists LM2 )
   LM3AM     = geomAnd( am_exists LM3 )
   LM4AM     = geomAnd( am_exists LM4 )
   LM5AM     = geomAnd( am_exists LM5 )

   LM0MA     = geomAnd( ma_exists geomAnd( geomAnd( am_empty ml_empty ) mz_empty ) )
   LM1MA     = geomAnd( ma_exists LM1 )
   LM2MA     = geomAnd( ma_exists LM2 )
   LM3MA     = geomAnd( ma_exists LM3 )
   LM4MA     = geomAnd( ma_exists LM4 )
   LM5MA     = geomAnd( ma_exists LM5 )

   LM0ML     = geomAnd( ml_exists geomAnd( geomAnd( am_empty ma_empty ) mz_empty ) )
   LM1ML     = geomAnd( ml_exists LM1 )
   LM2ML     = geomAnd( ml_exists LM2 )
   LM3ML     = geomAnd( ml_exists LM3 )
   LM4ML     = geomAnd( ml_exists LM4 )
   LM5ML     = geomAnd( ml_exists LM5 )

   LM0MZ     = geomAnd( mz_exists geomAnd( geomAnd( am_empty ma_empty ) ml_empty ) )
   LM5MZ     = geomAnd( mz_exists LM5 )

   errorLayer( LM1AM "# INFO: 3 Level Metal (M1+MT+AM) #")
   errorLayer( LM2AM "# INFO: 4 Level Metal (M1+M2+MT+AM) #")
   errorLayer( LM3AM "# INFO: 5 Level Metal (M1+M2+M3+MT+AM) #")
   errorLayer( LM4AM "# INFO: 6 Level Metal (M1+M2+M3+M4+MT+AM) #")
   errorLayer( LM5AM "# INFO: 7 Level Metal (M1+M2+M3+M4+M5+MT+AM) #")

   errorLayer( LM1MA "# INFO: 4 Level Metal (M1+MT+E1+MA) #")
   errorLayer( LM2MA "# INFO: 5 Level Metal (M1+M2+MT+E1+MA) #")
   errorLayer( LM3MA "# INFO: 6 Level Metal (M1+M2+M3+MT+E1+MA) #")
   errorLayer( LM4MA "# INFO: 7 Level Metal (M1+M2+M3+M4+MT+E1+MA) #")
   errorLayer( LM5MA "# INFO: 8 Level Metal (M1+M2+M3+M4+M5+MT+E1+MA) #")

   errorLayer( LM1ML "# INFO: 3 Level Metal (M1+MT+ML) #")
   errorLayer( LM2ML "# INFO: 4 Level Metal (M1+M2+MT+ML) #")
   errorLayer( LM3ML "# INFO: 5 Level Metal (M1+M2+M3+MT+ML) #")
   errorLayer( LM4ML "# INFO: 6 Level Metal (M1+M2+M3+M4+MT+ML) #")
   errorLayer( LM5ML "# INFO: 7 Level Metal (M1+M2+M3+M4+M5+MT+ML) #")

   errorLayer( LM5MZ "# INFO: 7 Level Metal (M1+M2+M3+M4+M5+MT+MZ) #")

   errmultiLM = geomOr( geomAnd( am_exists ma_exists ) geomAnd( am_exists ml_exists ) geomAnd( am_exists mz_exists ) geomAnd( ma_exists mz_exists) geomAnd( ma_exists ml_exists ) geomAnd( ml_exists mz_exists) )
   errorLayer( errmultiLM  "WARNING: MULTIPLE LAST METAL LEVELS FOUND! (AM or MA or ML or MZ)")

   lv_exists = geomEnclose( bkgnd lv )
   dv_exists = geomEnclose( bkgnd dv )
   info_pass = geomAnd( lv_exists dv_exists)
   errorLayer( info_pass "# WARNING: LV and DV are present in same Design. It is prohibited!")


  ;===== I/O PAD SWITCHES =====

  if( avSwitch( "C4_4on8" ) then
    errorLayer( bkgnd "# INFO: I/O PADS = C4(4 on 8) #")
  );END of C4{4-on-8} LEVEL of METAL REPORT

  if( avSwitch( "C4_4on9" ) then
    errorLayer( bkgnd "# INFO: I/O PADS = C4(4 on 9) #")
  );END of C4{4-on-9} LEVEL of METAL REPORT

  if( avSwitch( "C4_5on10" ) then
    errorLayer( bkgnd "# INFO: I/O PADS = C4(5 on 10) #")
  );END of C4{5-on-10} LEVEL of METAL REPORT

  if( avSwitch( "C4_CuPillar" ) then
    errorLayer( bkgnd "# INFO: I/O PADS = C4(CuPillar CAP) #")
  );END of C4{5-on-10 TIN CAP} LEVEL of METAL REPORT

  if( !avSwitch( "C4_4on8" ) && !avSwitch( "C4_4on9" ) && !avSwitch( "C4_5on10" ) && !avSwitch( "C4_CuPillar" ) then
    errorLayer( bkgnd "# INFO: I/O PADS = WIREBOND #")
  );END of WIREBOND LEVEL of METAL REPORT


;==========================================
;===== DEFINE COMMONLY USED VARIABLES =====
;==========================================

  sxcont     = geomAndNot( geomAndNot( geomAnd( rx geomAndNot( bp geomButtOrOver( bp bb ) ) ) nw ) pc )
  sxcont_tw  = geomAndNot( geomAnd( geomOr( sxcont geomAnd( rx pd)) pi ) nw)
  ndiff      = geomAndNot( rx bp )
  pdiff      = geomAnd( rx bp )
  nwcont     = geomOverlap( ndiff nw )
  gate       = geomAnd( rx pc )
  diff       = geomAndNot( rx gate )
  ca_rx      = geomAnd( ca rx )
  pc_wire    = geomAndNot( pc rx )
  rx_not_pc  = geomAndNot( rx pc )
  gate_x002  = geomSize( gate 0.02 )
 ;rx_near_gt = geomAnd( diff gate_x002 )
  pc_near_gt = geomAnd( pc_wire gate_x002 )
  ngate      = geomAnd( ndiff gate )
  pgate      = geomAnd( geomAnd( pdiff gate ) nw )
  tline      = geomAndNot( geomOr( tline_am tline_ma tline_ml ) ind_filt )

  pc_res     = geomButtOrOver( pc op )
  rx_res     = geomButtOrOver( rx op )

  chpe_tch_grde    = geomButtOrOver( chipedge      guardedge )
  chpe_not_crk     = geomAndNot(     chipedge      crackstop )
  chpeGrde_not_crk = geomAndNot(     chpe_tch_grde crackstop )
  chpeGrde_ovr_crk = geomAnd(        chpe_tch_grde crackstop )
  crk_tch_grde     = geomButtOrOver( crackstop     guardedge )
  mpwe_not_chipe   = geomAndNot(     mpw_edge      chipedge  )


;=================================
;===== LEVEL GENERATION CODE =====
;=================================

if( avSwitch( "HIRESSUB") then

  ;===== HR Level =====
  boundbx   = geomAndNot( chipedge logobnd )
  hires     = geomAndNot( boundbx nohr )
  hr1       = geomOr( geomAndNot( hires nixhr ) hrcus )
  hr2       = geomSize( geomSize( hr1  0.995 ) -0.995 ) ;GAPS(<= 2.0)
  hrgen     = geomSize( geomSize( hr2 -0.995 )  0.995 ) ;SLIVERS(<= 2.0)

  ;===== BT Level =====
  bb2keep   = geomOr( bb )
  pi2keep   = geomOr( pi )
  btint     = geomOr( geomOr( bb2keep pi2keep ) hires )
  bt1       = geomOr( geomAndNot( btint nixbt ) btcus )
  bt2       = geomSize( geomSize( bt1  0.995 ) -0.995 ) ;GAPS(<= 2.0)
  btgen     = geomSize( geomSize( bt2 -0.995 )  0.995 ) ;SLIVERS(<= 2.0)

  ;===== BF Level =====
  bf1       = geomOr( geomSize( geomOutside( geomOutside( nw logobnd ) bb ) 0.14 ) geomOutside( bb logobnd ) geomSize( jc -0.2 ) )
  bf2       = geomOr( bf1 zerovt bfmoat )
  bfint     = geomOr( bf2 hires )
  bf3       = geomOr( geomAndNot( bfint nixbf ) bfcus )
  bf4       = geomSize( geomSize( bf3  0.33 ) -0.33 ) ;GAPS(<= 0.66)
  bfgen     = geomSize( geomSize( bf4 -0.14 )  0.14 ) ;SLIVERS(<= 0.28)

  ;===== BP Level =====
  bb_not_rn = geomAndNot( bb rn )
  bpgen     = geomOr( geomAndNot( geomOr( bp as bp2nd bb_not_rn ) logobnd ) hires )

  ;===== OP Level =====
  opgen     = geomOr( op hires )

else

  ;===== BF Level =====
   bf1      = geomOr( geomSize( geomOutside( geomOutside( nw logobnd ) bb ) 0.14 ) geomOutside( bb logobnd ) geomSize( jc -0.2 ) )
   bf3      = geomOr( bf1 zerovt bfmoat )
   bf4      = geomSize( geomSize( bf3 0.33 ) -0.33 ) ;GAPS(<= 0.66)
   bfgen    = geomSize( geomSize( bf4 -0.14 ) 0.14 ) ;SLIVERS(<= 0.28)

  ;===== BP Level =====
   bpgen    = geomAndNot( geomOr( bp as bp2nd geomAndNot( bb rn ) )  logobnd )

);End HIRESSUB

  ;===== BH Level =====
   bp_pcf   = geomButtOrOver( bp pcfuse )
   zvt_x072 = geomSize( geomAndNot( zerovt logobnd ) 0.72 )
  ;bh1      = geomAndNot( geomOr(    nw dg bb mosvar tg hg geomSize( bp_pcf -0.14 ) ) logobnd )
   bh1      = geomAndNot( geomOr( as nw dg bb mosvar tg    geomSize( bp_pcf -0.14 ) ) logobnd )
   bh2      = geomOr( bh1 zvt_x072 )
   phhole0  = geomAndNot( geomAndNot( geomAnd( pc op ) rx ) logobnd )
   phhole1  = geomSize( phhole0 0.16 )
   pcr_ext0 = geomGetEdge( phhole0 inside pc )
   pcr_ext  = geomSize( geomStretch( pcr_ext0 0.16 ) 0.58 )                ;(0.16 + 0.42)
   bh3      = geomOr( phhole1 pcr_ext )
   bh3b1    = geomAndNot( bh3 rx )
   bh3b1_g  = geomAnd( bh3 rx )
   bh3_c    = geomGetEdge( bh3 coincident bh3b1_g )
   bh3_d    = geomSize( bh3_c -0.42 )
   bh3_e    = geomAndNot( bh3 bh3_d )
   bh4      = geomAndNot( bh3_e rx )
   bh5      = geomOr( bh2 bh4)
   bhgen    = geomSize( geomSize( bh5 0.210 ) -0.210 ) ;GAPS(<= 0.42)

  ;===== BN Level =====
   dbn      = geomOutside( geomAndNot( bp geomOr( logobnd rr rp ) ) bb ) ;RP
  ;dbn      = geomOutside( geomAndNot( bp geomOr( logobnd rr ) ) bb )
   bngen    = geomOr( dbn pd )

  ;===== DE Level =====
  ;degen    = geomOr( geomSize( zerovt 0.72 ) geomAndNot( geomOr( dg hg ) nw ) )
   degen    = geomOr( geomSize( zerovt 0.72 ) geomAndNot(         dg      nw ) )

  ;===== DF Level =====
  ;dfgen    = geomAndNot( geomAnd( geomOr( dg hg ) nw ) logobnd )
   dfgen    = geomAndNot( geomAnd(         dg      nw ) logobnd )

  ;===== NW Level =====
   nwgen    = geomAndNot( geomOr( nw rn ) logobnd )

  ;===== PH Level =====
  ;ph1      = geomOr( phhole1 dg mosvar hg tg )
   ph1      = geomOr( phhole1 dg mosvar    tg )
   ph2      = geomAndNot( geomAndNot( nw ph1 ) logobnd )
   phgen    = geomSize( geomSize( ph2 0.215 ) -0.215 ) ;GAPS(<= 0.43)

  ;===== NR Level =====
   nrgen    = geomAndNot( nr geomAndNot( nw logobnd ) )

  ;===== PR Level =====
   prgen    = geomAnd( pr geomAndNot( nw logobnd ) )

  ;===== NV Level =====
  nv_gen    = geomAndNot( geomOr( nw tg bb mosvar geomSize( zerovt 0.72 ) ) logobnd )

  ;===== PV Level =====
  pv_gen    = geomAndNot(  geomAndNot( nw tg ) logobnd )

  ;===== TE Level =====
  te_gen    = geomAndNot( geomAndNot( geomAndNot( tg nw ) mosvar ) logobnd )

  ;===== TF Level =====
  tf_gen    = geomAndNot( geomAndNot( geomAnd( tg nw ) mosvar ) logobnd )

;END OF LEVEL GENERATION CODE


;==============================================
;=====  Geometry Restriction Rule Checks  =====
;==============================================

  ;===== Tolerance for Non_orthogonal polygons =====

  grid     = 0.01  ;as stated in rule S1  

  tolLeg   = 0.04  ;used in legacy chip guard ring rules (as specifically stated in the design manual)
  tolGrid1 = 0.014 ;(     grid  * square root of 2) - not used at this time
  tolGrid2 = 0.028 ;((2 * grid) * square root of 2) - used in ECM chip guard ring & metal wiring rules

  sprintf( errTextGRS1c  "GRS1: Off-Grid path centerline found!" )
  offGridWithinCell(  allLayers grid pathCenterlines  errTextGRS1c cellName( root ) )

  foreach( level '( am as bb bfmoat bondpad bp bperi bp2nd ca cabar cap chipedge tg dg dv e1 e2 ft ftbar ht ind_filt k1  
                    logobnd lv lvdummy m1 m2 m3 m4 m5 ma ml mosvar mt ns nw nwasp op pi pc pcfuse pcing pd qt  
                    rn rp rr rx rx5v tline_am tline_ma tline_ml v1 v1bar v2 v2bar v3 v3bar v4 v4bar v5 v5bar zerovt 
                    jc jd mz tv di esd_cdm esdummy wvr fivevonly scgate schky bipolar ds_match rf_modfill vtsens wellasp  
                    dgv dipi grlogic fltgate sblk vncapm1 vncapm2 vncapm3 vncapm4 vncapm5 vncapmt 
                    mimhk mimhd reshv e1_coil mt_coil m5_coil m4_coil m3_coil )

    Level = upperCase(level)

    ;===== Error Text Strings =====

    sprintf( errTextGRS1a  "GRS1: Off-Grid vertex found! (%s)"                                  Level )
    sprintf( errTextGRS1b  "GRS1: Off-Grid vertex found! (%s)(unmerged)"                        Level )
    sprintf( errTextGRS1c  "GRS1: Off-Grid path centerline found! (%s)"                         Level )
    sprintf( errTextGRS2a  "GRS2: Shape with acute angles found! (%s) (internal)"               Level )
    sprintf( errTextGRS2b  "GRS2: Shape with acute angles found! (%s) (external)"               Level )
    sprintf( errTextGRS6   "GRS6: Shape with Non-Orthogonal or Non-45 degree edges found! (%s)" Level )
    sprintf( errTextGRS10  "GRS10: Text data on mask build layer found! (%s)"                   Level )


    ;===== Design Grid Check (S1) =====

    self_lvl = geomAnd( eval(level) )
    sprintf( cmnd1 "offGrid( %s        grid  raw  errTextGRS1a )" level )
    evalstring( cmnd1 )
    sprintf( cmnd2 "offGrid( self_lvl  grid       errTextGRS1b )"       )
    evalstring( cmnd2 )

   ;self_lvl = geomAnd( eval(level) )
   ;offGrid(            eval(level) grid raw              errTextGRS1a                  )
   ;offGrid(            self_lvl    grid raw              errTextGRS1b                  )
   ;offGridWithinCell(  eval(level) grid pathCenterlines  errTextGRS1c cellName( root ) )


    ;===== Acute Angle Check (S2) =====

    errs2_int = geomGetCorner( eval(level) keep <  90 )
    errs2_ext = geomGetCorner( eval(level) keep > 270 )
    errorLayer( errs2_int  errTextGRS2a )
    errorLayer( errs2_ext  errTextGRS2b )


    ;===== Ortho/45 Check (S6) =====

    errs6a = geomGetAngledEdge( eval(level)  0 < keep < 45  mode4)
    errs6b = geomGetAngledEdge( eval(level) 45 < keep < 90  mode4)
    errorLayer( geomOr( errs6a errs6b ) errTextGRS6 )


    ;===== TEXT ON MASK BUILD LAYERS CHECK =====

    ( let ( cmd1 )
      lvlTxt    = strcat( level "Txt" )
      lvlTxtShp = strcat( level "TxtShp" )

      sprintf( cmd1 "%s = geomTextShape( %s 1.000 )" lvlTxtShp lvlTxt )
      evalstring( cmd1 )
      sprintf( cmd1 "errorLayer( %s  errTextGRS10 )" lvlTxtShp        )
      evalstring( cmd1 )
    );End let

  );End of Geometry Restriction Rule Checks


;===================================
;=====  CHIPEDGE Design Rules  =====
;===================================

  ;Rule CE001
    bbox_chipedge = geomGetBBox( chipedge )
    offGrid( bbox_chipedge (2 * grid)  "GRCE001: CHIPEDGE not on a 0.02 GRID found!")

    bbox_chip = geomGetBBox( geomOr( chipedge mpw_edge crackstop ) )
    offGrid( bbox_chip     (2 * grid)  "GRCE001b: Union(CHIPEDGE,MPW_EDGE,CRACKSTOP) not on a 0.02 GRID found!")

if( avSwitch( "CHECK_RECOMMENDED" ) then
  ;Rule CE003
    errce003 = geomContactCheck( bbox_chip  width <= 20000.00  length <= 20000.00  ignore )
    errorLayer( errce003  "GRCE003aR_GRCE003bR: Union(CHIPEDGE,MPW_EDGE,CRACKSTOP) maximum x and y direction <= 20.000 mm.")
);End CHECK_RECOMMENDED


;PHHOLE RULES
 ;Rule PHHOLE7
   phhole1_nw = geomAnd( phhole1 nw)
   phhole_encl = geomAndNot( geomHoles( phhole1_nw ) phhole1_nw)
   drc( phhole_encl      area < 0.537  "GRPHHOLE7: (PHHOLE1 over NW) enclosed area >= 0.537 sq.um.")

 ;Rule PHHOLE8
   errphhole8  = geomButtOrOver( pgate phhole1 ) ;ADDED NW FILTER BY CHANGING GATE TO PGATE
   drc( pgate phhole1  0 < sep < 0.36  "GRPHHOLE8: ((PC over RX) over NW) to PHHOLE1 space >= 0.360 um.")
   errorLayer( errphhole8              "GRPHHOLE8: ((PC over RX) over NW) touching PHHOLE1 found!")


;====================================
;=====  Restricted Layer Rules  =====
;====================================

;Rule RL01
  err_rl01 = geomButtOrOver( js bkgnd )
  errorLayer( err_rl01     "GRRL01: (JS touching DATA_EXTENT) not allowed!")

;Rule RL03
  err_rl03 = geomButtOrOver( m1exclud_rl03 bkgnd )
  errorLayer( err_rl03     "GRRL03: (M1EXCLUD touching DATA_EXTENT) not allowed!")

if( avSwitch("HIRESSUB") then
  ;Rule RL02
    foreach( level '( hr hrcus bt btcus nixhr nixbt nixbf bfcus )
      errrl02 = geomButtOrOver( eval(level) chipedge )
      sprintf( errMsg      "GRRL02: %s touching CHIPEDGE found!" upperCase(level) )
      errorLayer( errrl02 errMsg )
    );End foreach

  ;Rule RL04
    foreach( level '( bf bn ns jd zerovt nr pr jc mimhk k1 as schky bipolar bp2nd mz ml fivevonly dns_sram )
      errrl04 = geomButtOrOver( eval(level) chipedge )
      sprintf( errMsg      "GRRL04: %s touching CHIPEDGE found!" upperCase(level) )
      errorLayer( errrl04 errMsg )
   );End foreach

;Rule RL05
  nohr_exists = geomEnclose( bkgnd nohr )
  errorLayer( nohr_exists  "GRRL05: UNQUALIFIED_FEATURE: NOHR level found in design. Contact your IBM technical representative.")

);End HIRESSUB


;===== VNCAP DERIVED LAYERS =====

  vppcapm1 = geomOr( vncapm1 )
  vppcapm2 = geomOr( vncapm2 )
  vppcapm3 = geomOr( vncapm3 )
  vppcapm4 = geomOr( vncapm4 )
  vppcapm5 = geomOr( vncapm5 )
  vppcapmt = geomOr( vncapmt )

  m1_over_vppcapm1 = geomAnd( m1 vppcapm1 )
  m2_over_vppcapm2 = geomAnd( m2 vppcapm2 )
  m3_over_vppcapm3 = geomAnd( m3 vppcapm3 )
  m4_over_vppcapm4 = geomAnd( m4 vppcapm4 )
  m5_over_vppcapm5 = geomAnd( m5 vppcapm5 )
  mt_over_vppcapmt = geomAnd( mt vppcapmt )
  v1_over_vppcapm1 = geomAnd( v1 vppcapm1 )
  v2_over_vppcapm2 = geomAnd( v2 vppcapm2 )
  v3_over_vppcapm3 = geomAnd( v3 vppcapm3 )
  v4_over_vppcapm4 = geomAnd( v4 vppcapm4 )
  v5_over_vppcapm5 = geomAnd( v5 vppcapm5 )
  ft_over_vppcapmt = geomAnd( ft vppcapmt )


;===== ESTABLISH CONNECTIVITY BETWEEN LAYERS =====

  ca_via       = geomAnd( ca_all m1 )
  v1_via       = geomAnd( v1_all m1 )
  ndnw_via     = geomAnd( ndiff nw )
  ndbb_via     = geomAnd( ndiff bb )
  ndns_via     = geomAnd( ndiff ns )
  rx_net       = geomAndNot( rx gate )
  v1_vncap     = geomAnd( v1_over_vppcapm1 m1 )
  v2_vncap     = geomAnd( v2_over_vppcapm2 m2 )
  v3_vncap     = geomAnd( v3_over_vppcapm3 m3 )
  v4_vncap     = geomAnd( v4_over_vppcapm4 m4 )
  v5_vncap     = geomAnd( v5_over_vppcapm5 m5 )
  vt_vncap     = geomAnd( ft_over_vppcapmt mt )

 ;ft_qt        = geomAnd( ft geomButtOrOver( qt geomOr( mimhk mimhd)) )
 ;via_ft_qt    = geomAnd( qt ft_qt )
  qt_hk        = geomButtOrOver( qt geomOr( mimhk mimhd ) )    ;added mimhd for QCAP23a
  ft_qt_hk     = geomAnd( ft qt_hk)
  via_ft_qt_hk = geomAnd( qt_hk ft_qt_hk )

  ht_hd        = geomButtOrOver( ht mimhd )    ;added dual mimhd for QCAP23b
  ft_ht_hd     = geomAnd( ft ht_hd)
  via_ft_ht_hd = geomAnd( ht_hd ft_ht_hd )

  bb_not_nw            = geomAndNot( bb nw )
  rxnp_junction_cp265b = geomAndNot( geomAndNot( ndiff nw ) pd)
  via_pi_and_nw_tw18   = geomAnd( pi nw)

  geomConnect(
      via( ndnw_via ndiff nw )
      via( ndbb_via ndiff bb )
      via( ndns_via ndiff ns )
      via( ndbb_via rxnp_junction_cp265b bb )
      via( ca_via ca     m1 )
      via( v1_via m2     m1 )
      via( ca_via cabar  m1 )
      via( ca_via rx_net m1 )
      via( ca_via pc     m1 )
      via( v1_via v1     m1 )
      via( v1_via v1bar  m1 )
     ;via( via_ft_qt qt  ft_qt )
      via( via_ft_qt_hk qt_hk ft_qt_hk)
      via( via_ft_ht_hd ht_hd ft_ht_hd)
      via( v1_vncap v1_over_vppcapm1 m1 )
      via( v2_vncap v2_over_vppcapm2 m2 )
      via( v3_vncap v3_over_vppcapm3 m3 )
      via( v4_vncap v4_over_vppcapm4 m4 )
      via( v5_vncap v5_over_vppcapm5 m5 )
      via( vt_vncap ft_over_vppcapmt mt )
      via( via_pi_and_nw_tw18 pi nw)
   );End geomConnect

 if( avSwitch("HIRESSUB") then
   geomConnect( incremental
        via( ca_all nwcont m1 )
        buttOrOver( nwcont nw )
        buttOrOver( bb bb_not_nw )
        buttOrOver( bb wellasp )
        buttOrOver( nw wellasp )
   );End geomConnect 
 );End HIRESSUB


;===== CREATE LEVELS FOR FUSE, C4, AND WIREBOND RULES =====

 if( avSwitch("HIRESSUB") then
   bb_wellasp = geomNodeRelate( bb wellasp conn )
   nw_wellasp = geomNodeRelate( nw wellasp conn )
 );End HIRESSUB

   rx_over_bp  = geomAnd( rx bp )
   lastmetal   = geomOr( am ma ml mz )
   diceChannel = geomAndNot( mpw_edge chipedge )                  ;in order to remove dicing marks on MPWs
   dvpad       = geomAndNot( dv geomOr( diceChannel crackstop ) ) ;exclude crackstop and dicing marks from pad def
   lvpad       = geomAndNot( lv geomOr( diceChannel crackstop ) ) ;exclude crackstop and dicing marks from pad def
   tvpad       = geomAndNot( tv geomOr( diceChannel crackstop ) ) ;exclude crackstop and dicing marks from pad def
   iopad       = geomOr( dvpad lvpad tvpad )

  ;fuse checks removed in V2010 -- enough time has passed since laser blown fuses had been dicontinued
  ;they were also causing false errors with the new ECM crackstop

;================================
;===== CHIP GUARDRING RULES =====
;================================

  ;===== ECM Chip Guard Ring Set Up =====

  if( avSwitch( "GUARDEDGE_PRESENT" ) then

    am_ovr_crk    = geomAnd( am    crackstop )
    bp_ovr_crk    = geomAnd( bp    crackstop )
    cab_ovr_crk   = geomAnd( cabar crackstop )
    e1_ovr_crk    = geomAnd( e1    crackstop )
    e2_ovr_crk    = geomAnd( e2    crackstop )
    ft_ovr_crk    = geomAnd( ft    crackstop )
    ftb_ovr_crk   = geomAnd( ftbar crackstop )
    m1_ovr_crk    = geomAnd( m1    crackstop )
    m2_ovr_crk    = geomAnd( m2    crackstop )
    m3_ovr_crk    = geomAnd( m3    crackstop )
    m4_ovr_crk    = geomAnd( m4    crackstop )
    m5_ovr_crk    = geomAnd( m5    crackstop )
    ma_ovr_crk    = geomAnd( ma    crackstop )
    ml_ovr_crk    = geomAnd( ml    crackstop )
    mt_ovr_crk    = geomAnd( mt    crackstop )
    mz_ovr_crk    = geomAnd( mz    crackstop )
    rx_ovr_crk    = geomAnd( rx    crackstop )
    v1b_ovr_crk   = geomAnd( v1bar crackstop )
    v2b_ovr_crk   = geomAnd( v2bar crackstop )
    v3b_ovr_crk   = geomAnd( v3bar crackstop )
    v4b_ovr_crk   = geomAnd( v4bar crackstop )
    v5b_ovr_crk   = geomAnd( v5bar crackstop )

    am_ovlp_grdr  = geomOverlap( am    guardrng )
    bp_ovlp_grdr  = geomOverlap( bp    guardrng )
    cab_ovlp_grdr = geomOverlap( cabar guardrng )
    e1_ovlp_grdr  = geomOverlap( e1    guardrng )
    e2_ovlp_grdr  = geomOverlap( e2    guardrng )
    ft_ovlp_grdr  = geomOverlap( ft    guardrng )
    ftb_ovlp_grdr = geomOverlap( ftbar guardrng )
    m1_ovlp_grdr  = geomOverlap( m1    guardrng )
    m2_ovlp_grdr  = geomOverlap( m2    guardrng )
    m3_ovlp_grdr  = geomOverlap( m3    guardrng )
    m4_ovlp_grdr  = geomOverlap( m4    guardrng )
    m5_ovlp_grdr  = geomOverlap( m5    guardrng )
    ma_ovlp_grdr  = geomOverlap( ma    guardrng )
    ml_ovlp_grdr  = geomOverlap( ml    guardrng )
    mt_ovlp_grdr  = geomOverlap( mt    guardrng )
    mz_ovlp_grdr  = geomOverlap( mz    guardrng )
    rx_ovlp_grdr  = geomOverlap( rx    guardrng )
    v1b_ovlp_grdr = geomOverlap( v1bar guardrng )
    v2b_ovlp_grdr = geomOverlap( v2bar guardrng )
    v3b_ovlp_grdr = geomOverlap( v3bar guardrng )
    v4b_ovlp_grdr = geomOverlap( v4bar guardrng )
    v5b_ovlp_grdr = geomOverlap( v5bar guardrng )

    am_ovr_grdr   = geomAnd( am    guardrng )
    bp_ovr_grdr   = geomAnd( bp    guardrng )
    cab_ovr_grdr  = geomAnd( cabar guardrng )
    e1_ovr_grdr   = geomAnd( e1    guardrng )
    e2_ovr_grdr   = geomAnd( e2    guardrng )
    ft_ovr_grdr   = geomAnd( ft    guardrng )
    ftb_ovr_grdr  = geomAnd( ftbar guardrng )
    m1_ovr_grdr   = geomAnd( m1    guardrng )
    m2_ovr_grdr   = geomAnd( m2    guardrng )
    m3_ovr_grdr   = geomAnd( m3    guardrng )
    m4_ovr_grdr   = geomAnd( m4    guardrng )
    m5_ovr_grdr   = geomAnd( m5    guardrng )
    ma_ovr_grdr   = geomAnd( ma    guardrng )
    ml_ovr_grdr   = geomAnd( ml    guardrng )
    mt_ovr_grdr   = geomAnd( mt    guardrng )
    mz_ovr_grdr   = geomAnd( mz    guardrng )
    rx_ovr_grdr   = geomAnd( rx    guardrng )
    v1b_ovr_grdr  = geomAnd( v1bar guardrng )
    v2b_ovr_grdr  = geomAnd( v2bar guardrng )
    v3b_ovr_grdr  = geomAnd( v3bar guardrng )
    v4b_ovr_grdr  = geomAnd( v4bar guardrng )
    v5b_ovr_grdr  = geomAnd( v5bar guardrng )

    amGrdr_45     = geomGetAngledEdge( am_ovr_grdr 44.5  <= keep <= 45.5 )
    amGrdr_90     = geomAndNot( am_ovr_grdr  amGrdr_45  )
    bpGrdr_45     = geomGetAngledEdge( bp_ovr_grdr 44.5  <= keep <= 45.5 )
    bpGrdr_90     = geomAndNot( bp_ovr_grdr  bpGrdr_45  )
    e1Grdr_45     = geomGetAngledEdge( e1_ovr_grdr 44.5  <= keep <= 45.5 )
    e1Grdr_90     = geomAndNot( e1_ovr_grdr  e1Grdr_45  )
    e2Grdr_45     = geomGetAngledEdge( e2_ovr_grdr 44.5  <= keep <= 45.5 )
    e2Grdr_90     = geomAndNot( e2_ovr_grdr  e2Grdr_45  )
    m1Grdr_45     = geomGetAngledEdge( m1_ovr_grdr 44.5  <= keep <= 45.5 )
    m1Grdr_90     = geomAndNot( m1_ovr_grdr  m1Grdr_45  )
    m2Grdr_45     = geomGetAngledEdge( m2_ovr_grdr 44.5  <= keep <= 45.5 )
    m2Grdr_90     = geomAndNot( m2_ovr_grdr  m2Grdr_45  )
    m3Grdr_45     = geomGetAngledEdge( m3_ovr_grdr 44.5  <= keep <= 45.5 )
    m3Grdr_90     = geomAndNot( m3_ovr_grdr  m3Grdr_45  )
    m4Grdr_45     = geomGetAngledEdge( m4_ovr_grdr 44.5  <= keep <= 45.5 )
    m4Grdr_90     = geomAndNot( m4_ovr_grdr  m4Grdr_45  )
    m5Grdr_45     = geomGetAngledEdge( m5_ovr_grdr 44.5  <= keep <= 45.5 )
    m5Grdr_90     = geomAndNot( m5_ovr_grdr  m5Grdr_45  )
    maGrdr_45     = geomGetAngledEdge( ma_ovr_grdr 44.5  <= keep <= 45.5 )
    maGrdr_90     = geomAndNot( ma_ovr_grdr  maGrdr_45  )
    mlGrdr_45     = geomGetAngledEdge( ml_ovr_grdr 44.5  <= keep <= 45.5 )
    mlGrdr_90     = geomAndNot( ml_ovr_grdr  mlGrdr_45  )
    mtGrdr_45     = geomGetAngledEdge( mt_ovr_grdr 44.5  <= keep <= 45.5 )
    mtGrdr_90     = geomAndNot( mt_ovr_grdr  mtGrdr_45  )
    mzGrdr_45     = geomGetAngledEdge( mz_ovr_grdr 44.5  <= keep <= 45.5 )
    mzGrdr_90     = geomAndNot( mz_ovr_grdr  mzGrdr_45  )
    rxGrdr_45     = geomGetAngledEdge( rx_ovr_grdr 44.5  <= keep <= 45.5 )
    rxGrdr_90     = geomAndNot( rx_ovr_grdr  rxGrdr_45  )

    grdr_or_crk   = geomOr( guardrng crackstop )

    am_ecm        = geomOverlap( am    grdr_or_crk )
    bp_ecm        = geomOverlap( bp    grdr_or_crk )
    cab_ecm       = geomOverlap( cabar grdr_or_crk )
    e1_ecm        = geomOverlap( e1    grdr_or_crk )
    e2_ecm        = geomOverlap( e2    grdr_or_crk )
    ft_ecm        = geomOverlap( ft    grdr_or_crk )
    ftb_ecm       = geomOverlap( ftbar grdr_or_crk )
    m1_ecm        = geomOverlap( m1    grdr_or_crk )
    m2_ecm        = geomOverlap( m2    grdr_or_crk )
    m3_ecm        = geomOverlap( m3    grdr_or_crk )
    m4_ecm        = geomOverlap( m4    grdr_or_crk )
    m5_ecm        = geomOverlap( m5    grdr_or_crk )
    ma_ecm        = geomOverlap( ma    grdr_or_crk )
    ml_ecm        = geomOverlap( ml    grdr_or_crk )
    mt_ecm        = geomOverlap( mt    grdr_or_crk )
    mz_ecm        = geomOverlap( mz    grdr_or_crk )
    rx_ecm        = geomOverlap( rx    grdr_or_crk )
    v1b_ecm       = geomOverlap( v1bar grdr_or_crk )
    v2b_ecm       = geomOverlap( v2bar grdr_or_crk )
    v3b_ecm       = geomOverlap( v3bar grdr_or_crk )
    v4b_ecm       = geomOverlap( v4bar grdr_or_crk )
    v5b_ecm       = geomOverlap( v5bar grdr_or_crk )

    am_not_ecm    = geomAndNot( am    am_ecm  )
    bp_not_ecm    = geomAndNot( bp    bp_ecm  )
    cab_not_ecm   = geomAndNot( cabar cab_ecm )
    e1_not_ecm    = geomAndNot( e1    e1_ecm  )
    e2_not_ecm    = geomAndNot( e2    e2_ecm  )
    ft_not_ecm    = geomAndNot( ft    ft_ecm  )
    ftb_not_ecm   = geomAndNot( ftbar ftb_ecm )
    m1_not_ecm    = geomAndNot( m1    m1_ecm  )
    m2_not_ecm    = geomAndNot( m2    m2_ecm  )
    m3_not_ecm    = geomAndNot( m3    m3_ecm  )
    m4_not_ecm    = geomAndNot( m4    m4_ecm  )
    m5_not_ecm    = geomAndNot( m5    m5_ecm  )
    ma_not_ecm    = geomAndNot( ma    ma_ecm  )
    ml_not_ecm    = geomAndNot( ml    ml_ecm  )
    mt_not_ecm    = geomAndNot( mt    mt_ecm  )
    mz_not_ecm    = geomAndNot( mz    mz_ecm  )
    rx_not_ecm    = geomAndNot( rx    rx_ecm  )
    v1b_not_ecm   = geomAndNot( v1bar v1b_ecm )
    v2b_not_ecm   = geomAndNot( v2bar v2b_ecm )
    v3b_not_ecm   = geomAndNot( v3bar v3b_ecm )
    v4b_not_ecm   = geomAndNot( v4bar v4b_ecm )
    v5b_not_ecm   = geomAndNot( v5bar v5b_ecm )

    am_ring       = geomOr( am_ovlp_grdr  )
    bp_ring       = geomOr( bp_ovlp_grdr  )
    cab_ring      = geomOr( cab_ovlp_grdr )
    e1_ring       = geomOr( e1_ovlp_grdr  )
    e2_ring       = geomOr( e2_ovlp_grdr  )
    ftb_ring      = geomOr( ftb_ovlp_grdr )
    ft_ring       = geomOr( ft_ovlp_grdr  )
    m1_ring       = geomOr( m1_ovlp_grdr  )
    m2_ring       = geomOr( m2_ovlp_grdr  )
    m3_ring       = geomOr( m3_ovlp_grdr  )
    m4_ring       = geomOr( m4_ovlp_grdr  )
    m5_ring       = geomOr( m5_ovlp_grdr  )
    ma_ring       = geomOr( ma_ovlp_grdr  )
    ml_ring       = geomOr( ml_ovlp_grdr  )
    mt_ring       = geomOr( mt_ovlp_grdr  )
    mz_ring       = geomOr( mz_ovlp_grdr  )
    rx_ring       = geomOr( rx_ovlp_grdr  )
    v1b_ring      = geomOr( v1b_ovlp_grdr )
    v2b_ring      = geomOr( v2b_ovlp_grdr )
    v3b_ring      = geomOr( v3b_ovlp_grdr )
    v4b_ring      = geomOr( v4b_ovlp_grdr )
    v5b_ring      = geomOr( v5b_ovlp_grdr )

    bp_not_ring   = geomAndNot( bp     bp_ring  )
    cab_not_ring  = geomAndNot( cabar  cab_ring )
    e1_not_ring   = geomAndNot( e1     e1_ring  )
    e2_not_ring   = geomAndNot( e2     e2_ring  )
    ftb_not_ring  = geomAndNot( ftbar  ftb_ring )
    m1_not_ring   = geomAndNot( m1     m1_ring  )
    m2_not_ring   = geomAndNot( m2     m2_ring  )
    m3_not_ring   = geomAndNot( m3     m3_ring  )
    m4_not_ring   = geomAndNot( m4     m4_ring  )
    m5_not_ring   = geomAndNot( m5     m5_ring  )
    mt_not_ring   = geomAndNot( mt     mt_ring  )
    mz_not_ring   = geomAndNot( mz     mz_ring  )
    rx_not_ring   = geomAndNot( rx     rx_ring  )
    v1b_not_ring  = geomAndNot( v1bar  v1b_ring )
    v2b_not_ring  = geomAndNot( v2bar  v2b_ring )
    v3b_not_ring  = geomAndNot( v3bar  v3b_ring )
    v4b_not_ring  = geomAndNot( v4bar  v4b_ring )
    v5b_not_ring  = geomAndNot( v5bar  v5b_ring )

    am_ring_45    = geomGetAngledEdge( am_ring 44.5 <= keep <= 45.5 )
    am_ring_90    = geomAndNot( am_ring am_ring_45 )
    bp_ring_45    = geomGetAngledEdge( bp_ring 44.5 <= keep <= 45.5 )
    bp_ring_90    = geomAndNot( bp_ring bp_ring_45 )
    e1_ring_45    = geomGetAngledEdge( e1_ring 44.5 <= keep <= 45.5 )
    e1_ring_90    = geomAndNot( e1_ring e1_ring_45 )
    e2_ring_45    = geomGetAngledEdge( e2_ring 44.5 <= keep <= 45.5 )
    e2_ring_90    = geomAndNot( e2_ring e2_ring_45 )
    m1_ring_45    = geomGetAngledEdge( m1_ring 44.5 <= keep <= 45.5 )
    m1_ring_90    = geomAndNot( m1_ring m1_ring_45 )
    m2_ring_45    = geomGetAngledEdge( m2_ring 44.5 <= keep <= 45.5 )
    m2_ring_90    = geomAndNot( m2_ring m2_ring_45 )
    m3_ring_45    = geomGetAngledEdge( m3_ring 44.5 <= keep <= 45.5 )
    m3_ring_90    = geomAndNot( m3_ring m3_ring_45 )
    m4_ring_45    = geomGetAngledEdge( m4_ring 44.5 <= keep <= 45.5 )
    m4_ring_90    = geomAndNot( m4_ring m4_ring_45 )
    m5_ring_45    = geomGetAngledEdge( m5_ring 44.5 <= keep <= 45.5 )
    m5_ring_90    = geomAndNot( m5_ring m5_ring_45 )
    ma_ring_45    = geomGetAngledEdge( ma_ring 44.5 <= keep <= 45.5 )
    ma_ring_90    = geomAndNot( ma_ring ma_ring_45 )
    ml_ring_45    = geomGetAngledEdge( ml_ring 44.5 <= keep <= 45.5 )
    ml_ring_90    = geomAndNot( ml_ring ml_ring_45 )
    mt_ring_45    = geomGetAngledEdge( mt_ring 44.5 <= keep <= 45.5 )
    mt_ring_90    = geomAndNot( mt_ring mt_ring_45 )
    mz_ring_45    = geomGetAngledEdge( mz_ring 44.5 <= keep <= 45.5 )
    mz_ring_90    = geomAndNot( mz_ring mz_ring_45 )
    rx_ring_45    = geomGetAngledEdge( rx_ring 44.5 <= keep <= 45.5 )
    rx_ring_90    = geomAndNot( rx_ring rx_ring_45 )

    cab_ring_45   = geomAnd( geomSize( geomGetNon90( cab_ring ) -4 ) cab_ring )
    cab_ring_90   = geomAndNot( cab_ring cab_ring_45 )
    ftb_ring_45   = geomAnd( geomSize( geomGetNon90( ftb_ring ) -4 ) ftb_ring )
    ftb_ring_90   = geomAndNot( ftb_ring ftb_ring_45 )
    v1b_ring_45   = geomAnd( geomSize( geomGetNon90( v1b_ring ) -4 ) v1b_ring )
    v1b_ring_90   = geomAndNot( v1b_ring v1b_ring_45 )
    v2b_ring_45   = geomAnd( geomSize( geomGetNon90( v2b_ring ) -4 ) v2b_ring )
    v2b_ring_90   = geomAndNot( v2b_ring v2b_ring_45 )
    v3b_ring_45   = geomAnd( geomSize( geomGetNon90( v3b_ring ) -4 ) v3b_ring )
    v3b_ring_90   = geomAndNot( v3b_ring v3b_ring_45 )
    v4b_ring_45   = geomAnd( geomSize( geomGetNon90( v4b_ring ) -4 ) v4b_ring )
    v4b_ring_90   = geomAndNot( v4b_ring v4b_ring_45 )
    v5b_ring_45   = geomAnd( geomSize( geomGetNon90( v5b_ring ) -4 ) v5b_ring )
    v5b_ring_90   = geomAndNot( v5b_ring v5b_ring_45 )

    if( avSwitch("HIRESSUB") then
      nohr_ring     = geomOverlap( nohr guardrng )
      nohr_not_ring = geomAndNot(  nohr nohr_ring )
    );End HIRESSUB=YES
  );End GUARDEDGE_PRESENT=YES


  ;===== Legacy Chip Guard Ring Set Up =====

  if( !avSwitch( "GUARDEDGE_PRESENT" ) then
    chipring      = geomAndNot( chipedge geomSize( chipedge -15.0 ))

    am_ring       = geomOverlap( am    chipring )
    bp_ring       = geomOverlap( bp    chipring )
    cab_ring      = geomOverlap( cabar chipring )
    e1_ring       = geomOverlap( e1    chipring )
    e2_ring       = geomOverlap( e2    chipring )
    ftb_ring      = geomOverlap( ftbar chipring )
    ft_ring       = geomOverlap( ft    chipring )
    m1_ring       = geomOverlap( m1    chipring )
    m2_ring       = geomOverlap( m2    chipring )
    m3_ring       = geomOverlap( m3    chipring )
    m4_ring       = geomOverlap( m4    chipring )
    m5_ring       = geomOverlap( m5    chipring )
    ma_ring       = geomOverlap( ma    chipring )
    ml_ring       = geomOverlap( ml    chipring )
    mt_ring       = geomOverlap( mt    chipring )
    mz_ring       = geomOverlap( mz    chipring )
    rx_ring       = geomOverlap( rx    chipring )
    v1b_ring      = geomOverlap( v1bar chipring )
    v2b_ring      = geomOverlap( v2bar chipring )
    v3b_ring      = geomOverlap( v3bar chipring )
    v4b_ring      = geomOverlap( v4bar chipring )
    v5b_ring      = geomOverlap( v5bar chipring )

    bp_not_ring   = geomAndNot( bp     bp_ring  )
    cab_not_ring  = geomAndNot( cabar  cab_ring )
    e1_not_ring   = geomAndNot( e1     e1_ring  )
    e2_not_ring   = geomAndNot( e2     e2_ring  )
    ftb_not_ring  = geomAndNot( ftbar  ftb_ring )
    m1_not_ring   = geomAndNot( m1     m1_ring  )
    m2_not_ring   = geomAndNot( m2     m2_ring  )
    m3_not_ring   = geomAndNot( m3     m3_ring  )
    m4_not_ring   = geomAndNot( m4     m4_ring  )
    m5_not_ring   = geomAndNot( m5     m5_ring  )
    mt_not_ring   = geomAndNot( mt     mt_ring  )
    mz_not_ring   = geomAndNot( mz     mz_ring  )
    rx_not_ring   = geomAndNot( rx     rx_ring  )
    v1b_not_ring  = geomAndNot( v1bar  v1b_ring )
    v2b_not_ring  = geomAndNot( v2bar  v2b_ring )
    v3b_not_ring  = geomAndNot( v3bar  v3b_ring )
    v4b_not_ring  = geomAndNot( v4bar  v4b_ring )
    v5b_not_ring  = geomAndNot( v5bar  v5b_ring )

    rx_ring_45    = geomGetAngledEdge( rx_ring  keep == 45 )
    rx_ring_90    = geomAndNot( rx_ring rx_ring_45 )
    bp_ring_45    = geomGetAngledEdge( bp_ring keep == 45 )
    bp_ring_90    = geomAndNot( bp_ring bp_ring_45 )
    e1_ring_45    = geomGetAngledEdge( e1_ring keep == 45 )
    e1_ring_90    = geomAndNot( e1_ring e1_ring_45 )
    m1_ring_45    = geomGetAngledEdge( m1_ring keep == 45 )
    m1_ring_90    = geomAndNot( m1_ring m1_ring_45 )
    m2_ring_45    = geomGetAngledEdge( m2_ring keep == 45 )
    m2_ring_90    = geomAndNot( m2_ring m2_ring_45 )
    m3_ring_45    = geomGetAngledEdge( m3_ring keep == 45 )
    m3_ring_90    = geomAndNot( m3_ring m3_ring_45 )
    m4_ring_45    = geomGetAngledEdge( m4_ring keep == 45 )
    m4_ring_90    = geomAndNot( m4_ring m4_ring_45 )
    m5_ring_45    = geomGetAngledEdge( m5_ring keep == 45 )
    m5_ring_90    = geomAndNot( m5_ring m5_ring_45 )
    mt_ring_45    = geomGetAngledEdge( mt_ring keep == 45 )
    mt_ring_90    = geomAndNot( mt_ring mt_ring_45 )
    am_ring_45    = geomGetAngledEdge( am_ring keep == 45 )
    am_ring_90    = geomAndNot( am_ring am_ring_45 )
    ml_ring_45    = geomGetAngledEdge( ml_ring keep == 45 )
    ml_ring_90    = geomAndNot( ml_ring ml_ring_45 )
    mz_ring_45    = geomGetAngledEdge( mz_ring keep == 45 )
    mz_ring_90    = geomAndNot( mz_ring mz_ring_45 )
    ma_ring_45    = geomGetAngledEdge( ma_ring keep == 45 )
    ma_ring_90    = geomAndNot( ma_ring ma_ring_45 )

    cab_ring_45   = geomAnd( geomSize( geomGetNon90( cab_ring ) -4 ) cab_ring )
    cab_ring_90   = geomAndNot( cab_ring cab_ring_45 )
    ftb_ring_45   = geomAnd( geomSize( geomGetNon90( ftb_ring ) -4 ) ftb_ring )
    ftb_ring_90   = geomAndNot( ftb_ring ftb_ring_45 )
    v1b_ring_45   = geomAnd( geomSize( geomGetNon90( v1b_ring ) -4 ) v1b_ring )
    v1b_ring_90   = geomAndNot( v1b_ring v1b_ring_45 )
    v2b_ring_45   = geomAnd( geomSize( geomGetNon90( v2b_ring ) -4 ) v2b_ring )
    v2b_ring_90   = geomAndNot( v2b_ring v2b_ring_45 )
    v3b_ring_45   = geomAnd( geomSize( geomGetNon90( v3b_ring ) -4 ) v3b_ring )
    v3b_ring_90   = geomAndNot( v3b_ring v3b_ring_45 )
    v4b_ring_45   = geomAnd( geomSize( geomGetNon90( v4b_ring ) -4 ) v4b_ring )
    v4b_ring_90   = geomAndNot( v4b_ring v4b_ring_45 )
    v5b_ring_45   = geomAnd( geomSize( geomGetNon90( v5b_ring ) -4 ) v5b_ring )
    v5b_ring_90   = geomAndNot( v5b_ring v5b_ring_45 )

    e2_ring_45    = geomGetAngledEdge( e2_ring keep == 45 )
    e2_ring_90    = geomAndNot( e2_ring e2_ring_45 )

    if( avSwitch("HIRESSUB") then
      nohr_ring     = geomOverlap( nohr chipring )
      nohr_not_ring = geomAndNot(  nohr nohr_ring )
    );End HIRESSUB=YES
  );End GUARDEDGE_PRESENT=NO

  chipedge_45   = geomGetAngledEdge( chipedge keep == 45 )
  chipedge_90   = geomAndNot( chipedge chipedge_45 )
  chipedge_edge = geomSize( geomGetEdge( chipedge ) -0.01 )


if( !avSwitch( "GUARDEDGE_PRESENT" ) then

  ;========================================
  ;===== Legacy Chip Guard Ring Rules =====
  ;========================================

 ;NOTE: BECAUSE OF THE BEVELED CORNERS,
 ;      MOST VALUES ARE CHECKED TO A RANGE (+-0.04) INSTEAD OF THEIR FIXED VALUE.

 ;Rule LEG_990
   drc( rx_ring_45 width < 1.08-tolLeg withCornerTouch "GRLEG_990a: RX(chipring) width >= 1.08 um.(45 edge)")
   drc( rx_ring_90 width < 1.08        withCornerTouch "GRLEG_990a: RX(chipring) width >= 1.08 um.(90 edge)")

   drc( bp_ring_45 width < 1.52-tolLeg withCornerTouch "GRLEG_990b: BP(chipring) width >= 1.52 um.(45 edge)")
   drc( bp_ring_90 width < 1.52        withCornerTouch "GRLEG_990b: BP(chipring) width >= 1.52 um.(90 edge)")

   errorLayer( geomButtOrOver( bp_ring bb )             "GRLEG_990c: BP(chipring) touching BB found!")

   drc( m1_ring_45 width < 1.08-tolLeg withCornerTouch "GRLEG_990f: M1(chipring) width >= 1.08 um.(45 edge)")
   drc( m1_ring_90 width < 1.08        withCornerTouch "GRLEG_990f: M1(chipring) width >= 1.08 um.(90 edge)")

   drc( m2_ring_45 width < 1.08-tolLeg withCornerTouch "GRLEG_990f: M2(chipring) width >= 1.08 um.(45 edge)")
   drc( m2_ring_90 width < 1.08        withCornerTouch "GRLEG_990f: M2(chipring) width >= 1.08 um.(90 edge)")

   drc( m3_ring_45 width < 1.08-tolLeg withCornerTouch "GRLEG_990f: M3(chipring) width >= 1.08 um.(45 edge)")
   drc( m3_ring_90 width < 1.08        withCornerTouch "GRLEG_990f: M3(chipring) width >= 1.08 um.(90 edge)")

   drc( m4_ring_45 width < 1.08-tolLeg withCornerTouch "GRLEG_990f: M4(chipring) width >= 1.08 um.(45 edge)")
   drc( m4_ring_90 width < 1.08        withCornerTouch "GRLEG_990f: M4(chipring) width >= 1.08 um.(90 edge)")

   drc( m5_ring_45 width < 1.08-tolLeg withCornerTouch "GRLEG_990f: M5(chipring) width >= 1.08 um.(45 edge)")
   drc( m5_ring_90 width < 1.08        withCornerTouch "GRLEG_990f: M5(chipring) width >= 1.08 um.(90 edge)")

   drc( mt_ring_45 width < 3.24-tolLeg withCornerTouch "GRLEG_990g: MT(chipring) width >= 3.24 um.(45 edge)")
   drc( mt_ring_90 width < 3.24        withCornerTouch "GRLEG_990g: MT(chipring) width >= 3.24 um.(90 edge)")

   drc( e2_ring_45 width < 2.00-tolLeg withCornerTouch "GRLEG_990h: E2(chipring) width >= 2.00 um.(45 edge)")
   drc( e2_ring_90 width < 2.00        withCornerTouch "GRLEG_990h: E2(chipring) width >= 2.00 um.(90 edge)")

   drc( e1_ring_45 width < 3.24-tolLeg withCornerTouch "GRLEG_990i: E1(chipring) width >= 3.24 um.(45 edge)")
   drc( e1_ring_90 width < 3.24        withCornerTouch "GRLEG_990i: E1(chipring) width >= 3.24 um.(90 edge)")

   drc( am_ring_45 width < 1.96-tolLeg withCornerTouch "GRLEG_990k: AM(chipring) width >= 2.00 um.(45 edge)")
   drc( am_ring_90 width < 2.00        withCornerTouch "GRLEG_990k: AM(chipring) width >= 2.00 um.(90 edge)")

   drc( ma_ring_45 width < 1.96-tolLeg withCornerTouch "GRLEG_990k: MA(chipring) width >= 2.00 um.(45 edge)")
   drc( ma_ring_90 width < 2.00        withCornerTouch "GRLEG_990k: MA(chipring) width >= 2.00 um.(90 edge)")

   drc( ml_ring_45 width < 2.36-tolLeg withCornerTouch "GRLEG_990k: ML(chipring) width >= 2.00 um.(45 edge)")
   drc( ml_ring_90 width < 2.40        withCornerTouch "GRLEG_990k: ML(chipring) width >= 2.00 um.(90 edge)")

   drc( mz_ring_45 width < 1.96-tolLeg withCornerTouch "GRLEG_990k: MZ(chipring) width >= 2.00 um.(45 edge)")
   drc( mz_ring_90 width < 2.00        withCornerTouch "GRLEG_990k: MZ(chipring) width >= 2.00 um.(90 edge)")


   err990d_45_gt = geomWidth( cab_ring_45 keep > 0.24 ) ;0.20 + 0.04 tolerance
   err990d_90_gt = geomWidth( cab_ring_90 keep > 0.20 )

   drc( cab_ring_45 width < 0.20-tolLeg parallel "GRLEG_990d: CABAR(chipring) width == 0.20 um.(45 edge,error <)")
   errorLayer( err990d_45_gt                     "GRLEG_990d: CABAR(chipring) width == 0.20 um.(45 edge,error >)")
   drc( cab_ring_90 width < 0.20        parallel "GRLEG_990d: CABAR(chipring) width == 0.20 um.(90 edge,error <)")
   errorLayer( err990d_90_gt                     "GRLEG_990d: CABAR(chipring) width == 0.20 um.(90 edge,error >)")


  procedure( Drc990e( layerlist )
    let( ( cmnd1 n z layer value_tol layer_45 layer_90 err990e_45_gt err990e_90_gt )
        n = 0
        foreach( z layerlist
        n = n+1

        layer         = nthelem( n layerlist )
        UClayer       = upperCase( layer )
        value_tol     = 0.04
        layer_45      = geomAnd( geomSize( geomGetNon90( evalstring(layer) ) -4 ) evalstring(layer) )
        layer_90      = geomAndNot( evalstring(layer) layer_45 )
        err990e_45_gt = geomWidth( layer_45 keep > 0.28+value_tol )
        err990e_90_gt = geomWidth( layer_90 keep > 0.28           )

        sprintf( errTxtGR990e_45_lt  "GRLEG_990e: %s width == 0.28 um.(45 edge,error <)" UClayer )
        sprintf( errTxtGR990e_45_gt  "GRLEG_990e: %s width == 0.28 um.(45 edge,error >)" UClayer )
        sprintf( errTxtGR990e_90_lt  "GRLEG_990e: %s width == 0.28 um.(90 edge,error <)" UClayer )
        sprintf( errTxtGR990e_90_gt  "GRLEG_990e: %s width == 0.28 um.(90 edge,error >)" UClayer )

        sprintf( cmnd1 "drc( layer_45 width < 0.28-value_tol opposite parallel errTxtGR990e_45_lt )")
        evalstring( cmnd1 )

        sprintf( cmnd2 "drc( layer_90 width < 0.28-value_tol opposite parallel errTxtGR990e_90_lt )")
        evalstring( cmnd2 )

        sprintf( cmnd3 "errorLayer( err990e_45_gt errTxtGR990e_45_gt )")
        evalstring( cmnd3 )

        sprintf( cmnd4 "errorLayer( err990e_90_gt errTxtGR990e_90_gt )")
        evalstring( cmnd4 )

      );End foreach
    );End let
  );End procedure DRC990e

   Drc990e( list( "v1b_ring" "v2b_ring" "v3b_ring" "v4b_ring" "v5b_ring" ) )


   ftb_ring_45   = geomAnd( geomSize( geomGetNon90( ftb_ring ) -4 ) ftb_ring )
   ftb_ring_90   = geomAndNot( ftb_ring ftb_ring_45 )
   err990j_45_gt = geomWidth( ftb_ring_45 keep > 1.28 ) ;1.24 + 0.04 tolerance
   err990j_90_gt = geomWidth( ftb_ring_90 keep > 1.24 )
   drc( ftb_ring_45 width < 1.24-tolLeg parallel "GRLEG_990j: FTBAR(chipring) width == 1.24 um.(45 edge,error <)")
   errorLayer( err990j_45_gt                     "GRLEG_990j: FTBAR(chipring) width == 1.24 um.(45 edge,error >)")
   drc( ftb_ring_90 width < 1.24        parallel "GRLEG_990j: FTBAR(chipring) width == 1.24 um.(90 edge,error <)")
   errorLayer( err990j_90_gt                     "GRLEG_990j: FTBAR(chipring) width == 1.24 um.(90 edge,error >)")


 ;Rule LEG_991
   err991 = geomAndNot( rx_ring bp_ring )
   drc( bp_ring_90 rx_ring_90 enc < 0.22 "GRLEG_991: RX must be within BP(chipring) >= 0.22 um.")
   drc( bp_ring_45 rx_ring_45 enc < 0.18 "GRLEG_991: RX must be within BP(chipring) >= 0.22 um.")
   errorLayer( err991                    "GRLEG_991: RX not within BP(chipring) found!")

 if( avSwitch("HIRESSUB") then
   nohr_ring_45 = geomGetAngledEdge( nohr_ring keep == 45 )
   nohr_ring_90 = geomAndNot( nohr_ring nohr_ring_45 )
   err991b      = geomAndNot( rx_ring nohr_ring )
   drc( nohr_ring_90 rx_ring_90 enc < 2.00  "GR991b: RX must be within NOHR(chipring) >= 2.00 um.")
   drc( nohr_ring_45 rx_ring_45 enc < 1.96  "GR991b: RX must be within NOHR(chipring) >= 2.00 um.")
   errorLayer( err991b                      "GR991b: RX not within NOHR(chipring) found!")
 ); End of HIRESSUB=ON

 ;Rule LEG_992
   err992 = geomAndNot( cab_ring  rx_ring )
   drc( rx_ring_90 cab_ring_90 enc < 0.44  "GRLEG_992: CABAR must be within RX(chipring) >= 0.44 um.")
   drc( rx_ring_45 cab_ring_45 enc < 0.40  "GRLEG_992: CABAR must be within RX(chipring) >= 0.44 um.")
   errorLayer( err992                      "GRLEG_992: CABAR not within RX(chipring) found!")

 ;Rule LEG_993
   err993 = geomAndNot( cab_ring m1_ring )
   drc( m1_ring_90 cab_ring_90 enc < 0.44  "GRLEG_993: CABAR must be within M1(chipring) >= 0.44 um.")
   drc( m1_ring_45 cab_ring_45 enc < 0.40  "GRLEG_993: CABAR must be within M1(chipring) >= 0.44 um.")
   errorLayer( err993                      "GRLEG_993: CABAR not within M1(chipring) found!")

 ;Rule LEG_994
   err994a = geomAndNot( v1b_ring m1_ring )
   drc( m1_ring_90 v1b_ring_90 enc < 0.40 "GRLEG_994a: V1BAR must be within M1(chipring) >= 0.40 um.")
   drc( m1_ring_45 v1b_ring_45 enc < 0.36 "GRLEG_994a: V1BAR must be within M1(chipring) >= 0.40 um.")
   errorLayer( err994a                    "GRLEG_994a: V1BAR not within M1(chipring) found!")

   err994b = geomAndNot( v2b_ring m2_ring )
   drc( m2_ring_90 v2b_ring_90 enc < 0.40 "GRLEG_994b: V2BAR must be within M2(chipring) >= 0.40 um.")
   drc( m2_ring_45 v2b_ring_45 enc < 0.36 "GRLEG_994b: V2BAR must be within M2(chipring) >= 0.40 um.")
   errorLayer( err994b                    "GRLEG_994b: V2BAR not within M2(chipring) found!")

   err994c = geomAndNot( v3b_ring m3_ring )
   drc( m3_ring_90 v3b_ring_90 enc < 0.40 "GRLEG_994c: V3BAR must be within M3(chipring) >= 0.40 um.")
   drc( m3_ring_45 v3b_ring_45 enc < 0.36 "GRLEG_994c: V3BAR must be within M3(chipring) >= 0.40 um.")
   errorLayer( err994c                    "GRLEG_994c: V3BAR not within M3(chipring) found!")

   err994d = geomAndNot( v4b_ring m4_ring )
   drc( m4_ring_90 v4b_ring_90 enc < 0.40 "GRLEG_994d: V4BAR must be within M4(chipring) >= 0.40 um.")
   drc( m4_ring_45 v4b_ring_45 enc < 0.36 "GRLEG_994d: V4BAR must be within M4(chipring) >= 0.40 um.")
   errorLayer( err994d                    "GRLEG_994d: V4BAR not within M4(chipring) found!")

   err994d1 = geomAndNot( v5b_ring m5_ring )
   drc( m5_ring_90 v5b_ring_90 enc < 0.40 "GRLEG_994d1: V5BAR must be within M5(chipring) >= 0.40 um.")
   drc( m5_ring_45 v5b_ring_45 enc < 0.36 "GRLEG_994d1: V5BAR must be within M5(chipring) >= 0.40 um.")
   errorLayer( err994d1                   "GRLEG_994d1: V5BAR not within M5(chipring) found!")

   err994e = geomAndNot( ftb_ring mt_ring )
   drc( mt_ring_90 ftb_ring_90 enc < 1.00 "GRLEG_994e: FTBAR must be within MT(chipring) >= 1.00 um.")
   drc( mt_ring_45 ftb_ring_45 enc < 0.96 "GRLEG_994e: FTBAR must be within MT(chipring) >= 1.00 um.")
   errorLayer( err994e                    "GRLEG_994e: FTBAR not within MT(chipring) found!")

   err994f_am = geomAnd( geomAndNot( ftb_ring am_ring ) LM0AM )
   drc( am_ring_90 ftb_ring_90 enc < 1.00 "GRLEG_994f: FTBAR must be within AM(chipring) >= 1.00 um.")
   drc( am_ring_45 ftb_ring_45 enc < 0.96 "GRLEG_994f: FTBAR must be within AM(chipring) >= 1.00 um.")
   errorLayer( err994f_am                 "GRLEG_994f: FTBAR not within AM(chipring) found!")

   err994f_e1 = geomAnd( geomAndNot( ftb_ring e1_ring ) LM0MA )
   drc( e1_ring_90 ftb_ring_90 enc < 1.00 "GRLEG_994f: FTBAR must be within E1(chipring) >= 1.00 um.")
   drc( e1_ring_45 ftb_ring_45 enc < 0.96 "GRLEG_994f: FTBAR must be within E1(chipring) >= 1.00 um.")
   errorLayer( err994f_e1                 "GRLEG_994f: FTBAR not within E1(chipring) found!")

   err994f_ml = geomAnd( geomAndNot( ftb_ring ml_ring ) LM0ML )
   drc( ml_ring_90 ftb_ring_90 enc < 0.60 "GRLEG_994f: FTBAR must be within ML(chipring) >= 0.60 um.")
   drc( ml_ring_45 ftb_ring_45 enc < 0.56 "GRLEG_994f: FTBAR must be within ML(chipring) >= 0.60 um.")
   errorLayer( err994f_ml                 "GRLEG_994f: FTBAR not within ML(chipring) found!")

   err994f_mz = geomAnd( geomAndNot( ftb_ring mz_ring ) LM0MZ )
   drc( mz_ring_90 ftb_ring_90 enc < 1.00 "GRLEG_994f: FTBAR must be within MZ(chipring) >= 1.00 um.")
   drc( mz_ring_45 ftb_ring_45 enc < 0.96 "GRLEG_994f: FTBAR must be within MZ(chipring) >= 1.00 um.")
   errorLayer( err994f_mz                 "GRLEG_994f: FTBAR not within MZ(chipring) found!")


 ;Rule LEG_995
   m2lm2_5    = geomAnd( m2_ring LM2_5)
   m2lm2m5_45 = geomGetAngledEdge( m2lm2_5 keep == 45 )
   m2lm2m5_90 = geomAndNot( m2lm2_5 m2lm2m5_45 )
   err995a    = geomAnd( geomAndNot( v1b_ring m2_ring ) LM2_5 )
   drc( m2lm2m5_90 v1b_ring_90 enc < 0.40  "GRLEG_995a: V1BAR must be within M2(chipring) >= 0.40 um.")
   drc( m2lm2m5_45 v1b_ring_45 enc < 0.36  "GRLEG_995a: V1BAR must be within M2(chipring) >= 0.40 um.")
   errorLayer( err995a                     "GRLEG_995a: V1BAR not within M2(chipring) found!")

   mtring_4lm = geomAnd( mt_ring LM1 )
   mtlm4_45   = geomGetAngledEdge( mtring_4lm keep == 45 )
   mtlm4_90   = geomAndNot( mtring_4lm mtlm4_45 )
   err996b    = geomAnd( geomAndNot( v1b_ring mt_ring ) LM1 )
   drc( mtlm4_90 v1b_ring_90 enc < 0.40    "GRLEG_995b: V1BAR must be within MT(chipring) >= 0.40 um.")
   drc( mtlm4_45 v1b_ring_45 enc < 0.36    "GRLEG_995b: V1BAR must be within MT(chipring) >= 0.40 um.")
   errorLayer( err996b                     "GRLEG_995b: V1BAR not within MT(chipring) found!")

 ;Rule LEG_996
   m3lm3      = geomAnd( m3_ring LM3_5 )
   m3lm3_45   = geomGetAngledEdge( m3lm3 keep == 45 )
   m3lm3_90   = geomAndNot( m3lm3 m3lm3_45 )
   err996a    = geomAnd( geomAndNot( v2b_ring m3_ring ) LM3_5 )
   drc( m3lm3_90 v2b_ring_90 enc < 0.40    "GRLEG_996a: V2BAR must be within M3(chipring) >= 0.40 um.")
   drc( m3lm3_45 v2b_ring_45 enc < 0.36    "GRLEG_996a: V2BAR must be within M3(chipring) >= 0.40 um.")
   errorLayer( err996a                     "GRLEG_996a: V2BAR not within M3(chipring) found!")

   mtring_2lm = geomAnd( mt_ring LM2 )
   mtlm2_45   = geomGetAngledEdge( mtring_2lm keep == 45 )
   mtlm2_90   = geomAndNot( mtring_2lm mtlm2_45 )
   err996b    = geomAnd( geomAndNot( v2b_ring mt_ring ) LM2 )
   drc( mtlm2_45 v2b_ring_45 enc < 0.36    "GRLEG_996b: V2BAR must be within M3(chipring) >= 0.40 um.")
   drc( mtlm2_90 v2b_ring_90 enc < 0.40    "GRLEG_996b: V2BAR must be within M3(chipring) >= 0.40 um.")
   errorLayer( err996b                     "GRLEG_996b: V2BAR not within MT(chipring) found!")

   m4lm4      = geomAnd( m4_ring LM4_5 )
   m4lm4_45   = geomGetAngledEdge( m4lm4 keep == 45 )
   m4lm4_90   = geomAndNot( m4lm4 m4lm4_45 )
   err996c    = geomAnd( geomAndNot( v3b_ring m4_ring ) LM4_5 )
   drc( m4lm4_90 v3b_ring_90 enc < 0.40    "GRLEG_996c: V3BAR must be within M4(chipring) >= 0.400 um.")
   drc( m4lm4_45 v3b_ring_45 enc < 0.36    "GRLEG_996c: V3BAR must be within M4(chipring) >= 0.400 um.")
   errorLayer( err996c                     "GRLEG_996c: V3BAR not within M4(chipring) found!")

   mtring_6lm = geomAnd( mt_ring LM3 )
   mtlm6_45   = geomGetAngledEdge( mtring_6lm keep == 45 )
   mtlm6_90   = geomAndNot( mtring_6lm mtlm6_45 )
   err996d    = geomAnd( geomAndNot( v3b_ring mt_ring ) LM3 )
   drc( mtlm6_90 v3b_ring_90 enc < 0.40    "GRLEG_996d: V4BAR must be within MT(chipring) >= 0.400 um.")
   drc( mtlm6_45 v3b_ring_45 enc < 0.36    "GRLEG_996d: V4BAR must be within MT(chipring) >= 0.400 um.")
   errorLayer( err996d                     "GRLEG_996d: V3BAR not within MT(chipring) found!")

   mtring_7lm = geomAnd( mt_ring LM4 )
   mtlm7_45   = geomGetAngledEdge( mtring_7lm keep == 45 )
   mtlm7_90   = geomAndNot( mtring_7lm mtlm7_45 )
   err996e    = geomAnd( geomAndNot( v4b_ring mt_ring ) LM4 )
   drc( mtlm7_90 v4b_ring_90 enc < 0.40    "GRLEG_996e: V4BAR must be within MT(chipring) >= 0.400 um.")
   drc( mtlm7_45 v4b_ring_45 enc < 0.36    "GRLEG_996e: V4BAR must be within MT(chipring) >= 0.400 um.")
   errorLayer( err996e                     "GRLEG_996e: V4BAR not within MT(chipring) found!")

   m5lm5    = geomAnd( m5_ring LM5 )
   m5lm5_45 = geomGetAngledEdge( m5lm5 keep == 45 )
   m5lm5_90 = geomAndNot( m5lm5 m5lm5_45 )
   err996f  = geomAnd( geomAndNot( v4b_ring m5_ring ) LM5 )
   drc( m5lm5_45 v4b_ring_45 enc < 0.36    "GRLEG_996f: V5BAR must be within M5(chipring) >= 0.400 um.")
   drc( m5lm5_90 v4b_ring_90 enc < 0.40    "GRLEG_996f: V5BAR must be within M5(chipring) >= 0.400 um.")
   errorLayer( err996f                     "GRLEG_996f: V4BAR not within M5(chipring) found!")

   mtlm5    = geomAnd( mt_ring LM5 )
   mtlm5_45 = geomGetAngledEdge( mtlm5 keep == 45 )
   mtlm5_90 = geomAndNot( mtlm5 mtlm5_45 )
   err996g  = geomAnd( geomAndNot( v5b_ring mt_ring ) LM5 )
   drc( mtlm5_90 v5b_ring_90 enc < 0.40    "GRLEG_996g: V5BAR must be within MT(chipring) >= 0.400 um.")
   drc( mtlm5_45 v5b_ring_45 enc < 0.36    "GRLEG_996g: V5BAR must be within MT(chipring) >= 0.400 um.")
   errorLayer( err996g                     "GRLEG_996g: V5BAR not within MT(chipring) found!")

   err996h = geomAndNot( e2_ring e1_ring )
   drc( e1_ring_90 e2_ring_90 enc < 0.60   "GRLEG_996h: E2 must be within E1(chipring) >= 0.60 um.")
   drc( e1_ring_45 e2_ring_45 enc < 0.56   "GRLEG_996h: E2 must be within E1(chipring) >= 0.60 um.")
   errorLayer( err996h                     "GRLEG_996h: E2 not within E1(chipring) found!")

   err996j = geomAndNot( e2_ring ma_ring )
   drc( ma_ring_90 e2_ring_90 enc < 1.76   "GRLEG_996j: E2 must be within MA(chipring) >= 1.760 um.")
   drc( ma_ring_45 e2_ring_45 enc < 1.72   "GRLEG_996j: E2 must be within MA(chipring) >= 1.760 um.")
   errorLayer( err996j                     "GRLEG_996j: E2 not within MA(chipring) found!")


 ;Rule LEG_999
   err999rx_90 = geomAvoiding( geomAndNot( geomSize( rx_ring_90 0.01) geomSize( chipedge_90 -11.06)) geomHoles( rx_ring))
   err999rx_45 = geomAvoiding( geomAndNot( geomSize( rx_ring_45 0.01) geomSize( chipedge_45 -11.10)) geomHoles( rx_ring));11.06 + 0.04 TOLERANCE
   err999m1_90 = geomAvoiding( geomAndNot( geomSize( m1_ring_90 0.01) geomSize( chipedge_90 -11.06)) geomHoles( m1_ring))
   err999m1_45 = geomAvoiding( geomAndNot( geomSize( m1_ring_45 0.01) geomSize( chipedge_45 -11.10)) geomHoles( m1_ring));11.06 + 0.04 TOLERANCE
   err999m2_90 = geomAnd( geomAvoiding( geomAndNot( geomSize( m2_ring_90 0.01) geomSize( chipedge_90 -11.06)) geomHoles( m2_ring)) LM2_5 )
   err999m2_45 = geomAnd( geomAvoiding( geomAndNot( geomSize( m2_ring_45 0.01) geomSize( chipedge_45 -11.10)) geomHoles( m2_ring)) LM2_5 );11.06 + 0.04 TOLERANCE
   err999m3_90 = geomAnd( geomAvoiding( geomAndNot( geomSize( m3_ring_90 0.01) geomSize( chipedge_90 -11.06)) geomHoles( m3_ring)) LM3_5 )
   err999m3_45 = geomAnd( geomAvoiding( geomAndNot( geomSize( m3_ring_45 0.01) geomSize( chipedge_45 -11.10)) geomHoles( m3_ring)) LM3_5) ;11.06 + 0.04 TOLERANCE
   err999m4_90 = geomAnd( geomAvoiding( geomAndNot( geomSize( m4_ring_90 0.01) geomSize( chipedge_90 -11.06)) geomHoles( m4_ring)) LM4_5 )
   err999m4_45 = geomAnd( geomAvoiding( geomAndNot( geomSize( m4_ring_45 0.01) geomSize( chipedge_45 -11.10)) geomHoles( m4_ring)) LM4_5); 11.06 + 0.04 TOLERANCE
   err999m5_90 = geomAnd( geomAvoiding( geomAndNot( geomSize( m5_ring_90 0.01) geomSize( chipedge_90 -11.06)) geomHoles( m5_ring)) LM5 )
   err999m5_45 = geomAnd( geomAvoiding( geomAndNot( geomSize( m5_ring_45 0.01) geomSize( chipedge_45 -11.10)) geomHoles( m5_ring)) LM5 );11.06 + 0.04 TOLERANCE

   drc( chipedge_45 rx enc < 11.06-tolLeg "GRLEG_999: RX(chipring) must be within CHIPEDGE == 11.06 um. (error <)")
   drc( chipedge_90 rx enc < 11.06        "GRLEG_999: RX(chipring) must be within CHIPEDGE == 11.06 um. (error <)")
   drc( chipedge_45 m1 enc < 11.06-tolLeg "GRLEG_999: M1(chipring) must be within CHIPEDGE == 11.06 um. (error <)")
   drc( chipedge_90 m1 enc < 11.06        "GRLEG_999: M1(chipring) must be within CHIPEDGE == 11.06 um. (error <)")
   drc( chipedge_45 m2 enc < 11.06-tolLeg "GRLEG_999: M2(chipring) must be within CHIPEDGE == 11.06 um. (error <)")
   drc( chipedge_90 m2 enc < 11.06        "GRLEG_999: M2(chipring) must be within CHIPEDGE == 11.06 um. (error <)")
   drc( chipedge_45 m3 enc < 11.06-tolLeg "GRLEG_999: M3(chipring) must be within CHIPEDGE == 11.06 um. (error <)")
   drc( chipedge_90 m3 enc < 11.06        "GRLEG_999: M3(chipring) must be within CHIPEDGE == 11.06 um. (error <)")
   drc( chipedge_45 m4 enc < 11.06-tolLeg "GRLEG_999: M4(chipring) must be within CHIPEDGE == 11.06 um. (error <)")
   drc( chipedge_90 m4 enc < 11.06        "GRLEG_999: M4(chipring) must be within CHIPEDGE == 11.06 um. (error <)")
   drc( chipedge_45 m5 enc < 11.06-tolLeg "GRLEG_999: M5(chipring) must be within CHIPEDGE == 11.06 um. (error <)")
   drc( chipedge_90 m5 enc < 11.06        "GRLEG_999: M5(chipring) must be within CHIPEDGE == 11.06 um. (error <)")
   errorLayer( err999rx_45                "GRLEG_999: RX(chipring) must be within CHIPEDGE == 11.06 um. (error >)")
   errorLayer( err999rx_90                "GRLEG_999: RX(chipring) must be within CHIPEDGE == 11.06 um. (error >)")
   errorLayer( err999m1_45                "GRLEG_999: M1(chipring) must be within CHIPEDGE == 11.06 um. (error >)")
   errorLayer( err999m1_90                "GRLEG_999: M1(chipring) must be within CHIPEDGE == 11.06 um. (error >)")
   errorLayer( err999m2_45                "GRLEG_999: M2(chipring) must be within CHIPEDGE == 11.06 um. (error >)")
   errorLayer( err999m2_90                "GRLEG_999: M2(chipring) must be within CHIPEDGE == 11.06 um. (error >)")
   errorLayer( err999m3_45                "GRLEG_999: M3(chipring) must be within CHIPEDGE == 11.06 um. (error >)")
   errorLayer( err999m3_90                "GRLEG_999: M3(chipring) must be within CHIPEDGE == 11.06 um. (error >)")
   errorLayer( err999m4_45                "GRLEG_999: M4(chipring) must be within CHIPEDGE == 11.06 um. (error >)")
   errorLayer( err999m4_90                "GRLEG_999: M4(chipring) must be within CHIPEDGE == 11.06 um. (error >)")
   errorLayer( err999m5_45                "GRLEG_999: M5(chipring) must be within CHIPEDGE == 11.06 um. (error >)")
   errorLayer( err999m5_90                "GRLEG_999: M5(chipring) must be within CHIPEDGE == 11.06 um. (error >)")


   chipedge_bdy = geomGetBBox( chipedge 0 < length 0 < width )
   chipedge_but = geomCoincident( chipedge_ref chipedge_bdy )
   chipedge_not = geomAndNot( chipedge_rby chipedge_but )
   err999ay     = drc( chipedge_not 0.0084 < area )
   err999ay_bis = geomButtOrOver( chipedge geomGrow( geomAnd( geomGrow( chipedge_bdy 9385 9385 ) err999ay ) 9385 9385) )
   errorLayer( err999ay_bis "GRLEG_999a: CHIPEDGE is not bounded at X=0 on the left or not bounded at Y=0 on the bottom" )

   chipedge_erx = geomGrow( chipedge_bdy -9380 0)
   errorLayer( chipedge_erx "ERROR: CHIPEDGE maximum x dimension (mm) = 18.76 mm " )
   chipedge_ery = geomGrow( geomGrow( chipedge_bdy 0 -10000) 0 -380)
   errorLayer( chipedge_ery "ERROR: CHIPEDGE maximum y dimension (mm) = 20.76 mm " )

   chipedge_45_size      = geomSize( chipedge_45 -11.02)
   chipedge_90_size      = geomSize( chipedge_90 -11.06)

   chipedge_45_size_x928 = geomSize( chipedge_45 -9.24)
   chipedge_90_size_x928 = geomSize( chipedge_90 -9.28)

   chipedge_45_size_x950 = geomSize( chipedge_45 -9.46)
   chipedge_90_size_x950 = geomSize( chipedge_90 -9.50)

   chipedge_exists = geomEnclose( bkgnd chipedge )

   if( avSwitch("HIRESSUB") then
     err999a_ti_90 = geomAnd( geomOr( geomOutside( ti chipedge )  geomAnd( ti chipedge_90_size_x950 ) ) chipedge_exists )
     err999a_ti_45 = geomAnd( geomOr( geomOutside( ti chipedge )  geomAnd( ti chipedge_45_size_x950 ) ) chipedge_exists )
     errorLayer( geomOr( err999a_ti_90 err999a_ti_45)      "GRTI999a: TI must be within CHIPEDGE >= 9.50 um")
   );End HIRESSUB

   err999a_op_90 = geomAnd( geomOr( geomOutside( op chipedge )  geomAnd( op chipedge_90_size ) ) chipedge_exists )
   err999a_op_45 = geomAnd( geomOr( geomOutside( op chipedge )  geomAnd( op chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_op_90 err999a_op_45)        "GRLEG_999a: OP must be within CHIPEDGE >= 11.06 um")

   err999a_pi_90 = geomAnd( geomOr( geomOutside( pi chipedge )  geomAnd( pi chipedge_90_size ) ) chipedge_exists )
   err999a_pi_45 = geomAnd( geomOr( geomOutside( pi chipedge )  geomAnd( pi chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_pi_90 err999a_pi_45)        "GRLEG_999a: PI must be within CHIPEDGE >= 11.06 um")

   err999a_nw_90 = geomAnd( geomOr( geomOutside( nw chipedge )  geomAnd( nw chipedge_90_size ) ) chipedge_exists )
   err999a_nw_45 = geomAnd( geomOr( geomOutside( nw chipedge )  geomAnd( nw chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_nw_90 err999a_nw_45)        "GRLEG_999a: NW must be within CHIPEDGE >= 11.06 um")

   err999a_ns_90 = geomAnd( geomOr( geomOutside( ns chipedge )  geomAnd( ns chipedge_90_size ) ) chipedge_exists )
   err999a_ns_45 = geomAnd( geomOr( geomOutside( ns chipedge )  geomAnd( ns chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_ns_90 err999a_ns_45)        "GRLEG_999a: NS must be within CHIPEDGE >= 11.06 um")

   err999a_pc_90 = geomAnd( geomOr( geomOutside( pc chipedge )  geomAnd( pc chipedge_90_size ) ) chipedge_exists )
   err999a_pc_45 = geomAnd( geomOr( geomOutside( pc chipedge )  geomAnd( pc chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_pc_90 err999a_pc_45)        "GRLEG_999a: PC must be within CHIPEDGE >= 11.06 um")

   err999a_rx_90 = geomAnd( geomOr( geomOutside( rx chipedge )  geomAnd( rx chipedge_90_size ) ) chipedge_exists )
   err999a_rx_45 = geomAnd( geomOr( geomOutside( rx chipedge )  geomAnd( rx chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_rx_90 err999a_rx_45)        "GRLEG_999a: RX must be within CHIPEDGE >= 11.06 um")

   err999a_ca_90 = geomAnd( geomOr( geomOutside( ca chipedge )  geomAnd( ca chipedge_90_size ) ) chipedge_exists )
   err999a_ca_45 = geomAnd( geomOr( geomOutside( ca chipedge )  geomAnd( ca chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_ca_90 err999a_ca_45)        "GRLEG_999a: CA must be within CHIPEDGE >= 11.06 um")

   err999a_cabar_90 = geomAnd( geomOr( geomOutside( cabar chipedge )  geomAnd( cabar chipedge_90_size ) ) chipedge_exists )
   err999a_cabar_45 = geomAnd( geomOr( geomOutside( cabar chipedge )  geomAnd( cabar chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_cabar_90 err999a_cabar_45)  "GRLEG_999a: CABAR must be within CHIPEDGE >= 11.06 um")

   err999a_rn_90 = geomAnd( geomOr( geomOutside( rn chipedge )  geomAnd( rn chipedge_90_size ) ) chipedge_exists )
   err999a_rn_45 = geomAnd( geomOr( geomOutside( rn chipedge )  geomAnd( rn chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_rn_90 err999a_rn_45)        "GRLEG_999a: RN must be within CHIPEDGE >= 11.06 um")

   err999a_pr_90 = geomAnd( geomOr( geomOutside( pr chipedge )  geomAnd( pr chipedge_90_size ) ) chipedge_exists )
   err999a_pr_45 = geomAnd( geomOr( geomOutside( pr chipedge )  geomAnd( pr chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_pr_90 err999a_pr_45)        "GRLEG_999a: PR must be within CHIPEDGE >= 11.06 um")

   err999a_nr_90 = geomAnd( geomOr( geomOutside( nr chipedge )  geomAnd( nr chipedge_90_size ) ) chipedge_exists )
   err999a_nr_45 = geomAnd( geomOr( geomOutside( nr chipedge )  geomAnd( nr chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_nr_90 err999a_nr_45)        "GRLEG_999a: NR must be within CHIPEDGE >= 11.06 um")

   err999a_bb_90 = geomAnd( geomOr( geomOutside( bb chipedge )  geomAnd( bb chipedge_90_size ) ) chipedge_exists )
   err999a_bb_45 = geomAnd( geomOr( geomOutside( bb chipedge )  geomAnd( bb chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_bb_90 err999a_bb_45)        "GRLEG_999a: BB must be within CHIPEDGE >= 11.06 um")

   err999a_jd_90 = geomAnd( geomOr( geomOutside( jd chipedge )  geomAnd( jd chipedge_90_size ) ) chipedge_exists )
   err999a_jd_45 = geomAnd( geomOr( geomOutside( jd chipedge )  geomAnd( jd chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_jd_90 err999a_jd_45)        "GRLEG_999a: JD must be within CHIPEDGE >= 11.06 um")

   err999a_rr_90 = geomAnd( geomOr( geomOutside( rr chipedge )  geomAnd( rr chipedge_90_size ) ) chipedge_exists )
   err999a_rr_45 = geomAnd( geomOr( geomOutside( rr chipedge )  geomAnd( rr chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_rr_90 err999a_rr_45)        "GRLEG_999a: RR must be within CHIPEDGE >= 11.06 um")

   err999a_rp_90 = geomAnd( geomOr( geomOutside( rp chipedge )  geomAnd( rp chipedge_90_size ) ) chipedge_exists )
   err999a_rp_45 = geomAnd( geomOr( geomOutside( rp chipedge )  geomAnd( rp chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_rp_90 err999a_rp_45)        "GRLEG_999a: RP must be within CHIPEDGE >= 11.06 um")

   err999a_dg_90 = geomAnd( geomOr( geomOutside( dg chipedge )  geomAnd( dg chipedge_90_size ) ) chipedge_exists )
   err999a_dg_45 = geomAnd( geomOr( geomOutside( dg chipedge )  geomAnd( dg chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_dg_90 err999a_dg_45)        "GRLEG_999a: DG must be within CHIPEDGE >= 11.06 um")

   err999a_tg_90 = geomAnd( geomOr( geomOutside( tg chipedge )  geomAnd( tg chipedge_90_size ) ) chipedge_exists )
   err999a_tg_45 = geomAnd( geomOr( geomOutside( tg chipedge )  geomAnd( tg chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_tg_90 err999a_tg_45)        "GRLEG_999a: TG must be within CHIPEDGE >= 11.06 um")

   err999a_m1_90 = geomAnd( geomOr( geomOutside( m1 chipedge )  geomAnd( m1 chipedge_90_size ) ) chipedge_exists )
   err999a_m1_45 = geomAnd( geomOr( geomOutside( m1 chipedge )  geomAnd( m1 chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_m1_90 err999a_m1_45)        "GRLEG_999a: M1 must be within CHIPEDGE >= 11.06 um")

   err999a_k1_90 = geomAnd( geomOr( geomOutside( k1 chipedge )  geomAnd( k1 chipedge_90_size ) ) chipedge_exists )
   err999a_k1_45 = geomAnd( geomOr( geomOutside( k1 chipedge )  geomAnd( k1 chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_k1_90 err999a_k1_45)        "GRLEG_999a: K1 must be within CHIPEDGE >= 11.06 um")

   err999a_v1_90 = geomAnd( geomOr( geomOutside( v1 chipedge )  geomAnd( v1 chipedge_90_size ) ) chipedge_exists )
   err999a_v1_45 = geomAnd( geomOr( geomOutside( v1 chipedge )  geomAnd( v1 chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_v1_90 err999a_v1_45)        "GRLEG_999a: V1 must be within CHIPEDGE >= 11.06 um")

   err999a_v1bar_90 = geomAnd( geomOr( geomOutside( v1bar chipedge )  geomAnd( v1bar chipedge_90_size ) ) chipedge_exists )
   err999a_v1bar_45 = geomAnd( geomOr( geomOutside( v1bar chipedge )  geomAnd( v1bar chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_v1bar_90 err999a_v1bar_45)  "GRLEG_999a: V1BAR must be within CHIPEDGE >= 11.06 um")

   err999a_m2_90 = geomAnd( geomOr( geomOutside( m2 chipedge )  geomAnd( m2 chipedge_90_size ) ) chipedge_exists )
   err999a_m2_45 = geomAnd( geomOr( geomOutside( m2 chipedge )  geomAnd( m2 chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_m2_90 err999a_m2_45)        "GRLEG_999a: M2 must be within CHIPEDGE >= 11.06 um")

   err999a_v2_90 = geomAnd( geomOr( geomOutside( v2 chipedge )  geomAnd( v2 chipedge_90_size ) ) chipedge_exists )
   err999a_v2_45 = geomAnd( geomOr( geomOutside( v2 chipedge )  geomAnd( v2 chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_v2_90 err999a_v2_45)        "GRLEG_999a: V2 must be within CHIPEDGE >= 11.06 um")

   err999a_v2bar_90 = geomAnd( geomOr( geomOutside( v2bar chipedge )  geomAnd( v2bar chipedge_90_size ) ) chipedge_exists )
   err999a_v2bar_45 = geomAnd( geomOr( geomOutside( v2bar chipedge )  geomAnd( v2bar chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_v2bar_90 err999a_v2bar_45)  "GRLEG_999a: V2BAR must be within CHIPEDGE >= 11.06 um")

   err999a_m3_90 = geomAnd( geomOr( geomOutside( m3 chipedge )  geomAnd( m3 chipedge_90_size ) ) chipedge_exists )
   err999a_m3_45 = geomAnd( geomOr( geomOutside( m3 chipedge )  geomAnd( m3 chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_m3_90 err999a_m3_45)        "GRLEG_999a: M3 must be within CHIPEDGE >= 11.06 um")

   err999a_v3_90 = geomAnd( geomOr( geomOutside( v3 chipedge )  geomAnd( v3 chipedge_90_size ) ) chipedge_exists )
   err999a_v3_45 = geomAnd( geomOr( geomOutside( v3 chipedge )  geomAnd( v3 chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_v3_90 err999a_v3_45)        "GRLEG_999a: V3 must be within CHIPEDGE >= 11.06 um")

   err999a_v3bar_90 = geomAnd( geomOr( geomOutside( v3bar chipedge )  geomAnd( v3bar chipedge_90_size ) ) chipedge_exists )
   err999a_v3bar_45 = geomAnd( geomOr( geomOutside( v3bar chipedge )  geomAnd( v3bar chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_v3bar_90 err999a_v3bar_45)  "GRLEG_999a: V3BAR must be within CHIPEDGE >= 11.06 um")

   err999a_m4_90 = geomAnd( geomOr( geomOutside( m4 chipedge )  geomAnd( m4 chipedge_90_size ) ) chipedge_exists )
   err999a_m4_45 = geomAnd( geomOr( geomOutside( m4 chipedge )  geomAnd( m4 chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_m4_90 err999a_m4_45)        "GRLEG_999a: M4 must be within CHIPEDGE >= 11.06 um")

   err999a_v4_90 = geomAnd( geomOr( geomOutside( v4 chipedge )  geomAnd( v4 chipedge_90_size ) ) chipedge_exists )
   err999a_v4_45 = geomAnd( geomOr( geomOutside( v4 chipedge )  geomAnd( v4 chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_v4_90 err999a_v4_45)        "GRLEG_999a: V4 must be within CHIPEDGE >= 11.06 um")

   err999a_v4bar_90 = geomAnd( geomOr( geomOutside( v4bar chipedge )  geomAnd( v4bar chipedge_90_size ) ) chipedge_exists )
   err999a_v4bar_45 = geomAnd( geomOr( geomOutside( v4bar chipedge )  geomAnd( v4bar chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_v4bar_90 err999a_v4bar_45)  "GRLEG_999a: V4BAR must be within CHIPEDGE >= 11.06 um")

   err999a_m5_90 = geomAnd( geomOr( geomOutside( m5 chipedge )  geomAnd( m5 chipedge_90_size ) ) chipedge_exists )
   err999a_m5_45 = geomAnd( geomOr( geomOutside( m5 chipedge )  geomAnd( m5 chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_m5_90 err999a_m5_45)        "GRLEG_999a: M5 must be within CHIPEDGE >= 11.06 um")

   err999a_v5_90 = geomAnd( geomOr( geomOutside( v5 chipedge )  geomAnd( v5 chipedge_90_size ) ) chipedge_exists )
   err999a_v5_45 = geomAnd( geomOr( geomOutside( v5 chipedge )  geomAnd( v5 chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_v5_90 err999a_v5_45)        "GRLEG_999a: V5 must be within CHIPEDGE >= 11.06 um")

   err999a_v5bar_90 = geomAnd( geomOr( geomOutside( v5bar chipedge )  geomAnd( v5bar chipedge_90_size ) ) chipedge_exists )
   err999a_v5bar_45 = geomAnd( geomOr( geomOutside( v5bar chipedge )  geomAnd( v5bar chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_v5bar_90 err999a_v5bar_45)  "GRLEG_999a: V5BAR must be within CHIPEDGE >= 11.06 um")

   err999a_qt_90 = geomAnd( geomOr( geomOutside( qt chipedge )  geomAnd( qt chipedge_90_size ) ) chipedge_exists )
   err999a_qt_45 = geomAnd( geomOr( geomOutside( qt chipedge )  geomAnd( qt chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_qt_90 err999a_qt_45)        "GRLEG_999a: QT must be within CHIPEDGE >= 11.06 um")

   err999a_ht_90 = geomAnd( geomOr( geomOutside( ht chipedge )  geomAnd( ht chipedge_90_size ) ) chipedge_exists )
   err999a_ht_45 = geomAnd( geomOr( geomOutside( ht chipedge )  geomAnd( ht chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_ht_90 err999a_ht_45)        "GRLEG_999a: HT must be within CHIPEDGE >= 11.06 um")

   err999a_ft_90 = geomAnd( geomOr( geomOutside( ft chipedge )  geomAnd( ft chipedge_90_size ) ) chipedge_exists )
   err999a_ft_45 = geomAnd( geomOr( geomOutside( ft chipedge )  geomAnd( ft chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_ft_90 err999a_ft_45)        "GRLEG_999a: FT must be within CHIPEDGE >= 11.06 um")

   err999a_ftbar_90 = geomAnd( geomOr( geomOutside( ftbar chipedge )  geomAnd( ftbar chipedge_90_size ) ) chipedge_exists )
   err999a_ftbar_45 = geomAnd( geomOr( geomOutside( ftbar chipedge )  geomAnd( ftbar chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_ftbar_90 err999a_ftbar_45)  "GRLEG_999a: FTBAR must be within CHIPEDGE >= 11.06 um")

   err999a_e2_90 = geomAnd( geomOr( geomOutside( e2 chipedge )  geomAnd( e2 chipedge_90_size ) ) chipedge_exists )
   err999a_e2_45 = geomAnd( geomOr( geomOutside( e2 chipedge )  geomAnd( e2 chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_e2_90 err999a_e2_45)        "GRLEG_999a: E2 must be within CHIPEDGE >= 11.06 um")

   err999a_dv_90 = geomAnd( geomOr( geomOutside( dv chipedge )  geomAnd( dv chipedge_90_size ) ) chipedge_exists )
   err999a_dv_45 = geomAnd( geomOr( geomOutside( dv chipedge )  geomAnd( dv chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_dv_90 err999a_dv_45)        "GRLEG_999a: DV must be within CHIPEDGE >= 11.06 um")

   err999a_lv_90 = geomAnd( geomOr( geomOutside( lv chipedge )  geomAnd( lv chipedge_90_size ) ) chipedge_exists )
   err999a_lv_45 = geomAnd( geomOr( geomOutside( lv chipedge )  geomAnd( lv chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_lv_90 err999a_lv_45)        "GRLEG_999a: LV must be within CHIPEDGE >= 11.06 um")

   err999a_tv_90 = geomAnd( geomOr( geomOutside( tv chipedge )  geomAnd( tv chipedge_90_size ) ) chipedge_exists )
   err999a_tv_45 = geomAnd( geomOr( geomOutside( tv chipedge )  geomAnd( tv chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_tv_90 err999a_tv_45)        "GRLEG_999a: TV must be within CHIPEDGE >= 11.06 um")

   err999a_js_90 = geomAnd( geomOr( geomOutside( js chipedge )  geomAnd( js chipedge_90_size ) ) chipedge_exists )
   err999a_js_45 = geomAnd( geomOr( geomOutside( js chipedge )  geomAnd( js chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_js_90 err999a_js_45)        "GRLEG_999a: JS must be within CHIPEDGE >= 11.06 um")

   ;err999a_bfgen_90 = geomAnd( geomOr( geomOutside( bfgen chipedge )  geomAnd( bfgen chipedge_90_size ) ) chipedge_exists )
   ;err999a_bfgen_45 = geomAnd( geomOr( geomOutside( bfgen chipedge )  geomAnd( bfgen chipedge_45_size ) ) chipedge_exists )
   ;errorLayer( geomOr( err999a_bfgen_90 err999a_bfgen_45) "GRLEG_999a: BFGEN must be within CHIPEDGE >= 11.06 um")

   err999a_degen_90 = geomAnd( geomOr( geomOutside( degen chipedge )  geomAnd( degen chipedge_90_size ) ) chipedge_exists )
   err999a_degen_45 = geomAnd( geomOr( geomOutside( degen chipedge )  geomAnd( degen chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_degen_90 err999a_degen_45)  "GRLEG_999a: DEGEN must be within CHIPEDGE >= 11.06 um")

   err999a_phgen_90 = geomAnd( geomOr( geomOutside( phgen chipedge )  geomAnd( phgen chipedge_90_size ) ) chipedge_exists )
   err999a_phgen_45 = geomAnd( geomOr( geomOutside( phgen chipedge )  geomAnd( phgen chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_phgen_90 err999a_phgen_45)  "GRLEG_999a: PHGEN must be within CHIPEDGE >= 11.06 um")

   err999a_dfgen_90 = geomAnd( geomOr( geomOutside( dfgen chipedge )  geomAnd( dfgen chipedge_90_size ) ) chipedge_exists )
   err999a_dfgen_45 = geomAnd( geomOr( geomOutside( dfgen chipedge )  geomAnd( dfgen chipedge_45_size ) ) chipedge_exists )
   errorLayer( geomOr( err999a_dfgen_90 err999a_dfgen_45)  "GRLEG_999a: DFGEN must be within CHIPEDGE >= 11.06 um")

  ;err999a_bhgen_90 = geomAnd( geomOr( geomOutside( bhgen chipedge )  geomAnd( bhgen chipedge_90_size ) ) chipedge_exists )
  ;err999a_bhgen_45 = geomAnd( geomOr( geomOutside( bhgen chipedge )  geomAnd( bhgen chipedge_45_size ) ) chipedge_exists )
  ;errorLayer( geomOr( err999a_bhgen_90 err999a_bhgen_45)  "GRLEG_999a: BHGEN must be within CHIPEDGE >= 11.06 um")

   err999a = geomAnd( geomOutside( geomOr( geomOverlap( bkgnd dv ) geomOverlap( bkgnd lv ) ) chipedge ) chipedge_exists )
   errorLayer( err999a                                     "GRLEG_999a: Background enclosing a pad must contain CHIPEDGE!")

 ;Rule GRLEG_999b
   err999a_bp_90 = geomAnd( geomOr( geomOutside( bp chipedge )  geomAnd( bp chipedge_90_size_x928 ) ) chipedge_exists )
   err999a_bp_45 = geomAnd( geomOr( geomOutside( bp chipedge )  geomAnd( bp chipedge_45_size_x928 ) ) chipedge_exists )
   errorLayer( geomOr( err999a_bp_90 err999a_bp_45)        "GRLEG_999b: BP must be within CHIPEDGE >= 9.28 um")

 ;Rule GRLEG_999c
   err999cam_90 = geomAnd( geomAvoiding( geomAndNot( geomSize( am_ring_90 0.01) geomSize( chipedge_90 -11.06)) geomHoles( am_ring)) LM0AM )
   err999cam_45 = geomAnd( geomAvoiding( geomAndNot( geomSize( am_ring_45 0.01) geomSize( chipedge_45 -11.10)) geomHoles( am_ring)) LM0AM );11.06 + 0.04 TOLERANCE
   err999ce1_90 = geomAnd( geomAvoiding( geomAndNot( geomSize( e1_ring_90 0.01) geomSize( chipedge_90 -11.06)) geomHoles( e1_ring)) LM0MA )
   err999ce1_45 = geomAnd( geomAvoiding( geomAndNot( geomSize( e1_ring_45 0.01) geomSize( chipedge_45 -11.10)) geomHoles( e1_ring)) LM0MA );11.06 + 0.04 TOLERANCE
   err999cma_90 = geomAnd( geomAvoiding( geomAndNot( geomSize( ma_ring_90 0.01) geomSize( chipedge_90 -11.06)) geomHoles( ma_ring)) LM0MA )
   err999cma_45 = geomAnd( geomAvoiding( geomAndNot( geomSize( ma_ring_45 0.01) geomSize( chipedge_45 -11.10)) geomHoles( ma_ring)) LM0MA );11.06 + 0.04 TOLERANCE
   err999cml_90 = geomAnd( geomAvoiding( geomAndNot( geomSize( ml_ring_90 0.01) geomSize( chipedge_90 -11.06)) geomHoles( ml_ring)) LM0ML )
   err999cml_45 = geomAnd( geomAvoiding( geomAndNot( geomSize( ml_ring_45 0.01) geomSize( chipedge_45 -11.10)) geomHoles( ml_ring)) LM0ML );11.06 + 0.04 TOLERANCE
   err999cmz_90 = geomAnd( geomAvoiding( geomAndNot( geomSize( mz_ring_90 0.01) geomSize( chipedge_90 -11.06)) geomHoles( mz_ring)) LM0MZ )
   err999cmz_45 = geomAnd( geomAvoiding( geomAndNot( geomSize( mz_ring_45 0.01) geomSize( chipedge_45 -11.10)) geomHoles( mz_ring)) LM0MZ );11.06 + 0.04 TOLERANCE
   err999cmt_90 = geomAvoiding( geomAndNot( geomSize( mt_ring_90 0.01) geomSize( chipedge_90 -11.06)) geomHoles( mt_ring))
   err999cmt_45 = geomAvoiding( geomAndNot( geomSize( mt_ring_45 0.01) geomSize( chipedge_45 -11.10)) geomHoles( mt_ring));11.06 + 0.04 TOLERANCE

   drc( chipedge_45 am enc < 11.06-tolLeg         "GRLEG_999c: AM(ring) must be within CHIPEDGE == 11.06 um.(error <)")
   drc( chipedge_90 am enc < 11.06                "GRLEG_999c: AM(ring) must be within CHIPEDGE == 11.06 um.(error <)")
   drc( chipedge_45 e1 enc < 11.06-tolLeg         "GRLEG_999c: E1(ring) must be within CHIPEDGE == 11.06 um.(error <)")
   drc( chipedge_90 e1 enc < 11.06                "GRLEG_999c: E1(ring) must be within CHIPEDGE == 11.06 um.(error <)")
   drc( chipedge_45 ma enc < 11.06-tolLeg         "GRLEG_999c: MA(ring) must be within CHIPEDGE == 11.06 um.(error <)")
   drc( chipedge_90 ma enc < 11.06                "GRLEG_999c: MA(ring) must be within CHIPEDGE == 11.06 um.(error <)")
   drc( chipedge_45 ml enc < 11.06-tolLeg         "GRLEG_999c: ML(ring) must be within CHIPEDGE == 11.06 um.(error <)")
   drc( chipedge_90 ml enc < 11.06                "GRLEG_999c: ML(ring) must be within CHIPEDGE == 11.06 um.(error <)")
   drc( chipedge_45 mt enc < 11.06-tolLeg         "GRLEG_999c: MT(ring) must be within CHIPEDGE == 11.06 um.(error <)")
   drc( chipedge_90 mt enc < 11.06                "GRLEG_999c: MT(ring) must be within CHIPEDGE == 11.06 um.(error <)")
   drc( chipedge_45 mz enc < 11.06-tolLeg         "GRLEG_999c: MZ(ring) must be within CHIPEDGE == 11.06 um.(error <)")
   drc( chipedge_90 mz enc < 11.06                "GRLEG_999c: MZ(ring) must be within CHIPEDGE == 11.06 um.(error <)")
   errorLayer( geomOr( err999cam_90 err999cam_45) "GRLEG_999c: AM(ring) must be within CHIPEDGE == 11.06 um.(error >)")
   errorLayer( geomOr( err999ce1_90 err999ce1_45) "GRLEG_999c: E1(ring) must be within CHIPEDGE == 11.06 um.(error >)")
   errorLayer( geomOr( err999cma_90 err999cma_45) "GRLEG_999c: MA(ring) must be within CHIPEDGE == 11.06 um.(error >)")
   errorLayer( geomOr( err999cml_90 err999cml_45) "GRLEG_999c: ML(ring) must be within CHIPEDGE == 11.06 um.(error >)")
   errorLayer( geomOr( err999cmt_90 err999cmt_45) "GRLEG_999c: MT(ring) must be within CHIPEDGE == 11.06 um.(error >)")
   errorLayer( geomOr( err999cmz_90 err999cmz_45) "GRLEG_999c: MZ(ring) must be within CHIPEDGE == 11.06 um.(error >)")


 ;Flag layers not allowed in the chip guardring area.
   errorLayer( geomAnd( nw chipring )  "GRLEG_999e: NW not allowed in chip Chip guardring area!")
   errorLayer( geomAnd( op chipring )  "GRLEG_999e: OP not allowed in chip Chip guardring area!")
   errorLayer( geomAnd( pc chipring )  "GRLEG_999e: PC not allowed in chip Chip guardring area!")
   errorLayer( geomAnd( di chipring )  "GRLEG_999e: DI not allowed in chip Chip guardring area!")
   errorLayer( geomAnd( ns chipring )  "GRLEG_999e: NS not allowed in chip Chip guardring area!")
   errorLayer( geomAnd( pi chipring )  "GRLEG_999e: PI not allowed in chip Chip guardring area!")

 ;Following Layers must be in chip guard ring
   err999e_bp = geomAndNot( chipring geomOverlap( chipring bp_ring))
   errorLayer( err999e_bp      "GRLEG_999e: BP must be within chipring")

   err999e_cab = geomAndNot( chipring geomOverlap( chipring cab_ring))
   errorLayer( err999e_cab     "GRLEG_999e: CABAR must be within chipring")

   err999e_m1  = geomAndNot( chipring geomOverlap( chipring m1_ring))
   errorLayer( err999e_m1      "GRLEG_999e: M1 must be within chipring")
   err999e_v1  = geomAndNot( chipring geomOverlap( chipring v1b_ring))
   errorLayer( err999e_v1      "GRLEG_999e: V1BAR must be within chipring")

   err999e_rx  = geomAndNot( chipring geomOverlap( chipring rx_ring))
   errorLayer( err999e_rx      "GRLEG_999e: RX must be within chipring")

 ;Following Layers must be in chip guard ring if they exist.
   err999e_m2  = geomAnd( geomAndNot( chipring geomOverlap( chipring m2_ring)) m2_exists)
   errorLayer( err999e_m2      "GRLEG_999e: M2 must be within chipring")
   v2b_exists  = geomEnclose( bkgnd v2bar )
   err999e_v2  = geomAnd( geomAndNot( chipring geomOverlap( chipring v2b_ring)) v2b_exists)
   errorLayer( err999e_v2      "GRLEG_999e: V2BAR must be within chipring")

   err999e_m3  = geomAnd( geomAndNot( chipring geomOverlap( chipring m3_ring)) m3_exists)
   errorLayer( err999e_m3      "GRLEG_999e: M3 must be within chipring")
   v3b_exists  = geomEnclose( bkgnd v3bar )
   err999e_v3  = geomAnd( geomAndNot( chipring geomOverlap( chipring v3b_ring)) v3b_exists)
   errorLayer( err999e_v3      "GRLEG_999e: V3BAR must be within chipring")

   err999e_m4  = geomAnd( geomAndNot( chipring geomOverlap( chipring m4_ring)) m4_exists)
   errorLayer( err999e_m4      "GRLEG_999e: M4 must be within chipring")
   v4_exists   = geomEnclose( bkgnd v4bar )
   err999e_v4  = geomAnd( geomAndNot( chipring geomOverlap( chipring v4b_ring)) v4_exists)
   errorLayer( err999e_v4      "GRLEG_999e: V4BAR must be within chipring")

   err999e_m5  = geomAnd( geomAndNot( chipring geomOverlap( chipring m5_ring)) m5_exists)
   errorLayer( err999e_m5      "GRLEG_999e: M5 must be within chipring")
   v5b_exists  = geomEnclose( bkgnd v5bar )
   err999e_v5  = geomAnd( geomAndNot( chipring geomOverlap( chipring v5b_ring)) v5b_exists)
   errorLayer( err999e_v5      "GRLEG_999e: V5BAR must be within chipring")

   mt_exists  = geomEnclose( bkgnd mt )
   err999e_mt = geomAnd( geomAndNot( chipring geomOverlap( chipring mt_ring)) mt_exists)
   errorLayer( err999e_mt      "GRLEG_999e: MT must be within chipring")

   ft_exists      = geomEnclose( bkgnd ft )
   ftb_exists     = geomEnclose( bkgnd ftbar )
   ft_all_exists  = geomOr( ft_exists ftb_exists )
   ft_all_ring    = geomOr( ft_ring  ftb_ring )
   err999e_ft_ftb = geomAnd( geomAndNot( chipring geomOverlap( chipring ft_all_ring)) ft_all_exists)
   errorLayer( err999e_ft_ftb  "GRLEG_999e: FT/FTBAR must be within chipring")

   e1_exists   = geomEnclose( bkgnd e1 )
   err999e_e1  = geomAnd( geomAndNot( chipring geomOverlap( chipring e1_ring)) e1_exists)
   errorLayer( err999e_e1      "GRLEG_999e: E1 must be within chipring")
   e2_exists   = geomEnclose( bkgnd e2 )
   err999e_e2  = geomAnd( geomAndNot( chipring geomOverlap( chipring e2_ring)) e2_exists)
   errorLayer( err999e_e2      "GRLEG_999e: E2 must be within chipring")

   err999e_ma  = geomAnd( geomAndNot( chipring geomOverlap( chipring ma_ring)) ma_exists)
   errorLayer( err999e_ma      "GRLEG_999e: MA must be within chipring")
   err999e_ml  = geomAnd( geomAndNot( chipring geomOverlap( chipring ml_ring)) ml_exists)
   errorLayer( err999e_ml      "GRLEG_999e: ML must be within chipring")
   err999e_am  = geomAnd( geomAndNot( chipring geomOverlap( chipring am_ring)) am_exists)
   errorLayer( err999e_am      "GRLEG_999e: AM must be within chipring")
   err999e_mz  = geomAnd( geomAndNot( chipring geomOverlap( chipring mz_ring)) mz_exists)
   errorLayer( err999e_mz      "GRLEG_999e: MZ must be within chipring")


 if( avSwitch( "HIRESSUB") then
 ;Rule 999d
   err999d = geomAndNot( chipedge geomSize( chipedge -16.16 ) )
   errorLayer( geomAndNot( err999d nohr )     "GR999d: CHIPEDGE not over (CHIPEDGE expanded by -16.16um) not within NOHR found!")
 )


 ;Rule LEG_1000
   err1000_am = geomAnd( geomAndNot( geomOutside( am_ring iopad ) geomOr( geomOr( ma_ring ml_ring ) mz_ring ) ) LM0AM )
   err1000_ma = geomAnd( geomAndNot( geomOutside( ma_ring iopad ) geomOr( geomOr( am_ring ml_ring ) mz_ring ) ) LM0MA )
   err1000_ml = geomAnd( geomAndNot( geomOutside( ml_ring iopad ) geomOr( geomOr( am_ring ma_ring ) mz_ring ) ) LM0ML )
   err1000_mz = geomAnd( geomAndNot( geomOutside( mz_ring iopad ) geomOr( geomOr( am_ring ma_ring ) ml_ring ) ) LM0MZ )
   errorLayer( err1000_am  "GRLEG_1000: GUARDRING IS NOT CONNECTED TO A PAD! (AM)")
   errorLayer( err1000_ma  "GRLEG_1000: GUARDRING IS NOT CONNECTED TO A PAD! (MA)")
   errorLayer( err1000_ml  "GRLEG_1000: GUARDRING IS NOT CONNECTED TO A PAD! (ML)")
   errorLayer( err1000_mz  "GRLEG_1000: GUARDRING IS NOT CONNECTED TO A PAD! (MZ)")

 ;Rule LEG_1001
   errleg1001 = geomButtOrOver( bkgnd geomOr( mpw_edge guardedge guardrng ) )
   errorLayer( errleg1001  "GRLEG_1001: DATA_EXTENT touching (MPW_EDGE,GUARDEDGE,GUARDRNG) is prohibited")

);End GUARDEDGE_PRESENT=NO


if( avSwitch( "GUARDEDGE_PRESENT" ) then

;==================================================
;=====  ENHANCED CRACKSTOP METHODOLOGY RULES  =====
;==================================================

  ;===================================================
  ;===== GUARDEDGE, GUARDRNG, and MPW_EDGE RULES =====
  ;===================================================

  ;RULE EDGE1
    err_edge1 = geomAvoiding( chipedge guardedge )
    errorLayer( err_edge1                 "GREDGE1: CHIPEDGE must touch GUARDEDGE")

  if( avSwitch("CHECK_RECOMMENDED") then
    err_edge1R = geomAvoiding( chipedge guardedge )
    errorLayer( err_edge1R                "GREDGE1bR: (CHIPEDGE not touching GUARDEDGE) is prohibited.")
  )

  ;RULE EDGE2
    err_edge2 = geomAvoiding( geomButtOrOver( chipedge mpw_edge) guardedge )
    errorLayer( err_edge2                 "GREDGE2: (CHIPEDGE touching MPW_EDGE) must touch GUARDEDGE")

  ;RULE EDGE3
    err_edge3a     = geomAndNot( geomButtOrOver( bkgnd mpw_edge ) mpw_edge )
    errorLayer( err_edge3a                "GREDGE3a: DATA_EXTENT touching MPW_EDGE must be covered by MPW_EDGE.")

    err_edge3b_gu  = geomButtOrOver( bkgnd guardedge keep > 1 )
    err_edge3b_ch  = geomButtOrOver( bkgnd chipedge  keep > 1 )
    err_edge3b     = geomAndNot( geomOr( err_edge3b_gu err_edge3b_ch ) mpw_edge )
    errorLayer( err_edge3b      "GREDGE3b: DATA_EXTENT touching more than 1 {GUARDEDGE,CHIPEDGE} must be covered by MPW_EDGE.")

    bbox_chpe      = geomGetBBox( chipedge )
    datExt_out_mpw = geomAvoiding( bkgnd mpw_edge )
    err_edge3c     = geomAndNot( datExt_out_mpw bbox_chpe )
    errorLayer( err_edge3c                "GREDGE3c: (DATA_EXTENT not touching MPW_EDGE) must be covered by CHIPEDGE.")

  ;RULE EDGE4
    err_edge4 = geomGetNonRectangle( mpw_edge )
    errorLayer( err_edge4                 "GREDGE4: MPW_EDGE must be an othogonal rectangle.")

  ;RULE EDGE5
    err_edge5_0 = geomAvoiding(   mpw_edge chipedge          )
    err_edge5_1 = geomButtOrOver( mpw_edge chipedge keep < 2 )
    errorLayer( err_edge5_0               "GREDGE5: MPW_EDGE not touching CHIPEDGE found!")
    errorLayer( err_edge5_1               "GREDGE5: MPW_EDGE must touch more than one CHIPEDGE")

  ;RULE EDGE6
    err_edge6 = geomAndNot( geomButtOrOver( chipedge mpw_edge ) mpw_edge )
    errorLayer( err_edge6                 "GREDGE6: CHIPEDGE within MPW_EDGE >= 0.00 um.")

  ;RULE EDGE7
    err_edge7     = geomGetNonRectangle( chpe_tch_grde)
    errorLayer( err_edge7                 "GREDGE7: (CHIPEDGE touching GUARDEDGE) must be an othogonal rectangle.")

  ;RULE EDGE10
    crkstp_enclosure = geomAndNot( geomHoles( crackstop ) crackstop )
    crkstp_envelope  = geomOr( crackstop crkstp_enclosure )
    err_edge10a      = geomButtOrOver( geomAndNot( crackstop chpe_tch_grde ) chpe_tch_grde )
    err_edge10b      = geomButtOrOver( geomAndNot( geomSize( chpe_tch_grde -0.01 ) crkstp_envelope ) crackstop )
    err_edge10       = geomOr( err_edge10a err_edge10b )
    errorLayer( err_edge10                "GREDGE10: CRACKSTOP within (CHIPEDGE touching GUARDEDGE) == 0.00 um.")

  ;RULE EDGE11
    drc( crackstop width < 9.00           "GREDGE11: CRACKSTOP width >= 9.00 um.")

  ;RULE EDGE12
    err_edge12 = geomStraddle( crackstop guardedge )
    errorLayer( err_edge12                "GREDGE12: CRACKSTOP straddling GUARDEDGE is prohibited")

  ;RULE EDGE13
    err_edge13 = geomAvoiding( geomAnd( crackstop chipedge ) guardedge )
    errorLayer( err_edge13                "GREDGE13: (CRACKSTOP over CHIPEDGE) must touch GUARDEDGE")

  ;RULE EDGE20
    err_edge20 = geomAndNot( geomButtOrOver( guardedge crackstop) crkstp_enclosure)
    errorLayer( err_edge20      "GREDGE20: (GUARDEDGE touching CRACKSTOP) must be within (enclosed area of CRACKSTOP) >= 0.00 um.")

  ;RULE EDGE21
    err_edge21 = geomAvoiding( guardedge guardrng )
    errorLayer( err_edge21                "GREDGE21: GUARDEDGE must touch GUARDRNG")

  ;RULE EDGE22
    grde_rect     = geomGetRectangle(    guardedge )
    grde_not_rect = geomGetNonRectangle( guardedge )
    grde_oct_0    = geomSize( geomGetAngledEdge( grde_not_rect 44.5 <= keep <=  45.5  ) 0.01 )
    grde_oct_1    = geomSize( geomGetLength(     grde_not_rect         keep >= 176.77 ) 0.01 )
    grde_oct_2    = geomAnd( grde_oct_0  grde_oct_1 )
    grde_oct      = geomButtOrOver( grde_not_rect grde_oct_2 keep == 4 )
    err_edge22    = geomAndNot( grde_not_rect grde_oct )
    errorLayer( err_edge22                "GREDGE22: GUARDEDGE must either be an orthogonal rectangle or an octagon")

  ;RULE EDGE23
    grde_tch_crk = geomButtOrOver( guardedge crackstop )
    err_edge23   = geomAndNot( grde_tch_crk chipedge )
    drc( chipedge grde_tch_crk enc < 9.00 "GREDGE23: (GUARDEDGE touching CRACKSTOP ) must be within CHIPEDGE >= 9.00 um.")
    errorLayer( err_edge23                "GREDGE23: (GUARDEDGE touching CRACKSTOP ) not within CHIPEDGE found!")

  ;RULE EDGE24
    grde_out_crk = geomAvoiding( guardedge crackstop )
    err_edge24 = geomAndNot( grde_out_crk chipedge )
    errorLayer(  err_edge24               "GREDGE24: (GUARDEDGE not touching CRACKSTOP ) must be within CHIPEDGE >= 0.00 um.")

  ;RULE EDGE30
    err_edge30 = geomAndNot( guardrng guardedge)
    errorLayer( err_edge30                             "GREDGE30: GUARDRNG must be within GUARDEDGE >= 0.00 um.")

  ;RULE EDGE31
    guardrng_45   = geomGetAngledEdge( guardrng     44.5 <= keep <= 45.5 )
    guardrng_90   = geomAndNot( guardrng guardrng_45)
    grdeTchCrk_45 = geomGetAngledEdge( grde_tch_crk 44.5 <= keep <= 45.5 )
    grdeTchCrk_90 = geomAndNot( grde_tch_crk grdeTchCrk_45)
    drc( grdeTchCrk_90 guardrng_90 enc < 10.84          "GREDGE31: GUARDRNG within (GUARDEDGE touching CRACKSTOP) >= 10.84 um.")
    drc( grdeTchCrk_45 guardrng_45 enc < 10.84-tolGrid2 "GREDGE31: GUARDRNG within (GUARDEDGE touching CRACKSTOP) >= 10.84 um.")

  ;RULE EDGE32
    guardedge_45  = geomGetAngledEdge( guardedge    44.5 <= keep <= 45.5 )
    guardedge_90  = geomAndNot( guardedge guardedge_45)
    drc( guardedge_90 guardrng_90 enc < 5.00            "GREDGE32: GUARDRNG within GUARDEDGE >= 5.00 um.")
    drc( guardedge_45 guardrng_45 enc < 5.00-tolGrid2   "GREDGE32: GUARDRNG within GUARDEDGE >= 5.00 um.")

  ;RULE EDGE33
    grd45_AM = geomAnd( guardrng_45 am_exists)
    grd90_AM = geomAnd( guardrng_90 am_exists)
    drc( grd45_AM width < 4.22-tolGrid2 withCornerTouch "GREDGE33: GUARDRNG width (AM last metal) >= 4.22 um.(45 edge)")
    drc( grd90_AM width < 4.22          withCornerTouch "GREDGE33: GUARDRNG width (AM last metal) >= 4.22 um.(90 edge)")

  ;RULE EDGE34
    grd45_MA = geomAnd( guardrng_45 ma_exists)
    grd90_MA = geomAnd( guardrng_90 ma_exists)
    drc( grd45_MA width < 5.74-tolGrid2 withCornerTouch "GREDGE34: GUARDRNG width (MA last metal) >= 5.74 um.(45 edge)")
    drc( grd90_MA width < 5.74          withCornerTouch "GREDGE34: GUARDRNG width (MA last metal) >= 5.74 um.(90 edge)")

  ;RULE EDGE35
    grd45_ML = geomAnd( guardrng_45 ml_exists)
    grd90_ML = geomAnd( guardrng_90 ml_exists)
    drc( grd45_ML width < 4.22-tolGrid2 withCornerTouch "GREDGE35: GUARDRNG width (ML last metal) >= 4.22 um.(45 edge)")
    drc( grd90_ML width < 4.22          withCornerTouch "GREDGE35: GUARDRNG width (ML last metal) >= 4.22 um.(90 edge)")

  ;RULE EDGE36
    grd45_MZ = geomAnd( guardrng_45 mz_exists)
    grd90_MZ = geomAnd( guardrng_90 mz_exists)
    drc( grd45_MZ width < 4.22-tolGrid2 withCornerTouch "GREDGE36: GUARDRNG width (MZ last metal) >= 4.22 um.(45 edge)")
    drc( grd90_MZ width < 4.22          withCornerTouch "GREDGE36: GUARDRNG width (MZ last metal) >= 4.22 um.(90 edge)")

  ;RULE EDGE40
    err_edge40 = geomButtOrOver( geomOr( mpw_edge chpe_tch_grde ) noibmcrackstop )
    errorLayer( err_edge40      "GREDGE40: (MPW_EDGE, (CHIPEDGE touching GUARDEDGE)) touching NOIBMCRACKSTOP is prohibited")

  ;RULE EDGE42
    err_edge42 = geomXor( geomButtOrOver( seg_gring guardrng ) geomButtOrOver( guardrng seg_gring ) )
    errorLayer( err_edge42      "GREDGE42: If SEGMENTED_GUARDRING exist, it must be exactly coincident with GUARDRNG")


  ;========================================
  ;===== GUARDRNG and CRACKSTOP RULES =====
  ;========================================

  ;Rule 990
    drc( rx_ring_45 width < 1.08-tolGrid2           "GR990a: (RX over GUARDRNG) width >= 1.08 um.(45 edge)")
    drc( rx_ring_90 width < 1.08                    "GR990a: (RX over GUARDRNG) width >= 1.08 um.(90 edge)")
    drc( rx_ovr_crk width < 0.60                    "GR990a2: (RX over CRACKSTOP) width >= 0.60 um.")

    err_990a2b = geomGetLength( rx_ovr_crk keep < 1.02 )
    errorLayer( err_990a2b                          "GR990a2b: ((CRACKSTOP touching GUARDEDGE) over RX) edge length >= 1.02 um.")

    err_990a2c = geomGetLength( rx_ovr_crk keep > 20.00 )
    errorLayer( err_990a2c                          "GR990a2c: ((CRACKSTOP touching GUARDEDGE) over RX) edge length <= 20.00 um.")

    drc( bp_ring_45 width < 1.52-tolGrid2           "GR990b: (BP over GUARDRNG) width >= 1.52 um.(45 edge)")
    drc( bp_ring_90 width < 1.52                    "GR990b: (BP over GUARDRNG) width >= 1.52 um.(90 edge)")

    err990c = geomButtOrOver( bp_ovr_grdr bb )
    errorLayer( err990c                             "GR990c: (BP over GUARDRNG) touching BB found!")

    err990d_45_gt  = geomWidth( cab_ring_45 keep > 0.20+tolGrid2 ) 
    err990d_90_gt  = geomWidth( cab_ring_90 keep > 0.20         )
    err990d_crk_gt = geomWidth( cab_ovr_crk keep > 0.20         )
    drc( cab_ring_45 width < 0.20-tolGrid2 parallel "GR990d: (CABAR over GUARDRNG) width == 0.20 um.(45 edge,error <)")
    errorLayer( err990d_45_gt                       "GR990d: (CABAR over GUARDRNG) width == 0.20 um.(45 edge,error >)")
    drc( cab_ring_90 width < 0.20          parallel "GR990d: (CABAR over GUARDRNG) width == 0.20 um.(90 edge,error <)")
    errorLayer( err990d_90_gt                       "GR990d: (CABAR over GUARDRNG) width == 0.20 um.(90 edge,error >)")
    drc( cab_ovr_crk width < 0.20          parallel "GR990d: (CABAR over CRACKSTOP) width == 0.20 um.(error <)")
    errorLayer( err990d_crk_gt                      "GR990d: (CABAR over CRACKSTOP) width == 0.20 um.(error >)")

    err990eV1_45_gt  = geomWidth( v1b_ring_45 keep > 0.28+tolGrid2 ) 
    err990eV1_90_gt  = geomWidth( v1b_ring_90 keep > 0.28         )
    err990eV1_crk_gt = geomWidth( v1b_ovr_crk keep > 0.28         )
    drc( v1b_ring_45 width < 0.28-tolGrid2 parallel "GR990e: (V1BAR over GUARDRNG) width == 0.28 um.(45 edge,error <)")
    errorLayer( err990eV1_45_gt                     "GR990e: (V1BAR over GUARDRNG) width == 0.28 um.(45 edge,error >)")
    drc( v1b_ring_90 width < 0.28          parallel "GR990e: (V1BAR over GUARDRNG) width == 0.28 um.(90 edge,error <)")
    errorLayer( err990eV1_90_gt                     "GR990e: (V1BAR over GUARDRNG) width == 0.28 um.(90 edge,error >)")
    drc( v1b_ovr_crk width < 0.28          parallel "GR990e: (V1BAR over CRACKSTOP) width == 0.28 um.(error <)")
    errorLayer( err990eV1_crk_gt                    "GR990e: (V1BAR over CRACKSTOP) width == 0.28 um.(error >)")

    err990eV2_45_gt  = geomWidth( v2b_ring_45 keep > 0.28+tolGrid2 ) 
    err990eV2_90_gt  = geomWidth( v2b_ring_90 keep > 0.28         )
    err990eV2_crk_gt = geomWidth( v2b_ovr_crk keep > 0.28         )
    drc( v2b_ring_45 width < 0.28-tolGrid2 parallel "GR990e: (V2BAR over GUARDRNG) width == 0.28 um.(45 edge,error <)")
    errorLayer( err990eV2_45_gt                     "GR990e: (V2BAR over GUARDRNG) width == 0.28 um.(45 edge,error >)")
    drc( v2b_ring_90 width < 0.28          parallel "GR990e: (V2BAR over GUARDRNG) width == 0.28 um.(90 edge,error <)")
    errorLayer( err990eV2_90_gt                     "GR990e: (V2BAR over GUARDRNG) width == 0.28 um.(90 edge,error >)")
    drc( v2b_ovr_crk width < 0.28          parallel "GR990e: (V2BAR over CRACKSTOP) width == 0.28 um.(error <)")
    errorLayer( err990eV2_crk_gt                    "GR990e: (V2BAR over CRACKSTOP) width == 0.28 um.(error >)")

    err990eV3_45_gt  = geomWidth( v3b_ring_45 keep > 0.28+tolGrid2 ) 
    err990eV3_90_gt  = geomWidth( v3b_ring_90 keep > 0.28         )
    err990eV3_crk_gt = geomWidth( v3b_ovr_crk keep > 0.28         )
    drc( v3b_ring_45 width < 0.28-tolGrid2 parallel "GR990e: (V3BAR over GUARDRNG) width == 0.28 um.(45 edge,error <)")
    errorLayer( err990eV3_45_gt                     "GR990e: (V3BAR over GUARDRNG) width == 0.28 um.(45 edge,error >)")
    drc( v3b_ring_90 width < 0.28          parallel "GR990e: (V3BAR over GUARDRNG) width == 0.28 um.(90 edge,error <)")
    errorLayer( err990eV3_90_gt                     "GR990e: (V3BAR over GUARDRNG) width == 0.28 um.(90 edge,error >)")
    drc( v3b_ovr_crk width < 0.28          parallel "GR990e: (V3BAR over CRACKSTOP) width == 0.28 um.(error <)")
    errorLayer( err990eV3_crk_gt                    "GR990e: (V3BAR over CRACKSTOP) width == 0.28 um.(error >)")

    err990eV4_45_gt  = geomWidth( v4b_ring_45 keep > 0.28+tolGrid2 ) 
    err990eV4_90_gt  = geomWidth( v4b_ring_90 keep > 0.28         )
    err990eV4_crk_gt = geomWidth( v4b_ovr_crk keep > 0.28         )
    drc( v4b_ring_45 width < 0.28-tolGrid2 parallel "GR990e: (V4BAR over GUARDRNG) width == 0.28 um.(45 edge,error <)")
    errorLayer( err990eV4_45_gt                     "GR990e: (V4BAR over GUARDRNG) width == 0.28 um.(45 edge,error >)")
    drc( v4b_ring_90 width < 0.28          parallel "GR990e: (V4BAR over GUARDRNG) width == 0.28 um.(90 edge,error <)")
    errorLayer( err990eV4_90_gt                     "GR990e: (V4BAR over GUARDRNG) width == 0.28 um.(90 edge,error >)")
    drc( v4b_ovr_crk width < 0.28          parallel "GR990e: (V4BAR over CRACKSTOP) width == 0.28 um.(error <)")
    errorLayer( err990eV4_crk_gt                    "GR990e: (V4BAR over CRACKSTOP) width == 0.28 um.(error >)")

    err990eV5_45_gt  = geomWidth( v5b_ring_45 keep > 0.28+tolGrid2 ) 
    err990eV5_90_gt  = geomWidth( v5b_ring_90 keep > 0.28         )
    err990eV5_crk_gt = geomWidth( v5b_ovr_crk keep > 0.28         )
    drc( v5b_ring_45 width < 0.28-tolGrid2 parallel "GR990e: (V5BAR over GUARDRNG) width == 0.28 um.(45 edge,error <)")
    errorLayer( err990eV5_45_gt                     "GR990e: (V5BAR over GUARDRNG) width == 0.28 um.(45 edge,error >)")
    drc( v5b_ring_90 width < 0.28          parallel "GR990e: (V5BAR over GUARDRNG) width == 0.28 um.(90 edge,error <)")
    errorLayer( err990eV5_90_gt                     "GR990e: (V5BAR over GUARDRNG) width == 0.28 um.(90 edge,error >)")
    drc( v5b_ovr_crk width < 0.28          parallel "GR990e: (V5BAR over CRACKSTOP) width == 0.28 um.(error <)")
    errorLayer( err990eV5_crk_gt                    "GR990e: (V5BAR over CRACKSTOP) width == 0.28 um.(error >)")

    drc( m1_ring_45 width < 1.08-tolGrid2           "GR990f: (M1 over GUARDRNG) width >= 1.08 um.(45 edge)")
    drc( m1_ring_90 width < 1.08                    "GR990f: (M1 over GUARDRNG) width >= 1.08 um.(90 edge)")
    drc( m2_ring_45 width < 1.08-tolGrid2           "GR990f: (M2 over GUARDRNG) width >= 1.08 um.(45 edge)")
    drc( m2_ring_90 width < 1.08                    "GR990f: (M2 over GUARDRNG) width >= 1.08 um.(90 edge)")
    drc( m3_ring_45 width < 1.08-tolGrid2           "GR990f: (M3 over GUARDRNG) width >= 1.08 um.(45 edge)")
    drc( m3_ring_90 width < 1.08                    "GR990f: (M3 over GUARDRNG) width >= 1.08 um.(90 edge)")
    drc( m4_ring_45 width < 1.08-tolGrid2           "GR990f: (M4 over GUARDRNG) width >= 1.08 um.(45 edge)")
    drc( m4_ring_90 width < 1.08                    "GR990f: (M4 over GUARDRNG) width >= 1.08 um.(90 edge)")
    drc( m5_ring_45 width < 1.08-tolGrid2           "GR990f: (M5 over GUARDRNG) width >= 1.08 um.(45 edge)")
    drc( m5_ring_90 width < 1.08                    "GR990f: (M5 over GUARDRNG) width >= 1.08 um.(90 edge)")

    drc( m1_ovr_crk width < 0.48                    "GR990f2: (M1 over CRACKSTOP) width >= 0.48 um.")
    drc( m2_ovr_crk width < 0.48                    "GR990f2: (M2 over CRACKSTOP) width >= 0.48 um.")
    drc( m3_ovr_crk width < 0.48                    "GR990f2: (M3 over CRACKSTOP) width >= 0.48 um.")
    drc( m4_ovr_crk width < 0.48                    "GR990f2: (M4 over CRACKSTOP) width >= 0.48 um.")
    drc( m5_ovr_crk width < 0.48                    "GR990f2: (M5 over CRACKSTOP) width >= 0.48 um.")

    err990f2b_m1 = geomGetLength( m1_ovr_crk keep < 1.02)
    err990f2b_m2 = geomGetLength( m2_ovr_crk keep < 1.02)
    err990f2b_m3 = geomGetLength( m3_ovr_crk keep < 1.02)
    err990f2b_m4 = geomGetLength( m4_ovr_crk keep < 1.02)
    err990f2b_m5 = geomGetLength( m5_ovr_crk keep < 1.02)
    errorLayer( err990f2b_m1                        "GR990f2b: ((CRACKSTOP touching GUARDEDGE) over M1) edge length >= 1.02 um.")
    errorLayer( err990f2b_m2                        "GR990f2b: ((CRACKSTOP touching GUARDEDGE) over M2) edge length >= 1.02 um.")
    errorLayer( err990f2b_m3                        "GR990f2b: ((CRACKSTOP touching GUARDEDGE) over M3) edge length >= 1.02 um.")
    errorLayer( err990f2b_m4                        "GR990f2b: ((CRACKSTOP touching GUARDEDGE) over M4) edge length >= 1.02 um.")
    errorLayer( err990f2b_m5                        "GR990f2b: ((CRACKSTOP touching GUARDEDGE) over M5) edge length >= 1.02 um.")

    err990f2c_m1 = geomGetLength( m1_ovr_crk keep > 20.00)
    err990f2c_m2 = geomGetLength( m2_ovr_crk keep > 20.00)
    err990f2c_m3 = geomGetLength( m3_ovr_crk keep > 20.00)
    err990f2c_m4 = geomGetLength( m4_ovr_crk keep > 20.00)
    err990f2c_m5 = geomGetLength( m5_ovr_crk keep > 20.00)
    errorLayer( err990f2c_m1                        "GR990f2c: ((CRACKSTOP touching GUARDEDGE) over M1) edge length <= 20.00 um.")
    errorLayer( err990f2c_m2                        "GR990f2c: ((CRACKSTOP touching GUARDEDGE) over M2) edge length <= 20.00 um.")
    errorLayer( err990f2c_m3                        "GR990f2c: ((CRACKSTOP touching GUARDEDGE) over M3) edge length <= 20.00 um.")
    errorLayer( err990f2c_m4                        "GR990f2c: ((CRACKSTOP touching GUARDEDGE) over M4) edge length <= 20.00 um.")
    errorLayer( err990f2c_m5                        "GR990f2c: ((CRACKSTOP touching GUARDEDGE) over M5) edge length <= 20.00 um.")

    drc( mt_ring_45 width < 3.24-tolGrid2           "GR990g: (MT over GUARDRNG) width >= 3.24 um.(45 edge)")
    drc( mt_ring_90 width < 3.24                    "GR990g: (MT over GUARDRNG) width >= 3.24 um.(90 edge)")
    drc( mt_ovr_crk width < 3.78                    "GR990g2: (MT over CRACKSTOP) width >= 3.78 um.")

    drc( e2_ring_45 width < 2.00-tolGrid2           "GR990h: (E2 over GUARDRNG) width >= 2.00 um.(45 edge)")
    drc( e2_ring_90 width < 2.00                    "GR990h: (E2 over GUARDRNG) width >= 2.00 um.(90 edge)")
    drc( e2_ovr_crk width < 2.00                    "GR990h: (E2 over CRACKSTOP) width >= 2.00 um.")

    drc( e1_ring_45 width < 3.24-tolGrid2           "GR990i: (E1 over GUARDRNG) width >= 3.24 um.(45 edge)")
    drc( e1_ring_90 width < 3.24                    "GR990i: (E1 over GUARDRNG) width >= 3.24 um.(90 edge)")
    drc( e1_ovr_crk width < 3.78                    "GR990i2: (E1 over CRACKSTOP) width >= 3.78 um.")

    err990j_45_gt  = geomWidth( ftb_ring_45  keep > 1.24+tolGrid2 ) 
    err990j_90_gt  = geomWidth( ftb_ring_90  keep > 1.24         )
    err990j_crk_gt = geomWidth( ftb_ovr_crk keep > 1.24         )
    drc( ftb_ring_45 width < 1.24-tolGrid2 parallel "GR990j: (FTBAR over GUARDRNG) width == 1.24 um.(45 edge,error <)")
    errorLayer( err990j_45_gt                       "GR990j: (FTBAR over GUARDRNG) width == 1.24 um.(45 edge,error >)")
    drc( ftb_ring_90 width < 1.24          parallel "GR990j: (FTBAR over GUARDRNG) width == 1.24 um.(90 edge,error <)")
    errorLayer( err990j_90_gt                       "GR990j: (FTBAR over GUARDRNG) width == 1.24 um.(90 edge,error >)")
    drc( ftb_ovr_crk width < 1.24          parallel "GR990j: (FTBAR over CRACKSTOP) width == 1.24 um.(error <)")
    errorLayer( err990j_crk_gt                      "GR990j: (FTBAR over CRACKSTOP) width == 1.24 um.(error >)")

    drc( am_ring_45 width < 2.00-tolGrid2           "GR990k: (AM over GUARDRNG) width >= 2.00 um.(45 edge)")
    drc( am_ring_90 width < 2.00                    "GR990k: (AM over GUARDRNG) width >= 2.00 um.(90 edge)")
    drc( am_ovr_crk width < 2.00                    "GR990k: (AM over CRACKSTOP) width >= 2.00 um.")

    drc( ml_ring_45 width < 2.40-tolGrid2           "GR990k: (ML over GUARDRNG) width >= 2.40 um.(45 edge)")
    drc( ml_ring_90 width < 2.40                    "GR990k: (ML over GUARDRNG) width >= 2.40 um.(90 edge)")
    drc( ml_ovr_crk width < 2.40                    "GR990k: (ML over CRACKSTOP) width >= 2.40 um.")

    drc( ma_ring_45 width < 2.00-tolGrid2           "GR990k: (MA over GUARDRNG) width >= 2.00 um.(45 edge)")
    drc( ma_ring_90 width < 2.00                    "GR990k: (MA over GUARDRNG) width >= 2.00 um.(90 edge)")
    drc( ma_ovr_crk width < 2.00                    "GR990k: (MA over CRACKSTOP) width >= 2.00 um.")

    drc( mz_ring_45 width < 2.00-tolGrid2           "GR990k: (MZ over GUARDRNG) width >= 2.00 um.(45 edge)")
    drc( mz_ring_90 width < 2.00                    "GR990k: (MZ over GUARDRNG) width >= 2.00 um.(90 edge)")
    drc( mz_ovr_crk width < 2.00                    "GR990k: (MZ over CRACKSTOP) width >= 2.00 um.")


  ;Rule 991
    err991 = geomAndNot( rx_ovr_grdr bp_ovr_grdr )
    drc( bp_ring_45 rx_ring_45 enc < 0.22-tolGrid2  "GR991: (RX over GUARDRNG) must be within BP >= 0.22 um.(45 edge)")
    drc( bp_ring_90 rx_ring_90 enc < 0.22           "GR991: (RX over GUARDRNG) must be within BP >= 0.22 um.(90 edge)")
    errorLayer( err991                              "GR991: (RX over GUARDRNG) not within BP found!")


  ;Rule 992
    err992 = geomAndNot( cab_ovr_grdr  rx_ovr_grdr )
    drc( rx_ring_45 cab_ring_45 enc < 0.40-tolGrid2 "GR992: (CABAR over GUARDRNG) must be within RX >= 0.44 um.(45 edge)")
    drc( rx_ring_90 cab_ring_90 enc < 0.40          "GR992: (CABAR over GUARDRNG) must be within RX >= 0.44 um.(90 edge)")
    errorLayer( err992                              "GR992: (CABAR over GUARDRNG) not within RX found!")

    err992b = geomAndNot( cab_ovr_crk  rx_ovr_crk )
    drc( rx_ovr_crk cab_ovr_crk enc < 0.20          "GR992b: (CABAR over CRACKSTOP) must be within RX >= 0.20 um.")
    errorLayer( err992b                             "GR992b: (CABAR over CRACKSTOP) not within RX found!")


  ;Rule 993
    err993 = geomAndNot( cab_ovr_grdr m1_ovr_grdr )
    drc( m1_ring_45 cab_ring_45 enc < 0.44-tolGrid2 "GR993: (CABAR over GUARDRNG) must be within M1 >= 0.44 um.(45 edge)")
    drc( m1_ring_90 cab_ring_90 enc < 0.44          "GR993: (CABAR over GUARDRNG) must be within M1 >= 0.44 um.(90 edge)")
    errorLayer( err993                              "GR993: (CABAR over GUARDRNG) not within M1 found!")

    err993b = geomAndNot( cab_ovr_crk m1_ovr_crk )
    drc( m1_ovr_crk cab_ovr_crk enc < 0.14          "GR993b: (CABAR over CRACKSTOP) must be within M1 >= 0.14 um.")
    errorLayer( err993b                             "GR993b: (CABAR over CRACKSTOP) not within M1 found!")


  ;Rule 994
    err994a_crk  = geomAndNot( v1b_ovr_crk  m1_ovr_crk  )
    err994a_grdr = geomAndNot( v1b_ovr_grdr m1_ovr_grdr )
    drc( m1_ring_45 v1b_ring_45 enc < 0.40-tolGrid2 "GR994a: (V1BAR over GUARDRNG) must be within M1 >= 0.40 um.(45 edge)")
    drc( m1_ring_90 v1b_ring_90 enc < 0.40          "GR994a: (V1BAR over GUARDRNG) must be within M1 >= 0.40 um.(90 edge)")
    drc( m1_ovr_crk v1b_ovr_crk enc < 0.10          "GR994a: (V1BAR over CRACKSTOP) must be within M1 >= 0.10 um.")
    errorLayer( err994a_grdr                        "GR994a: (V1BAR over GUARDRNG) not within M1 found!")
    errorLayer( err994a_crk                         "GR994a: (V1BAR over CRACKSTOP) not within M1 found!")

    err994b_crk  = geomAndNot( v2b_ovr_crk  m2_ovr_crk  )
    err994b_grdr = geomAndNot( v2b_ovr_grdr m2_ovr_grdr )
    drc( m2_ring_45 v2b_ring_45 enc < 0.40-tolGrid2 "GR994b: (V2BAR over GUARDRNG) must be within M2 >= 0.40 um.(45 edge)")
    drc( m2_ring_90 v2b_ring_90 enc < 0.40          "GR994b: (V2BAR over GUARDRNG) must be within M2 >= 0.40 um.(90 edge)")
    drc( m2_ovr_crk v2b_ovr_crk enc < 0.10          "GR994b: (V2BAR over CRACKSTOP) must be within M2 >= 0.10 um.")
    errorLayer( err994b_grdr                        "GR994b: (V2BAR over GUARDRNG) not within M2 found!")
    errorLayer( err994b_crk                         "GR994b: (V2BAR over CRACKSTOP) not within M2 found!")

    err994c_crk  = geomAndNot( v3b_ovr_crk  m3_ovr_crk  )
    err994c_grdr = geomAndNot( v3b_ovr_grdr m3_ovr_grdr )
    drc( m3_ring_45 v3b_ring_45 enc < 0.40-tolGrid2 "GR994c: (V3BAR over GUARDRNG) must be within M3 >= 0.40 um.(45 edge)")
    drc( m3_ring_90 v3b_ring_90 enc < 0.40          "GR994c: (V3BAR over GUARDRNG) must be within M3 >= 0.40 um.(90 edge)")
    drc( m3_ovr_crk v3b_ovr_crk enc < 0.10          "GR994c: (V3BAR over CRACKSTOP) must be within M3 >= 0.10 um.")
    errorLayer( err994c_grdr                        "GR994c: (V3BAR over GUARDRNG) not within M3 found!")
    errorLayer( err994c_crk                         "GR994c: (V3BAR over CRACKSTOP) not within M3 found!")

    err994d_crk  = geomAndNot( v4b_ovr_crk  m4_ovr_crk  )
    err994d_grdr = geomAndNot( v4b_ovr_grdr m4_ovr_grdr )
    drc( m4_ring_45 v4b_ring_45 enc < 0.40-tolGrid2 "GR994d: (V4BAR over GUARDRNG) must be within M4 >= 0.40 um.(45 edge)")
    drc( m4_ring_90 v4b_ring_90 enc < 0.40          "GR994d: (V4BAR over GUARDRNG) must be within M4 >= 0.40 um.(90 edge)")
    drc( m4_ovr_crk v4b_ovr_crk enc < 0.10          "GR994d: (V4BAR over CRACKSTOP) must be within M4 >= 0.10 um.")
    errorLayer( err994d_grdr                        "GR994d: (V4BAR over GUARDRNG) not within M4 found!")
    errorLayer( err994d_crk                         "GR994d: (V4BAR over CRACKSTOP) not within M4 found!")

    err994d1_crk  = geomAndNot( v5b_ovr_crk  m5_ovr_crk  )
    err994d1_grdr = geomAndNot( v5b_ovr_grdr m5_ovr_grdr )
    drc( m5_ring_45 v5b_ring_45 enc < 0.40-tolGrid2 "GR994d1: (V5BAR over GUARDRNG) must be within M5 >= 0.40 um.(45 edge)")
    drc( m5_ring_90 v5b_ring_90 enc < 0.40          "GR994d1: (V5BAR over GUARDRNG) must be within M5 >= 0.40 um.(90 edge)")
    drc( m5_ovr_crk v5b_ovr_crk enc < 0.10          "GR994d1: (V5BAR over CRACKSTOP) must be within M5 >= 0.10 um.")
    errorLayer( err994d1_grdr                       "GR994d1: (V5BAR over GUARDRNG) not within M5 found!")
    errorLayer( err994d1_crk                        "GR994d1: (V5BAR over CRACKSTOP) not within M5 found!")

    err994e_crk  = geomAndNot( ftb_ovr_crk  mt_ovr_crk  )
    err994e_grdr = geomAndNot( ftb_ovr_grdr mt_ovr_grdr )
    drc( mt_ring_45 ftb_ring_45 enc < 1.00-tolGrid2 "GR994e: (FTBAR over GUARDRNG) must be within MT >= 1.00 um.(45 edge)")
    drc( mt_ring_90 ftb_ring_90 enc < 1.00          "GR994e: (FTBAR over GUARDRNG) must be within MT >= 1.00 um.(90 edge)")
    drc( mt_ovr_crk ftb_ovr_crk enc < 1.00          "GR994e: (FTBAR over CRACKSTOP) must be within MT >= 1.00 um.")
    errorLayer( err994e_grdr                        "GR994e: (FTBAR over GUARDRNG) not within M1 found!")
    errorLayer( err994e_crk                         "GR994e: (FTBAR over CRACKSTOP) not within MT found!")

    err994f_crk_e1  = geomAnd( geomAndNot( ftb_ovr_crk  e1_ovr_crk  ) LM0MA )
    err994f_grdr_e1 = geomAnd( geomAndNot( ftb_ovr_grdr e1_ovr_grdr ) LM0MA )
    drc( e1_ring_45 ftb_ring_45 enc < 1.00-tolGrid2 "GR994f: (FTBAR over GUARDRNG) must be within E1 >= 1.00 um.(45 edge)")
    drc( e1_ring_90 ftb_ring_90 enc < 1.00          "GR994f: (FTBAR over GUARDRNG) must be within E1 >= 1.00 um.(90 edge)")
    drc( e1_ovr_crk ftb_ovr_crk enc < 1.00          "GR994f: (FTBAR over CRACKSTOP) must be within E1 >= 1.00 um.")
    errorLayer( err994f_grdr_e1                     "GR994f: (FTBAR over GUARDRNG) not within E1 found!")
    errorLayer( err994f_crk_e1                      "GR994f: (FTBAR over CRACKSTOP) not within E1 found!")

    err994f_crk_am  = geomAnd( geomAndNot( ftb_ovr_crk  am_ovr_crk  ) LM0AM )
    err994f_grdr_am = geomAnd( geomAndNot( ftb_ovr_grdr am_ovr_grdr ) LM0AM )
    drc( am_ring_45 ftb_ring_45 enc < 1.00-tolGrid2 "GR994f: (FTBAR over GUARDRNG) must be within AM >= 1.00 um.(45 edge)")
    drc( am_ring_90 ftb_ring_90 enc < 1.00          "GR994f: (FTBAR over GUARDRNG) must be within AM >= 1.00 um.(90 edge)")
    drc( am_ovr_crk ftb_ovr_crk enc < 1.00          "GR994f: (FTBAR over CRACKSTOP) must be within AM >= 1.00 um.")
    errorLayer( err994f_grdr_am                     "GR994f: (FTBAR over GUARDRNG) not within AM found!")
    errorLayer( err994f_crk_am                      "GR994f: (FTBAR over CRACKSTOP) not within AM found!")

    err994f_crk_ml  = geomAnd( geomAndNot( ftb_ovr_crk  ml_ovr_crk  ) LM0ML )
    err994f_grdr_ml = geomAnd( geomAndNot( ftb_ovr_grdr ml_ovr_grdr ) LM0ML )
    drc( ml_ring_45 ftb_ring_45 enc < 0.60-tolGrid2 "GR994f: (FTBAR over GUARDRNG) must be within ML >= 0.60 um.(45 edge)")
    drc( ml_ring_90 ftb_ring_90 enc < 0.60          "GR994f: (FTBAR over GUARDRNG) must be within ML >= 0.60 um.(90 edge)")
    drc( ml_ovr_crk ftb_ovr_crk enc < 0.60          "GR994f: (FTBAR over CRACKSTOP) must be within ML >= 0.60 um.")
    errorLayer( err994f_grdr_ml                     "GR994f: (FTBAR over GUARDRNG) not within ML found!")
    errorLayer( err994f_crk_ml                      "GR994f: (FTBAR over CRACKSTOP) not within ML found!")

    err994f_crk_mz  = geomAnd( geomAndNot( ftb_ovr_crk  mz_ovr_crk  ) LM0MZ )
    err994f_grdr_mz = geomAnd( geomAndNot( ftb_ovr_grdr mz_ovr_grdr ) LM0MZ )
    drc( mz_ring_45 ftb_ring_45 enc < 1.00-tolGrid2 "GR994f: (FTBAR over GUARDRNG) must be within MZ >= 1.00 um.(45 edge)")
    drc( mz_ring_90 ftb_ring_90 enc < 1.00          "GR994f: (FTBAR over GUARDRNG) must be within MZ >= 1.00 um.(90 edge)")
    drc( mz_ovr_crk ftb_ovr_crk enc < 1.00          "GR994f: (FTBAR over CRACKSTOP) must be within MZ >= 1.00 um.")
    errorLayer( err994f_grdr_mz                     "GR994f: (FTBAR over GUARDRNG) not within MZ found!")
    errorLayer( err994f_crk_mz                      "GR994f: (FTBAR over CRACKSTOP) not within MZ found!")


  ;Rule 995
    err995a_crk  = geomAnd( geomAndNot( v1b_ovr_crk  m2_ovr_crk  ) LM2_5 )
    err995a_grdr = geomAnd( geomAndNot( v1b_ovr_grdr m2_ovr_grdr ) LM2_5 )
    drc( m2_ring_45 v1b_ring_45 enc < 0.40-tolGrid2 "GR995a: (V1BAR over GUARDRNG) must be within M2 >= 0.40 um.(45 edge)")
    drc( m2_ring_90 v1b_ring_90 enc < 0.40          "GR995a: (V1BAR over GUARDRNG) must be within M2 >= 0.40 um.(90 edge)")
    drc( m2_ovr_crk v1b_ovr_crk enc < 0.10          "GR995a: (V1BAR over CRACKSTOP) must be within M2 >= 0.10 um.")
    errorLayer( err995a_grdr                        "GR995a: (V1BAR over GUARDRNG) not within M2 found!")
    errorLayer( err995a_crk                         "GR995a: (V1BAR over CRACKSTOP) not within M2 found!")

    err995b_crk  = geomAnd( geomAndNot( v1b_ovr_crk  mt_ovr_crk  ) LM1 )
    err995b_grdr = geomAnd( geomAndNot( v1b_ovr_grdr mt_ovr_grdr ) LM1 )
    drc( mt_ring_45 v1b_ring_45 enc < 0.40-tolGrid2 "GR995b: (V1BAR over GUARDRNG) must be within MT >= 0.40 um.(45 edge)")
    drc( mt_ring_90 v1b_ring_90 enc < 0.40          "GR995b: (V1BAR over GUARDRNG) must be within MT >= 0.40 um.(90 edge)")
    drc( mt_ovr_crk v1b_ovr_crk enc < 0.14          "GR995b: (V1BAR over CRACKSTOP) must be within MT >= 0.14 um.")
    errorLayer( err995b_grdr                        "GR995b: (V1BAR over GUARDRNG) not within MT found!")
    errorLayer( err995b_crk                         "GR995b: (V1BAR over CRACKSTOP) not within MT found!")


  ;Rule 996
    err996a_crk  = geomAnd( geomAndNot( v2b_ovr_crk  m3_ovr_crk  ) LM3_5 )
    err996a_grdr = geomAnd( geomAndNot( v2b_ovr_grdr m3_ovr_grdr ) LM3_5 )
    drc( m3_ring_45 v2b_ring_45 enc < 0.40-tolGrid2 "GR996a: (V2BAR over GUARDRNG) must be within M3 >= 0.40 um.(45 edge)")
    drc( m3_ring_90 v2b_ring_90 enc < 0.40          "GR996a: (V2BAR over GUARDRNG) must be within M3 >= 0.40 um.(90 edge)")
    drc( m3_ovr_crk v2b_ovr_crk enc < 0.10          "GR996a: (V2BAR over CRACKSTOP) must be within M3 >= 0.10 um.")
    errorLayer( err996a_grdr                        "GR996a: (V2BAR over GUARDRNG) not within M3 found!")
    errorLayer( err996a_crk                         "GR996a: (V2BAR over CRACKSTOP) not within M3 found!")

    err996b_crk  = geomAnd( geomAndNot( v2b_ovr_crk  mt_ovr_crk  ) LM2 )
    err996b_grdr = geomAnd( geomAndNot( v2b_ovr_grdr mt_ovr_grdr ) LM2 )
    drc( mt_ring_45 v2b_ring_45 enc < 0.40-tolGrid2 "GR996b: (V2BAR over GUARDRNG) must be within MT >= 0.40 um.(45 edge)")
    drc( mt_ring_90 v2b_ring_90 enc < 0.40          "GR996b: (V2BAR over GUARDRNG) must be within MT >= 0.40 um.(90 edge)")
    drc( mt_ovr_crk v2b_ovr_crk enc < 0.14          "GR996b: (V2BAR over CRACKSTOP) must be within MT >= 0.14 um.")
    errorLayer( err996b_grdr                        "GR996b: (V2BAR over GUARDRNG) not within MT found!")
    errorLayer( err996b_crk                         "GR996b: (V2BAR over CRACKSTOP) not within MT found!")

    err996c_crk  = geomAnd( geomAndNot( v3b_ovr_crk  m4_ovr_crk  ) LM4_5 )
    err996c_grdr = geomAnd( geomAndNot( v3b_ovr_grdr m4_ovr_grdr ) LM4_5 )
    drc( m4_ring_45 v3b_ring_45 enc < 0.40-tolGrid2 "GR996c: (V3BAR over GUARDRNG) must be within M4 >= 0.40 um.(45 edge)")
    drc( m4_ring_90 v3b_ring_90 enc < 0.40          "GR996c: (V3BAR over GUARDRNG) must be within M4 >= 0.40 um.(90 edge)")
    drc( m4_ovr_crk v3b_ovr_crk enc < 0.10          "GR996c: (V3BAR over CRACKSTOP) must be within M4 >= 0.10 um.")
    errorLayer( err996c_grdr                        "GR996c: (V3BAR over GUARDRNG) not within M4 found!")
    errorLayer( err996c_crk                         "GR996c: (V3BAR over CRACKSTOP) not within M4 found!")

    err996d_crk  = geomAnd( geomAndNot( v3b_ovr_crk  mt_ovr_crk  ) LM3 )
    err996d_grdr = geomAnd( geomAndNot( v3b_ovr_grdr mt_ovr_grdr ) LM3 )
    drc( mt_ring_45 v3b_ring_45 enc < 0.40-tolGrid2 "GR996d: (V3BAR over GUARDRNG) must be within MT >= 0.40 um.(45 edge)")
    drc( mt_ring_90 v3b_ring_90 enc < 0.40          "GR996d: (V3BAR over GUARDRNG) must be within MT >= 0.40 um.(90 edge)")
    drc( mt_ovr_crk v3b_ovr_crk enc < 0.14          "GR996d: (V3BAR over CRACKSTOP) must be within MT >= 0.14 um.")
    errorLayer( err996d_grdr                        "GR996d: (V3BAR over GUARDRNG) not within MT found!")
    errorLayer( err996d_crk                         "GR996d: (V3BAR over CRACKSTOP) not within MT found!")

    err996e_crk  = geomAnd( geomAndNot( v4b_ovr_crk  m5_ovr_crk  ) LM5 )
    err996e_grdr = geomAnd( geomAndNot( v4b_ovr_grdr m5_ovr_grdr ) LM5 )
    drc( m5_ring_45 v4b_ring_45 enc < 0.40-tolGrid2 "GR996e: (V4BAR over GUARDRNG) must be within M5 >= 0.40 um.(45 edge)")
    drc( m5_ring_90 v4b_ring_90 enc < 0.40          "GR996e: (V4BAR over GUARDRNG) must be within M5 >= 0.40 um.(90 edge)")
    drc( m5_ovr_crk v4b_ovr_crk enc < 0.10          "GR996e: (V4BAR over CRACKSTOP) must be within M5 >= 0.10 um.")
    errorLayer( err996e_grdr                        "GR996e: (V4BAR over GUARDRNG) not within M5 found!")
    errorLayer( err996e_crk                         "GR996e: (V4BAR over CRACKSTOP) not within M5 found!")

    err996f_crk  = geomAnd( geomAndNot( v4b_ovr_crk  mt_ovr_crk  ) LM4 )
    err996f_grdr = geomAnd( geomAndNot( v4b_ovr_grdr mt_ovr_grdr ) LM4 )
    drc( mt_ring_45 v4b_ring_45 enc < 0.40-tolGrid2 "GR996e1: (V4BAR over GUARDRNG) must be within MT >= 0.40 um.(45 edge)")
    drc( mt_ring_90 v4b_ring_90 enc < 0.40          "GR996e1: (V4BAR over GUARDRNG) must be within MT >= 0.40 um.(90 edge)")
    drc( mt_ovr_crk v4b_ovr_crk enc < 0.14          "GR996e1: (V4BAR over CRACKSTOP) must be within MT >= 0.14 um.")
    errorLayer( err996f_grdr                        "GR996e1: (V4BAR over GUARDRNG) not within MT found!")
    errorLayer( err996f_crk                         "GR996e1: (V4BAR over CRACKSTOP) not within MT found!")

    err996g_crk  = geomAnd( geomAndNot( v5b_ovr_crk  mt_ovr_crk  ) LM5 )
    err996g_grdr = geomAnd( geomAndNot( v5b_ovr_grdr mt_ovr_grdr ) LM5 )
    drc( mt_ring_45 v5b_ring_45 enc < 0.40-tolGrid2 "GR996f: (V5BAR over GUARDRNG) must be within MT >= 0.40 um.(45 edge)")
    drc( mt_ring_90 v5b_ring_90 enc < 0.40          "GR996f: (V5BAR over GUARDRNG) must be within MT >= 0.40 um.(90 edge)")
    drc( mt_ovr_crk v5b_ovr_crk enc < 0.14          "GR996f: (V5BAR over CRACKSTOP) must be within MT >= 0.14 um.")
    errorLayer( err996g_grdr                        "GR996f: (V5BAR over GUARDRNG) not within MT found!")
    errorLayer( err996g_crk                         "GR996f: (V5BAR over CRACKSTOP) not within MT found!")

    err996h_crk  = geomAndNot( e2_ovr_crk  e1_ovr_crk  )
    err996h_grdr = geomAndNot( e2_ovr_grdr e1_ovr_grdr )
    drc( e1_ring_45 e2_ring_45  enc < 0.60-tolGrid2 "GR996h: (E2 over GUARDRNG) must be within E1 >= 0.60 um.(45 edge)")
    drc( e1_ring_90 e2_ring_90  enc < 0.60          "GR996h: (E2 over GUARDRNG) must be within E1 >= 0.60 um.(90 edge)")
    drc( e1_ovr_crk e2_ovr_crk  enc < 0.60          "GR996h: (E2 over CRACKSTOP) must be within E1 >= 0.60 um.")
    errorLayer( err996h_grdr                        "GR996h: (E2 over GUARDRNG) not within E1 found!")
    errorLayer( err996h_crk                         "GR996h: (E2 over CRACKSTOP) not within E1 found!")

    err996j_crk  = geomAndNot( e2_ovr_crk  ma_ovr_crk  )
    err996j_grdr = geomAndNot( e2_ovr_grdr ma_ovr_grdr )
    drc( ma_ring_45 e2_ring_45  enc < 1.76-tolGrid2 "GR996j: (E2 over GUARDRNG) must be within MA >= 1.76 um.(45 edge)")
    drc( ma_ring_90 e2_ring_90  enc < 1.76          "GR996j: (E2 over GUARDRNG) must be within MA >= 1.76 um.(90 edge)")
    drc( ma_ovr_crk e2_ovr_crk  enc < 1.14          "GR996j: (E2 over CRACKSTOP) must be within MA >= 1.14 um.")
    errorLayer( err996j_grdr                        "GR996j: (E2 over GUARDRNG) not within MA found!")
    errorLayer( err996j_crk                         "GR996j: (E2 over CRACKSTOP) not within MA found!")


  ;Rule 999a
    bbox_chpe        = geomGetBBox( geomAvoiding( chipedge mpw_edge ) )
    origin_edge      = geomSize( geomStretch( geomGetEdge( origin coincident bbox_chpe ) -0.10 ) -0.10 )
    err999a_org_chpe = geomAndNot( bbox_chpe geomCoinOnly( bbox_chpe origin_edge keep == 2 ) )
    errorLayer( err999a_org_chpe "GR999a: (CHIPEDGE not touching MPW_EDGE) origin not at 0:0 found! (CHIPEDGE bounding box)")

    bbox_mpwe        = geomGetBBox( mpw_edge )
    origin_edge      = geomSize( geomStretch( geomGetEdge( origin coincident bbox_mpwe ) -0.10 ) -0.10 )
    err999a_org_mpwe = geomAndNot( bbox_mpwe geomCoinOnly( bbox_mpwe origin_edge keep == 2 ) )
    errorLayer( err999a_org_mpwe "GR999a: MPW_EDGE origin not at 0:0 found! (MPW_EDGE bounding box)")

    foreach( level '( rx nw bb dg pc pcing pcfuse tg rr pd op ca cabar m1 v1 v1bar k1 m2 v2 v2bar m3 v3 v3bar
                      m4 v4 v4bar m5 v5 v5bar mt qt ht ft ftbar e1 e2 am ma ml mz dv lv mosvar )

      err999a_1 = drc( chpe_not_crk  eval(level) enc < 5.22 withSingularPoint )
      err999a_2 = geomAndNot( geomAndNot( eval(level) chpe_not_crk ) geomOr( mpwe_not_chipe crackstop) )
      sprintf( errTxt_1          "GR999a: %s must be within (CHIPEDGE not over CRACKSTOP) >= 5.22 um." upperCase(level) )
      sprintf( errTxt_2          "GR999a: %s not within (CHIPEDGE not over CRACKSTOP) found!" upperCase(level) )

      errorLayer( err999a_1 errTxt_1 )
      errorLayer( err999a_2 errTxt_2 )
    );End foreach


  ;Rule 999a2
    foreach( level '( ns rn pi nw jc pr nr bb dg tg pcfuse bp bp2nd as jd rr rp pd op
                      ca cabar v1 v1bar v2 v2bar v3 v3bar v4 v4bar v5 v5bar
                      k1 qt ht ft ftbar e2 zerovt bfmoat mosvar ind_filt c4lv lvdummy )

      err999a2 = geomButtOrOver( eval(level) mpwe_not_chipe )
      sprintf( errTxtGR999a2     "GR999a2: %s touching (MPW_EDGE not over CHIPEDGE) is prohibited" upperCase(level) )
      errorLayer( err999a2 errTxtGR999a2 )
    );End foreach


  ;Rule 999a3
    foreach( level '( m1 m2 m3 m4 m5 mt e1 am ml ma mz )

      err999a3_a = drc( mpw_edge geomButtOrOver( eval(level) mpwe_not_chipe ) enc < 2.00 )
      err999a3_b = geomAndNot(   geomButtOrOver( eval(level) mpwe_not_chipe ) mpw_edge )

      sprintf( errTxtGR999a3_a   "GR999a3: (%s touching (MPW_EDGE not over CHIPEDGE)) must be wtihin MPW_EDGE >= 2.00" upperCase(level) )
      sprintf( errTxtGR999a3_b   "GR999a3: (%s touching (MPW_EDGE not over CHIPEDGE)) not wtihin MPW_EDGE found!" upperCase(level) )
      errorLayer( err999a3_a errTxtGR999a3_a )
      errorLayer( err999a3_b errTxtGR999a3_b )
    );End foreach


  ;Rule 999a4
    drcTable( e1
      ( width > 11.50   widthOutput( e1_gt_1150 ) )
      );End of drcTable

    err_999a4 = geomButtOrOver( e1_gt_1150  mpwe_not_chipe) 
    errorLayer( err_999a4        "GR999a4: E1(>11.50) touching (MPW_EDGE not over CHIPEDGE) is prohibited!")


  ;Rule 999a5
    foreach( level '( am ml ma mz )

      mx_gt_1000 = strcat( level "_gt_1000" )

      sprintf( errTxtGR999a5     "GR999a5: %s(>10.00) touching (MPW_EDGE not over CHIPEDGE) is prohibited!" upperCase(level) )

      drcTable( eval(level)
        ( width > 10.00   widthOutput( mx_gt_1000 ) )
        );End of drcTable

      sprintf( cmd11 "errorLayer( geomButtOrOver( %s mpwe_not_chipe ) errTxtGR999a5 )" mx_gt_1000 )
      evalstring( cmd11 )
    );End foreach


  ;Rule 999a9
    mpwe_not_chpe = geomAndNot( mpw_edge chipedge )
    err_999a9     = geomAndNot( mpwe_not_chpe geomOr( lv dv tv ) )
    errorLayer( err_999a9  "GR999a9: (MPW_EDGE not over CHIPEDGE) must be within {LV,DV,TV} >= 0.00 um.")


    mpwe_e1100    = geomSize( mpw_edge -11.00 )
    mpwe_e1200    = geomSize( mpw_edge -12.00 )
    mpwe_e2900    = geomSize( mpw_edge -29.00 )
    mpwe_11_ring  = geomAndNot( mpw_edge     mpwe_e1100 )
    mpwe_12_ring  = geomAndNot( mpw_edge     mpwe_e1200 )
    mpwe_29_ring  = geomAndNot( mpw_edge     mpwe_e2900 )
    mpwe11_box    = geomAndNot( mpwe_11_ring chipedge   )
    mpwe12_box    = geomAndNot( mpwe_12_ring chipedge   )
    mpwe29_box    = geomAndNot( mpwe_29_ring chipedge   )
    mpweBox999a9b = geomOverlap( mpwe11_box dv )
    mpweBox999a9c = geomOverlap( mpwe12_box lv )
    mpweBox999a9d = geomOverlap( mpwe29_box tv )
    err999a9b     = geomAndNot( mpweBox999a9b dv )
    err999a9c     = geomAndNot( mpweBox999a9c lv )
    err999a9d     = geomAndNot( mpweBox999a9d tv )

    errorLayer( err999a9b  "GR999a9b: [(MPW_EDGE not over (MPW_EDGE(-11.00)) not over CHIPEDGE) over DV] must be covered by DV")
    errorLayer( err999a9c  "GR999a9c: [(MPW_EDGE not over (MPW_EDGE(-29.00)) not over CHIPEDGE) over LV] must be covered by LV")
    errorLayer( err999a9d  "GR999a9d: [(MPW_EDGE not over (MPW_EDGE(-12.00)) not over CHIPEDGE) over TV] must be covered by TV")


  ;Rule 999a10, 999a11a, & 999a11b
    foreach( level '( rx pc pcfuse pcing )

      sprintf( errTxtGR999a10_a  "GR999a10: (%s touching MPW_EDGE) must be within MPW_EDGE >= 1.94 um." upperCase(level) )
      sprintf( errTxtGR999a10_b  "GR999a10: (%s touching MPW_EDGE) not within MPW_EDGE found!" upperCase(level) )
      sprintf( errTxtGR999a11a_a "GR999a11a: %s within ((CHIPEDGE touching GUARDEDGE) over CRACKSTOP) >= 1.94 um." upperCase(level) )
      sprintf( errTxtGR999a11a_b "GR999a11a: %s straddling ((CHIPEDGE touching GUARDEDGE) over CRACKSTOP) found!" upperCase(level) )
      sprintf( errTxtGR999a11b_a "GR999a11b: %s within ((CHIPEDGE touching GUARDEDGE) not over CRACKSTOP) >= 2.50 um." upperCase(level) )
      sprintf( errTxtGR999a11b_b "GR999a11b: %s straddling ((CHIPEDGE touching GUARDEDGE) not over CRACKSTOP) found!" upperCase(level) )
   
      drc( mpw_edge geomButtOrOver( eval(level) mpw_edge ) enc < 1.94  errTxtGR999a10_a )
      errorLayer( geomAndNot( geomButtOrOver( eval(level) mpw_edge ) mpw_edge ) errTxtGR999a10_b )

      drc( chpeGrde_ovr_crk eval(level) enc < 1.94  errTxtGR999a11a_a )
      errorLayer( geomStraddle( eval(level) chpeGrde_ovr_crk ) errTxtGR999a11a_b )

      drc( chpeGrde_not_crk eval(level) enc < 2.50  errTxtGR999a11b_a )
      errorLayer( geomStraddle( eval(level) chpeGrde_not_crk ) errTxtGR999a11b_b )

    );End foreach


  ;Rule 999a12
    foreach( level '( ns rn pi nw jc pr nr bb dg tg pc pcfuse bp bp2nd as jd rr rp pd op
                      ca v1 v2 v3 v4 v5 k1 qt ht ft zerovt bfmoat mosvar ind_filt c4lv lvdummy )

      sprintf( errTxtGR999a12 "GR999a12: (CRACKSTOP touching GUARDEDGE) touching %s is prohibited" upperCase(level) )

      err999a12 = geomButtOrOver( crk_tch_grde eval(level) )
      errorLayer( err999a12 errTxtGR999a12 )
    );End foreach


  ;Rule 999a13
    err_999a13 = geomAndNot( crk_tch_grde geomOr( dv lv tv ) )
    errorLayer( err_999a13       "GR999a13: (CRACKSTOP touching GUARDEDGE) must be within {DV,LV,TV} >= 0.00 um.")


  ;Rule 999a14
   ;err_999a14 = geomOr( geomAndNot( crk_tch_grde logobnd) geomAndNot( geomButtOrOver( logobnd crk_tch_grde) crackstop ) )
   ;errorLayer( err_999a14       "GR999a14: (CRACKSTOP touching GUARDEDGE) must be within LOGOBND == 0.00 um.")


  ;Rule 999a15
    chpe_tch_crk = geomButtOrOver( chipedge crackstop )
    grde_e1084   = geomSize( guardedge -10.84 )
    ring4Ecm     = geomAndNot( geomAndNot( chpe_tch_crk crackstop ) grde_e1084 )

    foreach( level '( ns rn pi nw jc pr nr bb dg tg pc pcfuse bp bp2nd as jd rr rp pd op
                      ca cabar v1 v1bar v2 v2bar v3 v3bar v4 v4bar v5 v5bar
                      k1 qt ht ft ftbar e2 zerovt bfmoat mosvar ind_filt c4lv lvdummy )

      sprintf( errTxtGR999a15 "GR999a15: %s over (Area between GUARDRNG and CRACKSTOP) is prohibited" upperCase(level) )

      err999a15 = geomAnd( eval(level) ring4Ecm )
      errorLayer( err999a15 errTxtGR999a15 )
    );End foreach


  ;Rule 999a17
    err_999a17 = geomAnd( geomOr( dv lv tv ) ring4Ecm )
    errorLayer( err_999a17    "GR999a17: {DV,LV,TV} over (Area between GUARDRNG and CRACKSTOP) is prohibited!")


  ;Rule 999a18
    foreach( level '( ns rn pi nw jc pr nr bb dg tg pc pcfuse bp2nd as jd rr rp pd op
                      k1 qt ht zerovt bfmoat mosvar ind_filt c4lv lvdummy )

      sprintf( errTxtGR999a18 "GR999a18: %s touching GUARDRNG is prohibited" upperCase(level) )

      err999a18 = geomButtOrOver( eval(level) guardrng )
      errorLayer( err999a18 errTxtGR999a18 )
    );End foreach

    err999a18_ca = geomButtOrOver( geomButtOrOver( ca geomButtOrOver( m1 v1bar ) ) guardrng )
    err999a18_v1 = geomButtOrOver( geomButtOrOver( v1 geomButtOrOver( m1 v1bar ) ) guardrng )
    err999a18_v2 = geomButtOrOver( geomButtOrOver( v2 geomButtOrOver( m2 v2bar ) ) guardrng )
    err999a18_v3 = geomButtOrOver( geomButtOrOver( v3 geomButtOrOver( m3 v3bar ) ) guardrng )
    err999a18_v4 = geomButtOrOver( geomButtOrOver( v4 geomButtOrOver( m4 v4bar ) ) guardrng )
    err999a18_v5 = geomButtOrOver( geomButtOrOver( v5 geomButtOrOver( m5 v5bar ) ) guardrng )

    errorLayer( err999a18_ca "GR999a18: (CA touching (M1 touching V1BAR)) touching GUARDRNG is prohibited")
    errorLayer( err999a18_v1 "GR999a18: (V1 touching (M1 touching V1BAR)) touching GUARDRNG is prohibited")
    errorLayer( err999a18_v2 "GR999a18: (V2 touching (M2 touching V2BAR)) touching GUARDRNG is prohibited")
    errorLayer( err999a18_v3 "GR999a18: (V3 touching (M3 touching V3BAR)) touching GUARDRNG is prohibited")
    errorLayer( err999a18_v4 "GR999a18: (V4 touching (M4 touching V4BAR)) touching GUARDRNG is prohibited")
    errorLayer( err999a18_v5 "GR999a18: (V5 touching (M5 touching V5BAR)) touching GUARDRNG is prohibited")

    v1b_last     = geomAnd( v1bar LM1 )
    v2b_last     = geomAnd( v2bar LM2 )
    v3b_last     = geomAnd( v3bar LM3 )
    v4b_last     = geomAnd( v4bar LM4 )
    v5b_last     = geomAnd( v5bar LM5 )
    vxb_last     = geomOr( v1b_last v2b_last v3b_last v4b_last v5b_last )

    err999a18_ft = geomButtOrOver( geomButtOrOver( ft geomButtOrOver( mt vxb_last ) ) guardrng )
    errorLayer( err999a18_ft "GR999a18: (FT touching (MT touching VxBAR)) touching GUARDRNG is prohibited (Vx=last via)")


  ;Rule 999a19
    err_999a19 = geomButtOrOver( geomSize( guardrng 3.00 ) geomOr( lv dv ) )
    errorLayer( err_999a19                "GR999a19: GUARDRNG(+3.0) over {LV DV} is prohibited!")


  ;Rule 999b
    drc( chipedge bp enc < 5.00-tolGrid2  "GR999b: BP within CHIPEDGE >= 5.00 um.")


  ;Rule 999d
    foreach( level '( bp rx m1 m2 m3 m4 m5 )

      sprintf( errTxtGR999d_1 "GR999d: %s straddling MPW_EDGE is prohibited" upperCase(level) )
      sprintf( errTxtGR999d_2 "GR999d: %s straddling CHIPEDGE is prohibited" upperCase(level) )
      sprintf( errTxtGR999d_3 "GR999d: %s straddling CRACKSTOP is prohibited" upperCase(level) )
      sprintf( errTxtGR999d_4 "GR999d: %s straddling GUARDRNG is prohibited" upperCase(level) )

      errorLayer( geomStraddle( eval(level) mpw_edge  ) errTxtGR999d_1 )
      errorLayer( geomStraddle( eval(level) chipedge  ) errTxtGR999d_2 )
      errorLayer( geomStraddle( eval(level) crackstop ) errTxtGR999d_3 )
      errorLayer( geomStraddle( eval(level) guardrng  ) errTxtGR999d_4 )
    );End foreach


    foreach( level '( cabar v1bar v2bar v3bar v4bar v5bar ftbar e2 )

      sprintf( errTxtGR999d2_3 "GR999d2: %s straddling CRACKSTOP is prohibited" upperCase(level) )
      sprintf( errTxtGR999d2_4 "GR999d2: %s straddling GUARDRNG is prohibited" upperCase(level) )

      errorLayer( geomStraddle( eval(level) crackstop ) errTxtGR999d2_3 )
      errorLayer( geomStraddle( eval(level) guardrng  ) errTxtGR999d2_4 )
    );End foreach


  ;Rule 999e
    foreach( level '( rx bp cabar m1 v1bar mt ftbar )

      sprintf( errTxtGR999e_LM1  "GR999e: GUARDRNG not touching %s found!" upperCase(level) )

      errorLayer( geomAvoiding( guardrng eval(level) ) errTxtGR999e_LM1 )
    );End foreach

    err999e_LM2a     = geomAnd( geomAvoiding( guardrng m2    ) LM2_5 )
    err999e_LM2b     = geomAnd( geomAvoiding( guardrng v2bar ) LM2_5 )
    errorLayer( err999e_LM2a     "GR999e: GUARDRNG not touching M2 found!")
    errorLayer( err999e_LM2b     "GR999e: GUARDRNG not touching V2BAR found!")

    err999e_LM3a     = geomAnd( geomAvoiding( guardrng m3    ) LM3_5 )
    err999e_LM3b     = geomAnd( geomAvoiding( guardrng v3bar ) LM3_5 )
    errorLayer( err999e_LM3a     "GR999e: GUARDRNG not touching M3 found!")
    errorLayer( err999e_LM3b     "GR999e: GUARDRNG not touching V3BAR found!")

    err999e_LM4a     = geomAnd( geomAvoiding( guardrng m4    ) LM4_5 )
    err999e_LM4b     = geomAnd( geomAvoiding( guardrng v4bar ) LM4_5 )
    errorLayer( err999e_LM4a     "GR999e: GUARDRNG not touching M4 found!")
    errorLayer( err999e_LM4b     "GR999e: GUARDRNG not touching V4BAR found!")

    err999e_LM5a     = geomAnd( geomAvoiding( guardrng m5    ) LM5 )
    err999e_LM5b     = geomAnd( geomAvoiding( guardrng v5bar ) LM5 )
    errorLayer( err999e_LM5a     "GR999e: GUARDRNG not touching M5 found!")
    errorLayer( err999e_LM5b     "GR999e: GUARDRNG not touching V5BAR found!")

    err999e_LM0AM    = geomAnd( geomAvoiding( guardrng am    ) LM0AM )
    errorLayer( err999e_LM0AM    "GR999e: GUARDRNG not touching AM found!")

    err999e_LM0ML    = geomAnd( geomAvoiding( guardrng ml    ) LM0ML )
    errorLayer( err999e_LM0ML    "GR999e: GUARDRNG not touching ML found!")

    err999e_LM0MA_e1 = geomAnd( geomAvoiding( guardrng e1    ) LM0MA )
    err999e_LM0MA_e2 = geomAnd( geomAvoiding( guardrng e2    ) LM0MA )
    err999e_LM0MA_ma = geomAnd( geomAvoiding( guardrng ma    ) LM0MA )
    errorLayer( err999e_LM0MA_e1 "GR999e: GUARDRNG not touching E1 found!")
    errorLayer( err999e_LM0MA_e2 "GR999e: GUARDRNG not touching E2 found!")
    errorLayer( err999e_LM0MA_ma "GR999e: GUARDRNG not touching MA found!")

    err999e_LM0MZ    = geomAnd( geomAvoiding( guardrng mz    ) LM0MZ )
    errorLayer( err999e_LM0MZ    "GR999e: GUARDRNG not touching MZ found!")


    foreach( ( mx vx ) '( rx m1 m2 m3 m4 m5 mt e1 ) '( cabar v1bar v2bar v3bar v4bar v5bar ftbar e2 )

      sprintf( cmd1 "mxName     = symbolToString( '%L )" mx )
      evalstring( cmd1 )
      sprintf( cmd2 "vxNameLong = symbolToString( '%L )" vx )
      evalstring( cmd2 )

     ;vxName = substring( vxNameLong 1 3 )

      if( vxNameLong != "e2" then
        vxName = substring( vxNameLong 1 3 )
      else
        vxName = substring( vxNameLong 1 2 )
      );End if

      mx_ovlp_grdr  = strcat( mxName "_ovlp_grdr" )
      vx_ovlp_grdr  = strcat( vxName "_ovlp_grdr" )

      mxGrdr_tch_vx = strcat( mxName "Grdr_tch_" vxName )

      mxRing        = strcat( mxName "Ring" )
      vxRing        = strcat( vxName "Ring" )

      sprintf( cmd4 "%s = geomOverlap( %s guardrng )" mx_ovlp_grdr mxName )
      evalstring( cmd4 )
      sprintf( cmd5 "%s = geomOverlap( %s guardrng )" vx_ovlp_grdr vxNameLong )
      evalstring( cmd5 )
 
      sprintf( cmd6 "%s = geomButtOrOver( %s %s )" mxGrdr_tch_vx mx_ovlp_grdr vxNameLong )
      evalstring( cmd6 )

      sprintf( cmd7 "%s = geomOr( %s )" mxRing mxGrdr_tch_vx )
      evalstring( cmd7 )
      sprintf( cmd8 "%s = geomOr( %s )" vxRing vx_ovlp_grdr )
      evalstring( cmd8 )
       
    );End foreach

    bpRing = geomOverlap( bp guardrng )

    err999e1a_rx  =          geomAndNot( rxRing  guardrng )
    err999e1a_bp  =          geomAndNot( bpRing  guardrng )
    err999e1a_cab =          geomAndNot( cabRing guardrng )
    err999e1a_m1  =          geomAndNot( m1Ring  guardrng )
    err999e1a_v1b =          geomAndNot( v1bRing guardrng )
    err999e1a_mt  =          geomAndNot( mtRing  guardrng )
    err999e1a_ftb =          geomAndNot( ftbRing guardrng )

    err999e1a_m2  = geomAnd( geomAndNot( m2Ring  guardrng ) LM2_5 )
    err999e1a_v2b = geomAnd( geomAndNot( v2bRing guardrng ) LM2_5 )
    err999e1a_m3  = geomAnd( geomAndNot( m3Ring  guardrng ) LM3_5 )
    err999e1a_v3b = geomAnd( geomAndNot( v3bRing guardrng ) LM3_5 )
    err999e1a_m4  = geomAnd( geomAndNot( m4Ring  guardrng ) LM4_5 )
    err999e1a_v4b = geomAnd( geomAndNot( v4bRing guardrng ) LM4_5 )
    err999e1a_m5  = geomAnd( geomAndNot( m5Ring  guardrng ) LM5   )
    err999e1a_v5b = geomAnd( geomAndNot( v5bRing guardrng ) LM5   )
    err999e1a_e1  = geomAnd( geomAndNot( e1Ring  guardrng ) LM0MA )
    err999e1a_e2  = geomAnd( geomAndNot( e2Ring  guardrng ) LM0MA )

    errorLayer( err999e1a_rx     "GR999e1a: ((RX touching CABAR)touching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_bp     "GR999e1a: (BP touching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_cab    "GR999e1a: (CABARtouching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_m1     "GR999e1a: ((M1 touching V1BAR)touching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_v1b    "GR999e1a: (V1BARtouching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_m2     "GR999e1a: ((M2 touching V2BAR)touching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_v2b    "GR999e1a: (V2BARtouching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_m3     "GR999e1a: ((M3 touching V3BAR)touching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_v3b    "GR999e1a: (V3BARtouching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_m4     "GR999e1a: ((M4 touching V4BAR)touching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_v4b    "GR999e1a: (V4BARtouching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_m5     "GR999e1a: ((M5 touching V5BAR)touching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_v5b    "GR999e1a: (V5BARtouching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_mt     "GR999e1a: ((MT touching FTBAR)touching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_ftb    "GR999e1a: (FTBARtouching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_e1     "GR999e1a: (E1 touching GUARDRNG) must be covered by GUARDRNG")
    errorLayer( err999e1a_e2     "GR999e1a: (E2 touching GUARDRNG) must be covered by GUARDRNG")


    grdr_ovr_seg     = geomAnd(      guardrng  seg_gring )
    grde_out_seg     = geomAvoiding( guardedge seg_gring )
    grdeOutSeg_e2000 = geomSize( grde_out_seg -20.00 )    ;to chop off logobnd areas of guardring

    rxRingPerim   = geomAndNot( rxRing  grdeOutSeg_e2000 )
    bpRingPerim   = geomAndNot( bpRing  grdeOutSeg_e2000 )
    cabRingPerim  = geomAndNot( cabRing grdeOutSeg_e2000 )
    m1RingPerim   = geomAndNot( m1Ring  grdeOutSeg_e2000 )
    v1bRingPerim  = geomAndNot( v1bRing grdeOutSeg_e2000 )
    m2RingPerim   = geomAndNot( m2Ring  grdeOutSeg_e2000 )
    v2bRingPerim  = geomAndNot( v2bRing grdeOutSeg_e2000 )
    m3RingPerim   = geomAndNot( m3Ring  grdeOutSeg_e2000 )
    v3bRingPerim  = geomAndNot( v3bRing grdeOutSeg_e2000 )
    m4RingPerim   = geomAndNot( m4Ring  grdeOutSeg_e2000 )
    v4bRingPerim  = geomAndNot( v4bRing grdeOutSeg_e2000 )
    m5RingPerim   = geomAndNot( m5Ring  grdeOutSeg_e2000 )
    v5bRingPerim  = geomAndNot( v5bRing grdeOutSeg_e2000 )
    mtRingPerim   = geomAndNot( mtRing  grdeOutSeg_e2000 )
    ftbRingPerim  = geomAndNot( ftbRing grdeOutSeg_e2000 )
    e1RingPerim   = geomAndNot( e1Ring  grdeOutSeg_e2000 )
    e2RingPerim   = geomAndNot( e2Ring  grdeOutSeg_e2000 )

    err999e1b_rx  = geomAndNot( geomAvoiding( rxRingPerim  seg_gring ) geomGetHoled( rxRingPerim  ) )
    err999e1b_bp  = geomAndNot( geomAvoiding( bpRingPerim  seg_gring ) geomGetHoled( bpRingPerim  ) )
    err999e1b_cab = geomAndNot( geomAvoiding( cabRingPerim seg_gring ) geomGetHoled( cabRingPerim ) )
    err999e1b_m1  = geomAndNot( geomAvoiding( m1RingPerim  seg_gring ) geomGetHoled( m1RingPerim  ) )
    err999e1b_v1b = geomAndNot( geomAvoiding( v1bRingPerim seg_gring ) geomGetHoled( v1bRingPerim ) )
    err999e1b_m2  = geomAndNot( geomAvoiding( m2RingPerim  seg_gring ) geomGetHoled( m2RingPerim  ) )
    err999e1b_v2b = geomAndNot( geomAvoiding( v2bRingPerim seg_gring ) geomGetHoled( v2bRingPerim ) )
    err999e1b_m3  = geomAndNot( geomAvoiding( m3RingPerim  seg_gring ) geomGetHoled( m3RingPerim  ) )
    err999e1b_v3b = geomAndNot( geomAvoiding( v3bRingPerim seg_gring ) geomGetHoled( v3bRingPerim ) )
    err999e1b_m4  = geomAndNot( geomAvoiding( m4RingPerim  seg_gring ) geomGetHoled( m4RingPerim  ) )
    err999e1b_v4b = geomAndNot( geomAvoiding( v4bRingPerim seg_gring ) geomGetHoled( v4bRingPerim ) )
    err999e1b_m5  = geomAndNot( geomAvoiding( m5RingPerim  seg_gring ) geomGetHoled( m5RingPerim  ) )
    err999e1b_v5b = geomAndNot( geomAvoiding( v5bRingPerim seg_gring ) geomGetHoled( v5bRingPerim ) )
    err999e1b_mt  = geomAndNot( geomAvoiding( mtRingPerim  seg_gring ) geomGetHoled( mtRingPerim  ) )
    err999e1b_ftb = geomAndNot( geomAvoiding( ftbRingPerim seg_gring ) geomGetHoled( ftbRingPerim ) )
    err999e1b_e1  = geomAndNot( geomAvoiding( e1RingPerim  seg_gring ) geomGetHoled( e1RingPerim  ) )
    err999e1b_e2  = geomAndNot( geomAvoiding( e2RingPerim  seg_gring ) geomGetHoled( e2RingPerim  ) )

    errorLayer( err999e1b_rx  "GR999e1b: (RX touching CABAR) touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_bp  "GR999e1b: BP touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_cab "GR999e1b: CABAR touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_m1  "GR999e1b: (M1 touching V1BAR) touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_v1b "GR999e1b: V1BAR touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_m2  "GR999e1b: (M2 touching V2BAR) touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_v2b "GR999e1b: V2BAR touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_m3  "GR999e1b: (M3 touching V3BAR) touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_v3b "GR999e1b: V3BAR touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_m4  "GR999e1b: (M4 touching V4BAR) touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_v4b "GR999e1b: V4BAR touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_m5  "GR999e1b: (M5 touching V5BAR) touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_v5b "GR999e1b: V5BAR touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_mt  "GR999e1b: (MT touching FTBAR) touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_ftb "GR999e1b: FTBAR touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_e1  "GR999e1b: E1 touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")
    errorLayer( err999e1b_e2  "GR999e1b: E2 touching (GUARDRNG not over SEGMENTED_GRING) must form an unbroken ring")


    crk_ovr_chpe = geomAnd( crackstop chipedge )

    foreach( level '( rx cabar m1 v1bar mt ftbar )

      sprintf( errTxtGR999e2a_LM1  "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching %s found!" upperCase(level) )
      sprintf( errTxtGR999e2b_LM1  "GR999e2b: %s ring not covered by (CRACKSTOP over CHIPEDGE) found!" upperCase(level) )

      errorLayer(             geomAvoiding(   crk_ovr_chpe eval(level)  )                errTxtGR999e2a_LM1 )
      errorLayer( geomAndNot( geomButtOrOver( eval(level)  crk_ovr_chpe ) crk_ovr_chpe ) errTxtGR999e2b_LM1 )
    );End foreach

    err999e2a_LM2a     = geomAnd( geomAvoiding( crk_ovr_chpe m2    ) LM2_5 )
    err999e2a_LM2b     = geomAnd( geomAvoiding( crk_ovr_chpe v2bar ) LM2_5 )
    errorLayer( err999e2a_LM2a     "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching M2 found!")
    errorLayer( err999e2a_LM2b     "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching V2BAR found!")

    err999e2a_LM3a     = geomAnd( geomAvoiding( crk_ovr_chpe m3    ) LM3_5 )
    err999e2a_LM3b     = geomAnd( geomAvoiding( crk_ovr_chpe v3bar ) LM3_5 )
    errorLayer( err999e2a_LM3a     "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching M3 found!")
    errorLayer( err999e2a_LM3b     "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching V3BAR found!")

    err999e2a_LM4a     = geomAnd( geomAvoiding( crk_ovr_chpe m4    ) LM4_5 )
    err999e2a_LM4b     = geomAnd( geomAvoiding( crk_ovr_chpe v4bar ) LM4_5 )
    errorLayer( err999e2a_LM4a     "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching M4 found!")
    errorLayer( err999e2a_LM4b     "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching V4BAR found!")

    err999e2a_LM5a     = geomAnd( geomAvoiding( crk_ovr_chpe m5    ) LM5   )
    err999e2a_LM5b     = geomAnd( geomAvoiding( crk_ovr_chpe v5bar ) LM5   )
    errorLayer( err999e2a_LM5a     "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching M5 found!")
    errorLayer( err999e2a_LM5b     "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching V5BAR found!")

    err999e2a_LM0AM    = geomAnd( geomAvoiding( crk_ovr_chpe am    ) LM0AM )
    errorLayer( err999e2a_LM0AM    "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching AM found!")

    err999e2a_LM0ML    = geomAnd( geomAvoiding( crk_ovr_chpe ml    ) LM0ML )
    errorLayer( err999e2a_LM0ML    "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching ML found!")

    err999e2a_LM0MA_e1 = geomAnd( geomAvoiding( crk_ovr_chpe e1    ) LM0MA )
    err999e2a_LM0MA_e2 = geomAnd( geomAvoiding( crk_ovr_chpe e2    ) LM0MA )
    err999e2a_LM0MA_ma = geomAnd( geomAvoiding( crk_ovr_chpe ma    ) LM0MA )
    errorLayer( err999e2a_LM0MA_e1 "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching E1 found!")
    errorLayer( err999e2a_LM0MA_e2 "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching E2 found!")
    errorLayer( err999e2a_LM0MA_ma "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching MA found!")

    err999e2a_LM0MZ    = geomAnd( geomAvoiding( crk_ovr_chpe mz    ) LM0MZ )
    errorLayer( err999e2a_LM0MZ    "GR999e2a: (CRACKSTOP over CHIPEDGE) not touching MZ found!")


    foreach( level '( m2 v2bar m3 v3bar m4 v4bar m5 v5bar am ml mz e1 e2 ma )

      sprintf( errTxtGR999e2b_LMx  "GR999e2b %s ring not covered by (CRACKSTOP over CHIPEDGE) found!" upperCase(level) )

      errorLayer( geomAndNot( geomButtOrOver( eval(level) crk_ovr_chpe ) crk_ovr_chpe ) errTxtGR999e2b_LMx )
    );End foreach


    chpeRing_180w = geomAndNot( chipedge geomSize( chipedge -1.80 ) )

    foreach( level '( rx cabar m1 v1bar m2 v2bar m3 v3bar m4 v4bar m5 v5bar mt ftbar am e1 e2 ma ml mz )

      sprintf( errTxtGR999e3 "GR999e3: %s touching (CHIPEDGE not over (CHIPEDGE -1.80)) found!" upperCase(level) )

      errorLayer( geomButtOrOver( eval(level) chpeRing_180w ) errTxtGR999e3 )
    );End foreach


  ;Rule 999j
    err999j_m1 = geomStraddle( m1Grdr_tch_v1b guardrng )
    err999j_m2 = geomStraddle( m2Grdr_tch_v2b guardrng )
    err999j_m3 = geomStraddle( m3Grdr_tch_v3b guardrng )
    err999j_m4 = geomStraddle( m4Grdr_tch_v4b guardrng )
    err999j_m5 = geomStraddle( m5Grdr_tch_v5b guardrng )
    err999j_mt = geomStraddle( mtGrdr_tch_ftb guardrng )
    err999j_e1 = geomStraddle( e1             guardrng )

    errorLayer( err999j_m1 "GR999j: (M1 touching V1BAR) straddling GUARDRNG is prohibited")
    errorLayer( err999j_m2 "GR999j: (M2 touching V2BAR) straddling GUARDRNG is prohibited")
    errorLayer( err999j_m3 "GR999j: (M3 touching V3BAR) straddling GUARDRNG is prohibited")
    errorLayer( err999j_m4 "GR999j: (M4 touching V4BAR) straddling GUARDRNG is prohibited")
    errorLayer( err999j_m5 "GR999j: (M5 touching V5BAR) straddling GUARDRNG is prohibited")
    errorLayer( err999j_mt "GR999j: (MT touching FTBAR) straddling GUARDRNG is prohibited")
    errorLayer( err999j_e1 "GR999j: E1 straddling GUARDRNG is prohibited")


  ;Rule 1000
    err1000_am = geomAnd( geomOutside( am_ring iopad ) LM0AM )
    err1000_ma = geomAnd( geomOutside( ma_ring iopad ) LM0MA )
    err1000_ml = geomAnd( geomOutside( ml_ring iopad ) LM0ML )
    err1000_mz = geomAnd( geomOutside( mz_ring iopad ) LM0MZ )
    errorLayer( err1000_am  "GR1000: GUARDRING IS NOT CONNECTED TO A PAD! (AM)")
    errorLayer( err1000_ma  "GR1000: GUARDRING IS NOT CONNECTED TO A PAD! (MA)")
    errorLayer( err1000_ml  "GR1000: GUARDRING IS NOT CONNECTED TO A PAD! (ML)")
    errorLayer( err1000_mz  "GR1000: GUARDRING IS NOT CONNECTED TO A PAD! (MZ)")

);End GUARDEDGE_PRESENT=YES

;========================================================
;===== End of ENHANCED CRACKSTOP METHODOLOGY RULES  =====
;========================================================


;POLYSILICON AND ISOLATION LAYOUT RULES
 if( !avSwitch( "DSRAM" ) then
 ;Rule 1
   drc( ngate width < 0.18               "GR1: (PC over RX)(NFET) width >= 0.180 um.")

 ;Rule 2
   drc( pgate width < 0.18               "GR2: (PC over RX)(PFET) width >= 0.180 um.")
 );END OF NOT DSRAM

 ;Rule 3
   ngate45 = geomGetAngledEdge( ngate keep == 45 )
   drc( ngate45 width < 0.196            "GR3: (PC over RX)(NFET) width for 45 deg >= 0.196 um.")

 ;Rule 4
   pgate45 = geomGetAngledEdge( pgate keep == 45 )
   drc( pgate45 width < 0.196            "GR4: (PC over RX)(PFET) width for 45 deg >= 0.196 um.")

 ;Rule 10
   gt_width_fail = drc( pc_near_gt sep < 0.22 )
   err10         = geomAnd( ngate gt_width_fail )
   errorLayer( err10                    "GR10: RX width under PC for NFET device >= 0.220 um.")

 ;Rule 40b
  rx_more_50 = geomSize( geomSize( rx -25.0) 25.0)
  drc( rx_more_50  sep     < 2.00    "GR40b: RX space if both RX shapes are wider than 50.0um >= 2.00 um (space).")
  drc( rx_more_50  notch   < 2.00    "GR40b: RX space if both RX shapes are wider than 50.0um >= 2.00 um (notch).")

 if( !avSwitch( "DSRAM" ) then
 ;Rule 11
   err11         = geomAnd( pgate gt_width_fail )
   errorLayer( err11                     "GR11: RX width under PC for PFET device >= 0.220 um.")

 ;Rule 50
   err50b = geomWidth( rx keep > 200 )
   drc( rx width < 0.22                  "GR50: RX width (min) >= 0.220 um.")
   errorLayer( err50b                    "GR50b: RX width (max) <= 200.000 um.")
 );END OF NOT DSRAM

 ;Rule 51
   drc( rx  area < 0.16                  "GR51: RX area >= 0.160 sq.um.")

 if( !avSwitch( "DSRAM" ) then
 ;Rule 52
   drc( rx sep   < 0.26                  "GR52: RX space >= 0.260 um.")
   drc( rx notch < 0.26                  "GR52: RX notch >= 0.260 um.")

 );END OF NOT DSRAM

 if( avSwitch("HIRESSUB") then
 ;Rule RX3
   errrx3 =  geomAnd(  rx ti )
   drc( rx ti  sep < 0.52                "GRRX3: TI to RX space >=0.52um.")
   errorLayer( errrx3                    "GRRX3: TI touching RX shape found!")
 );END OF NOHR avSwitch
 ;Rule CPRX4
   rx_strad_ns = geomStraddle( rx ns )
   drc( ns rx enc < 0.50                 "GRCPRX4: RX within NS >= 0.500 um.")
   errorLayer( rx_strad_ns               "GRCPRX4: RX straddling NS found!")

 ;Rule RX8
   nw_asp    = geomAnd( nwgen nwasp )
   nw_adp    = geomAndNot( nwgen nwasp )
   bf_nw     = geomButtOrOver( geomOr( bf bfgen ) nw )
   bf_nw_asp = geomButtOrOver( geomOr( bf bfgen ) nw_asp )
   bf_out_nw = geomOutside( geomOr( bf bfgen ) nw )
   drc( bf_out_nw nw     sep < 1.14      "GRRX8b: (BF not touching NW) to adjacent NW >= 1.140 um.")
   drc( bf_nw_asp nw_asp sep < 0.70      "GRRX8d: ((BF touch NW) touch NWASP) to adj (NW over NWASP) >= 0.700 um.")

 ;Rule RX23
   pd_enclosure = geomAndNot( geomHoles( pd ) pd )
   sbd          = geomButtOrOver( ns pd_enclosure )
   errrx23      = geomAndNot( geomAndNot( geomAnd( diff bb ) ind_filt ) geomOr( pd rn jd sbd schky ) )
   errorLayer( errrx23                 "GRRX23: (RX(over BB), not over IND_FILT,not over PC) must be covered by {PD,SBD,RN,JD, SCHKY}")

 ;CODE TO FIND RX(FET) CORNERS
   rx_fet           = geomOverlap( rx gate )
   rxfet_edge_in    = geomSize( geomGetEdge( rx_fet over bkgnd ) -0.02 )
   rxfet_halo_in    = geomAndNot( rx_fet geomSize( rx_fet -0.02 ) )
   rxfet_corner_in  = geomAndNot( rxfet_halo_in rxfet_edge_in )
   rxfet_edge_out   = geomSize( geomGetEdge( rx_fet over bkgnd )  0.03 )
   rxfet_halo_out   = geomAndNot( geomSize( rx_fet 0.02 ) rx_fet )
   rxfet_corner_out = geomAndNot( rxfet_halo_out rxfet_edge_out )
   rxfet_90c_in     = geomGetRectangle( geomAnd( rxfet_corner_in pc ) )
   rxfet_90c_out    = geomGetRectangle( geomAnd( rxfet_corner_out pc ) )
   rxfet_45c_out    = geomAndNot( geomAnd( rxfet_corner_out pc ) rxfet_90c_out )

 if( !avSwitch( "DSRAM" ) then
 ;Rule 100
   pc_not_rx = geomAndNot( pc rx )
   drc( pc_not_rx width < 0.18                           "GR100: PC width >= 0.180 um.")
 );END OF NOT DSRAM

 ;Rule 101
   pc_enclosure = geomAndNot( geomHoles( pc ) pc )
   drc( pc area < 0.203                           "GR101a: PC area >= 0.203 sq. um.")
   drc( pc_enclosure area < 0.291                 "GR101b: PC enclosed area >= 0.291 sq. um.")

 if( !avSwitch( "DSRAM" ) then
 ;Rule 102
   pc_end_006  = geomSize( geomLineEnd( pc 0.18 legs(0.18) ) -0.06)
   pc_not_end  = geomAndNot( pc  pc_end_006 )

   pc_notend_notend =   geomAndNot( geomAndNot( drc( pc_not_end  sep < 0.24 withSingularPoint) pc) rx); (andnot pc) to avoid false errors
   pc_notend_notch  =   geomAndNot( drc( pc_not_end   notch < 0.24 ) pc );andnot pc to avoid false errors
   errorLayer(  pc_notend_notend  "GR102a: (PC(NOT END) to PC(NOT END) space) (not over RX) >= 0.240 um.")
   errorLayer(  pc_notend_notch   "GR102a: (PC(NOT END) to PC(NOT END) notch) (not over RX) >= 0.240 um.")

   pc_end_notend =   geomAndNot( geomAndNot( drc( pc_end_006 pc_not_end  sep < 0.18 withSingularPoint) pc) rx); (andnot pc) to avoid false errors
   err_102b_1    =   geomButtOrOver( pc_end_notend pc keep >= 2) ;to avoid false errors.
   pc_end_end    =   geomAndNot( geomAndNot( drc( pc_end_006   sep < 0.18 withSingularPoint) pc) rx)
   err_102b_2    =   geomButtOrOver( pc_end_end pc keep >= 2)
   errorLayer( err_102b_1       "GR102b: (PCEND to PC space) (not over RX)>= 0.180 um.")
   errorLayer( err_102b_2       "GR102b: (PCEND to PCEND space) (not over RX) >= 0.180 um.")
 ;Rule 104 (GATE NOTCH IS COVERED BY 120c)
   err104a    = geomInside( drc( ngate sep < 0.24 ) rx )
   err104b    = geomInside( drc( pgate sep < 0.24 ) rx )
   errorLayer( err104a                           "GR104a: PC(over RX) space >= 0.240 um.")
   errorLayer( err104b                           "GR104b: PC(over RX) space >= 0.240 um.")

 ;Rule 110
   gate_45     = geomGetAngledEdge( gate keep == 45 )
   gate45_edge = geomSize( geomGetEdge( gate_45 over bkgnd ) 0.28 )
   err110_past = drc( rx pc 0 < enc < 0.28 opposite parallel )
   err110_coin = geomGetEdge( rx coincident pc )
;   err110_45   = geomAndNot( geomAndNot( gate45_edge rx ) pc )
   pc_not_rx = geomAndNot( pc rx)
   err110_45       = geomAvoiding( geomAndNot(gate45_edge rx) pc_not_rx )
   errorLayer( err110_past                       "GR110: RX overlap past PC >= 0.280 um.")
   errorLayer( err110_coin                       "GR110: RX overlap past PC >= 0.280 um.(coincident)")
   errorLayer( err110_45                         "GR110: RX overlap past PC >= 0.280 um.(45 deg. gate)")

 ;Rule 111
   err111_past = drc( pc gate 0 < enc < 0.24 )
   err111_coin = geomGetEdge( pc coincident rx )
   errorLayer( err111_past                       "GR111: PC overlap past RX >= 0.240 um.")
   errorLayer( err111_coin                       "GR111: PC overlap past RX >= 0.240 um.(coincident)")

 ;Rule 112
   rxfet_crnr_x008 = geomSize( rxfet_corner_in 0.08 )
   gt_near_rxcornr = drc( gate rxfet_corner_in sep < 0.08 figa )
   gtnrxc_edge_x03 = geomSize( geomGetEdge( gt_near_rxcornr coincident rx ) 0.30 )
   err112          = geomOverlap( geomEnclose( gtnrxc_edge_x03 geomAndNot( gtnrxc_edge_x03 pc ) ) rxfet_crnr_x008 )
   errorLayer( err112                            "GR112: PC overlap past RX (within 0.08 of RX corner) >= 0.300 um.")

 ;Rule 113 (NOT CHECKED: VALUE FOR PC TO RX SPACE IS 0.000 um.)

 ;Rule 114
   rxfet_corner_in_114      = geomGrowCorner( geomGetCorner( rx_fet keep == 270 concave) 0.02 outer angleAll)
   err114          = drc( pc rxfet_corner_in_114  0 < sep < 0.060 opposite )
   err114_butt     = geomButting( pc rxfet_corner_in_114 )
   errorLayer( err114                            "GR114: PC to RX corner >= 0.060 um.")
   errorLayer( err114_butt                       "GR114: PC abutting RX corner found!")

 ;Rule 115
   pc_fet          = geomOverlap( pc gate )
   pcfet_edge_in   = geomSize( geomGetEdge( pc_fet over bkgnd ) -0.02 )
   pcfet_halo_in   = geomAndNot( pc_fet geomSize( pc_fet -0.02 ) )
   pcfet_corner_in = geomAndNot( pcfet_halo_in pcfet_edge_in )
   pcfet_corner_in_115 =  geomGrowCorner( geomGetCorner( pc_fet keep == 270 concave ) 0.02 outer angleAll )
   err115          = drc( rx pcfet_corner_in_115  0 < sep < 0.080 opposite )
   err115_butt     = geomButting( rx pcfet_corner_in_115 )
   errorLayer( err115                            "GR115: PC corner to RX >= 0.080 um.")
   errorLayer( err115_butt                       "GR115: RX abutting PC corner found!")

 );END OF NOT DSRAM

 ;Rule 119
   gate_end_in     = geomSize( geomGetEdge( gate coincident rx ) -0.04 )
   gate_edge_in    = geomSize( geomGetEdge( pc over rx ) -0.005 )
   gate_halo_in    = geomAndNot( gate geomSize( gate -0.005 ) )
   gate_corner_in  = geomOutside( geomAndNot( gate_halo_in gate_edge_in ) gate_end_in )
;   err119_in       = drc( rx gate_corner_in  enc < 0.275 )
;   errorLayer( err119_in                         "GR119: PC vertex(inside) within RX >= 0.280 um.")

   gate_end_out    = geomSize( geomGetEdge( gate coincident rx )  0.04 )
   gate_edge_out   = geomAnd( geomSize( geomGetEdge( pc over rx )  0.005 ) rx )
   gate_halo_out   = geomAnd( geomAndNot( geomSize( gate 0.005 ) gate ) rx )
   gate_corner_out = geomAndNot( gate_halo_out gate_edge_out )
;    err119_out      = drc( rx gate_corner_out enc < 0.242 )
;   err119_out      = drc( rx gate_corner_out enc < 0.275 )
;   errorLayer( err119_out                        "GR119: PC vertex(outside) within RX >= 0.280 um.")

   gate_edge_in_prv    = geomSize( geomGetEdge( pc over rx ) -0.02 )
   gate_halo_in_prv    = geomAndNot( gate geomSize( gate -0.02 ) )
   gate_corner_in_prv  = geomOutside( geomAndNot( gate_halo_in_prv gate_edge_in_prv ) gate_end_in )

   gate_end_in2    = geomSize( geomGetEdge( gate coincident rx ) -0.02 )
   gate_edge_in2   = geomSize( geomStretch( geomGetEdge( pc over rx ) -0.02 ) -0.02 )
   gate_edge_end   = geomOr( gate_end_in2 gate_edge_in2 )
   gate_corner_e1  = geomAndNot( gate_halo_in_prv gate_edge_end )
   gate_corner_e2  = geomOutside( gate_corner_e1 gate_edge_end )
   gate_corner_end = geomOverlap( geomOutside( gate_corner_e2 gate_corner_in_prv ) gate_end_in )
;   err119_end      = drc( rx gate_corner_end  enc < 0.100 )
;   errorLayer( err119_end                        "GR119: PC vertex(end) within RX >= 0.280 um.")

 if( !avSwitch( "DSRAM" ) then
   pc_corner_all       = geomGetCorner( pc angleAll )
   gate_corner_all     = geomButtOrOver( pc_corner_all gate )
   gate_corner_bbox    = geomGetBBox( gate_corner_all )
   err119_0            = geomButtOrOver( gate_corner_bbox drc( rx gate_corner_bbox enc < 0.275 ) )
   err119_1            = geomStraddle( gate_corner_bbox rx )
   err119              = geomButtOrOver( gate_corner_all geomOr( err119_0 err119_1 ) )
   errorLayer( err119 "GR119: PC Vertex within RX >= 0.280 um." )
 );END OF NOT DSRAM

 ;Rule 120
   gate_90_in   = geomButtOrOver( gate geomGetRectangle( gate_corner_in ) )
   gate_90_rect = geomGetRectangle( gate_corner_out )
   gate_90_real = geomAndNot( gate_90_rect geomCoincident( gate_90_rect rx ) )
   gate_90_out  = geomButtOrOver( gate geomSize( gate_90_real 0.02 ) )
   gate_90_all = geomGetCorner( gate angleMulti90 )
   gate_over   = geomSize( geomGetEdge( rx inside pc ) 0.1 edges )
   gate_90_res = geomAvoiding( gate_90_all gate_over )
   err120a_90   = geomOutside( geomButtOrOver( gate gate_90_res ) geomOr( dsram sram_hvt sram_std sram_dual))
   err120a_45   = geomOutside( geomEnclose( gate geomSize( geomGetNon45( gate ) -0.02 ) ) geomOr( dsram sram_hvt sram_std sram_dual))
   errorLayer( err120a_90                        "GR120a: Non 45 degree PC vertices over RX found!(90 degree)")
   errorLayer( err120a_45                        "GR120a: Non 45 degree PC vertices over RX found!(non 45)")
   drc( gate_corner_in 0 <   sep < 0.08 opposite  "GR120b: Dist between inside corners of 45 degree gate >= 0.080 um.")
   drc( gate           0 < notch < 0.46 parallel  "GR120c: (PC over RX) notch >= 0.460 um.")

 ;Rule 121
   gate_end = geomOr( gate_end_in gate_end_out )
   err121   = geomButtOrOver( gate_end geomAndNot( gate_end pc ) )
   errorLayer( err121                            "GR121: PC intersecting RX at other than 90 degrees found!")

 ;Rule 123
   rx_fet_123a      = geomOverlap( geomAndNot( rx geomAvoiding( pc ca )) gate )
   rxfet_edge_in_123a     = geomSize( geomGetEdge( rx_fet_123a  over bkgnd ) -0.03 )
   rxfet_halo_in_123a     = geomAndNot( rx_fet_123a  geomSize( rx_fet_123a -0.02 ) )
   rxfet_corner_in_123a   = geomAndNot( rxfet_halo_in_123a rxfet_edge_in_123a )
   rxfet_edge_out_123a    = geomSize( geomGetEdge( rx_fet_123a over bkgnd )  0.03 )
   rxfet_halo_out_123a    = geomAndNot( geomSize( rx_fet_123a 0.02 ) rx_fet_123a )
   rxfet_corner_out_123a  = geomAndNot( rxfet_halo_out_123a rxfet_edge_out_123a )
   rxfet_90c_in_123a      = geomGetRectangle( geomAnd( rxfet_corner_in_123a pc ) )
   rxfet_90c_out_123a     = geomGetRectangle( geomAnd( rxfet_corner_out_123a pc ) )
   rxfet_45c_out_123a     = geomAndNot( geomAnd( rxfet_corner_out_123a pc ) rxfet_90c_out_123a )

   rxfet_edge_in_123b = geomSize( geomGetEdge( rx_fet over bkgnd ) -0.03 )
   rxfet_halo_in_123b = geomAndNot( rx_fet geomSize( rx_fet -0.02 ) )
   rxfet_corner_in_123b  = geomAndNot( rxfet_halo_in_123b rxfet_edge_in_123b )
   err123a_45out = geomButtOrOver( geomAndNot( gate grlogic ) geomSize( rxfet_45c_out_123a 0.02 ) )
   err123a_90in  = geomButtOrOver( geomAndNot( gate grlogic ) rxfet_90c_in_123a )
   err123a_90out = geomButtOrOver( geomAndNot( gate grlogic ) geomSize( rxfet_90c_out_123a 0.02 ) )
   err123b       = drc( geomAndNot( rxfet_corner_in_123b grlogic ) 0 < sep < 0.08 opposite )
   errorLayer( err123a_45out                     "GR123a: 45 degree outside (RX not covered by (PC not touching CA)) vertice under (PC not under GRLOGIC) found!")
   errorLayer( err123a_90in                      "GR123a: 90 degree inside (RX not covered by (PC not touching CA)) vertice under (PC not under GRLOGIC) found!")
   errorLayer( err123a_90out                     "GR123a: 90 degree outside (RX not covered by (PC not touching CA)) vertice under (PC not under GRLOGIC) found!")
   errorLayer( err123b                           "GR123b: Dist between inside corners of (RX under PC) >= 0.080 um.")

 ;Rule 125

   err125 = geomOverlap( pc geomOverlap( geomSize( geomGetEdge( gate ) 0.01 ) pc ) keep < 2 )

   ;err125 = geomOverlap( geomSize( gate 0.02 ) diff keep < 2 )
   errorLayer( err125                            "GR125: (PC over RX) dividing RX into less than 2 diffusions found!")

 ;Rule 130
   pc_outside_rx = geomOutside( pc rx )
   drc( pc_outside_rx rx sep < 0.08               "GR130b: (PC not intersecting RX) to RX >= 0.080 um.")

 ;Rule BB131
    nw_not_mosvar_grlogic = geomButtOrOver( geomAndNot( nw mosvar ) grlogic )
    errbb131 = geomButtOrOver( nw_not_mosvar_grlogic bb )
    errorLayer( errbb131                   "GRBB131: ((NW not over MOSVAR ) touching GRLOGIC) cannot touch a BB hole.")

 ;Rule 132
   pc_overlap_rx = geomOverlap( pc rx )
   drc( pc_overlap_rx area > 320.0                "GR132: (PC that intersects RX) area <= 320.000 sq.um.")


;CA CONTACT LAYOUT RULES

 ;Rule 200
   drc( ca width < 0.20                   "GR200: CA width and length == 0.200 um.(error <)")
   drc( ca area  > 0.04                   "GR200: CA width and length == 0.200 um.(error >)")

 ;Rule 201
   ca_all     = geomAndNot( geomOr( ca cabar) cab_ring )
   ca_polygon = geomGetPolygon( ca )
   ca_45      = geomGetAngledEdge( ca_all 0 < keep < 90 fig )
   errorLayer( ca_polygon                 "GR201: Non-rectangular CA found!")
   errorLayer( ca_45                      "GR201: 45 degree CA or CABAR found")

 if( !avSwitch( "DSRAM" ) then
 ;Rule 203
   drc( ca sep < 0.24                     "GR203a: CA space >= 0.240 um.")

 ;Rule 204 (STRADDLE CHECKED IN GR212)
   ;drc( rx_not_pc ca    enc < 0.10       "GR204: CA within RX(not over PC) >= 0.100 um.")
   drc( rx ca    enc < 0.10               "GR204: CA within RX >= 0.100 um.")
   drc( rx        cabar enc < 0.20        "GR204a: CABAR within RX >= 0.200 um.")

 ;Rule 207
   drc( ca_rx pc sep < 0.16               "GR207: CA(over RX) to adjacent PC >= 0.160 um.")
 );END OF NOT DSRAM

 ;Rule 208
   ca_pc  = geomAnd( ca pc )
   cab_pc = geomAnd( cabar pc )

 if( !avSwitch( "DSRAM" ) then
   drc( ca_pc  rx sep < 0.16              "GR208: CA(over PC) to adjacent RX >= 0.160 um.")
 );END OF NOT DSRAM

   drc( cab_pc rx sep < 0.20              "GR208a: CABAR(over PC) to adjacent RX >= 0.200 um.")

 if( !avSwitch( "DSRAM" ) then
 ;Rule 209 (STRADDLE CHECKED IN GR212)
   drc( pc ca    enc < 0.06               "GR209: CA within PC >= 0.060 um.")
 );END OF NOT DSRAM

   drc( pc cabar enc < 0.16               "GR209a: CABAR within PC >= 0.160 um.")
  ;drc( pd ca    enc < 0.24               "GR209d: CA within PD >= 0.240 um.")


 ;Rule 211
   err211pc = geomAnd( ca_all gate )
   errorLayer( err211pc                   "GR211: {CA,CABAR} over (PC over RX) found!")

 ;Rule 212
   err212 = geomAndNot( ca_all geomOr( rx pc ) )
   errorLayer( err212                     "GR212: {CA,CABAR} not over {RX or PC} found!")

 ;Rule 220
   err220       = geomWidth( cab_not_ring keep > 0.20 )
   drc( cab_not_ring width < 0.20         "GR220: CABAR width == 0.200 um.(error <)")
   errorLayer( err220                     "GR220: CABAR width == 0.200 um.(error >)")

  if( avSwitch( "GUARDEDGE_PRESENT" ) then
   ;Rule 221
     err221       = geomContactCheck( cab_not_ecm  length >= 0.60 width == 0.20 ignore )
     errorLayer( err221                             "GR221: CABAR not over (GUARDRNG or CRACKSTOP) length (min) >= 0.60 um.")
     errorLayer( geomGetNonRectangle( cab_not_ecm ) "GR221: Non-rectangular CABAR not over (GUARDRNG or CRACKSTOP) found!")

   ;Rule 222
     err222       = geomContactCheck( cab_not_ecm  length <= 5.00 width == 0.20 ignore )
     errorLayer( err222                             "GR222: CABAR not over (GUARDRNG or CRACKSTOP) length (max) <= 5.00 um.")

  );End GUARDEDGE_PRESENT=YES

  if( !avSwitch( "GUARDEDGE_PRESENT" ) then
   ;Rule LEG_221
     cabar_polygon = geomGetPolygon( cab_not_ring )
     drc( cabar area < 0.120              "GRLEG_221: CABAR length (min) >= 0.600 um.")
     errorLayer( cabar_polygon            "GRLEG_221: Non-rectangular CABAR found!")

   ;Rule LEG_222
     drc( cab_not_ring area > 1.00        "GRLEG_222: CABAR length (max) <= 5.000 um.")

  );End GUARDEDGE_PRESENT=NO

 ;Rule 223
   err223c = geomButtOrOver( ca cabar )
   drc(cabar        sep < 0.36            "GR223a: CABAR space >= 0.360 um.")
   drc(cabar        sep < 0.52  2.5 < app "GR223b: CABAR space (run > 2.5) >= 0.520 um.")
   drc(cabar ca 0 < sep < 0.28            "GR223c: CABAR to adjacent CA >= 0.280 um.")
   errorLayer( err223c                    "GR223c: CA touching CABAR found!")

 ;Rule 225
   cab_rx = geomAnd( cabar rx )
   drc(cab_rx pc    sep < 0.24            "GR225: CABAR(over RX) to adjacent PC >= 0.240 um.")

 if( avSwitch( "GUARDEDGE_PRESENT" ) then
   ;Rule 228
     err228 = geomOutside( cabar geomOr( pc_res rx_res grdr_or_crk ) )
     errorLayer( err228                   "GR228: CABAR outside of (Resistors/GUARDRNG/CRACKSTOP) found!")

  );End GUARDEDGE_PRESENT=YES

 if( !avSwitch( "GUARDEDGE_PRESENT" ) then
   ;Rule LEG_228
     err228 = geomOutside( cabar geomOr( chipring pc_res rx_res ) )
     errorLayer( err228                   "GRLEG_228: CABAR outside of (Resistors or Chip Guardring) found!")

  );End GUARDEDGE_PRESENT=NO


;N-WELL, JUNCTION LAYOUT RULES

 ;Rule 250
   nw_not_ortho = geomGetAngledEdge( nwgen 0 < keep < 90 fig )
   drc( nwgen width < 0.70                  "GR250: NW(drawn or generated) width >= 0.700 um.")
   errorLayer( nw_not_ortho                 "GR250a: Non-orthagonal NW shapes found!")

 ;Rule 252
  if( avSwitch("HIRESSUB") then
   err252a1 = drc( geomButtOrOver( nw_wellasp pi ) nw_wellasp sep < 1.28  withSingularPoint )
   errorLayer( err252a1   "GR252a1: ( NW touching PI) to NW space( same potential) >= 1.28um.")
   nw_tch_pi = geomOverlap( nw geomSize( pi 0.01 ))
   geomStamp( nw_tch_pi nw )
   err252a2 = geomOutside( drc( nw_tch_pi nw sep < 7.40 diffNet withSingularPoint ) wellasp )
   errorLayer( err252a2   "GR252a2: ( NW touching PI) to NW space( different potential) >= 7.40um.")
   else
   err252c   = geomAnd( rx drc( nw sep < 1.28 ) )
   errnwasp1 = geomStraddle( nw nwasp )
   drc( nw_adp        sep < 1.28             "GR252a: NW(not over NWASP) space >= 1.280 um.")
   drc( nw_adp nw_asp sep < 1.28             "GR252a: NW(not over NWASP) to NW(over NWASP) space >= 1.280 um.")
   drc( nw_asp        sep < 1.28 app <  0.70 "GR252b: NW(over NWASP) space (run  < 0.70) >= 1.280 um.")
   drc( nw_asp        sep < 0.84 app >= 0.70 "GR252b: NW(over NWASP) space (run >= 0.70) >= 0.840 um.")
   drc( nwgen       notch < 1.28 app <  0.70 "GR252b: NW notch (run  < 0.70) >= 1.280 um.")
   drc( nwgen       notch < 0.84 app >= 0.70 "GR252b: NW notch (run >= 0.70) >= 0.840 um.")
   errorLayer( err252c                       "GR252c: RX shape between (NW shapes < 1.28 um. apart) found!")
   errorLayer( errnwasp1                     "GRNWASP1: NW straddling NWASP found!")
  )
   pdiff_in_nw = geomOverlap( pdiff nw )
   nwfat_4000  = geomAnd( geomWidth( nw keep > 39.98 )  nw )
   nwfat_40u   = geomAnd( geomWidth( nw keep > 40.00 )  nw )

   pdiff_in_nw_fat = geomInside( pdiff_in_nw nwfat_40u )
 if( !avSwitch( "DSRAM" ) then
 ;Rule 260
   err260      = geomStraddle( pdiff_in_nw nw )
   drc( nw         pdiff_in_nw enc < 0.42    "GR260: (RX within BP) within NW >= 0.420 um.")
   errorLayer( err260                       "GR260: (RX within BP) straddling NW found!")
   nw_tch_nwfat = geomButtOrOver( nw nwfat_40u )
   err260a    =  geomAnd( drc( nw_tch_nwfat pdiff_in_nw  enc < 0.52 withSingularPoint ) nwfat_40u )
   errorLayer( err260a "GR260a: (RX within BP) within NW(>=40.0) >= 0.520 um." )


 );END OF NOT DSRAM

 ;Rule CP260
   ndiff_schky  = geomAnd( ndiff schky )
   ndiff_cp260c = geomAndNot( ndiff geomOr( bp geomAnd( schky nw ) ) )
   pdiff_sige   = geomOutside( geomOr( geomAnd( rx pd ) pdiff ) nw )
   drc( bb pdiff_sige enc < 1.28             "GRCP260: (RX(P+) not touching NW) must be within BB >= 1.280 um." )
   drc( bb ndiff_cp260c     enc < 1.28             "GRCP260c: RX N contact (RX not over (BP or (SCHKY over NW))) within BB (for junction isolation) >= 1.280 um." )
   lay_cp260d  = geomAndNot( ndiff_schky bp )
   drc( bb lay_cp260d       enc < 0.14             "GRCP260d: RX N contact ((RX over SCHKY) not over BP) within BB >= 0.140" )

 ;Rule 261
   pot261 = geomAnd( drc( nwcont nw ovlp < 0.46 figa ) nw )
   drc( nwcont nw ovlp < 0.28                "GR261f: RX(NWcont) overlap of NW >= 0.280 um.")

 ;Rule 262
   rx_over_rn   = geomAnd( rx rn )
   nwc_strad_nw = geomStraddle( nwcont nw )
   nwc_in_nw    = geomAndNot( nwcont nwc_strad_nw )
   nwc_butted   = geomButting( nwc_in_nw pdiff )
   nwc_in_nobut = geomAndNot( nwc_in_nw nwc_butted )
   nwc_262      = geomOr( geomAnd( nwc_strad_nw nw ) geomAnd( nwc_in_nobut nw ) )
   rxrn_bb      = geomAnd( rx_over_rn bb )
   drc( nwc_262 area < 0.15                  "GR262: RX(NWcont) overlap area with NW >= 0.150 sq.um.")
   drc( rxrn_bb area < 0.15                  "GR262b: (RX within RN) intersect area with BB >= 0.150 sq.um.")
   err262f      = drc( pot261  area < 0.24 )
   err261       = geomAnd( pot261 err262f )
   errorLayer( err262f                         "GR262f: RX(NWcont) overlap area with NW >= 0.240 sq.um.")
   errorLayer( err261                          "GR261: RX(NWcont) overlap of NW >= 0.460 um.")

 if( !avSwitch( "DSRAM" ) then
 ;Rule 265
   ndiff_265a   = geomOutside( ndiff nwfat_4000 )
   drc( ndiff nw                sep < 0.42 diffNet              "GR265: RX(outside BP) to adjacent NW (diff net) >= 0.420 um.")
   drc( ndiff_265a nwfat_4000   sep < 0.52                      "GR265a: RX(outside BP) to adjacent NW(>=40.0) >= 0.520 um.")
   drc( ndiff ns                sep < 2.32 diffNet              "GR265b: RX(outside BP) to adjacent NS (diff net) >= 2.320 um.")

 );END OF NOT DSRAM

 ;Rule CP265
   drc( rxnp_junction_cp265b  bb sep < 0.42 diffNet          "GRCP265b: ((RX outside BP) not over PD) to adj BB (diff net) >= 0.420 um.")

 ;Rule 266
   drc( sxcont nw sep < 0.08                 "GR266: (RX(in BP) outside NW) to adjacent NW >= 0.080 um.")

 ;Rule CP266
   drc( sxcont bb sep < 0.40                 "GRCP266c: (RX(in BP) no NW) to BB space >= 0.400 um.")

 ;Rule 268
   pdiff_in_nw_268 = geomInside( pdiff nw )
   nwc_over_nw = geomAnd( nwcont nw )
   nw_no_tw = geomAndNot( nw geomOverlap( nw pi))
 if( avSwitch("HIRESSUB") then
   sx_block    = geomOr( geomOr( geomOr( geomOr( geomOr( geomSize( geomSize( nw 0.62 ) -0.62 ) bb ) bfmoat ) ti ) btgen ) hrgen )
  else
   sx_block    = geomOr( geomSize( geomSize( nw 0.62 ) -0.62 ) bb bfmoat )
   )
   sx_no_block = geomAndNot( bkgnd sx_block )
   nwc_fet     = geomAndNot( geomButtOrOver( geomStraddle( ndiff nw ) pc ) nw )
   njct        = geomOr( geomOutside( geomButtOrOver( ndiff ca_all ) geomOr( nw bb bfmoat ) ) nwc_fet )
   njct_no_dg  = geomAndNot( njct dg )
   bbcont      = geomAndNot( geomAnd( rx geomAnd( rn bb ) ) nw )
   pdiff_in_bb = geomAnd( geomAnd( rx pd ) bb_not_nw )
   pdiff_bb268 = geomOutside( pdiff_in_bb ind_filt )

   sxpicont_268b    = geomAndNot( geomAndNot( geomAnd( rx geomAndNot( bp geomButtOrOver( bp bb ) ) ) nw ) pc )
   picont_268b      = geomAnd( sxpicont_268b pi)
   sxcont_268b      = geomAndNot( sxpicont_268b pi)
   njct_no_dg_in_pi = geomAnd( njct_no_dg pi)
   njct_no_dg_in_sx = geomAndNot( njct_no_dg pi)
   err268           = geomSepInside( pdiff_in_nw_268  53.0 nwc_over_nw nw )
   errorLayer( err268                       "GR268: RX(in BP) to RX(not BP) (in same NW) space <= 53.000 um.")

   sxc_corners  = geomGetCorner( sxcont angleAll )
   sxc_corners2 = geomGetCorner( sxcont_tw angleAll )
   sxc_crnr_sx  = geomAndNot( geomAndNot( sxcont sxc_corners ) pi)
   sxc_crnr_pi  = geomAnd( geomAndNot( sxcont_tw sxc_corners2 ) pi)
   sxc_x5300    = geomSizeAndNot( sxc_crnr_sx sx_block 0.10 53.0 )
   pic_x5300    = geomSizeAndNot( sxc_crnr_pi sx_block 0.10 53.0 )
  ;err268b_sx   = geomAndNot( njct_no_dg_in_sx sxc_x5300 )
   err268b_sx   = geomAndNot( geomAvoiding( njct_no_dg_in_sx crackstop ) sxc_x5300 )
   err268b_pi   = geomAndNot( njct_no_dg_in_pi pic_x5300 )
   err268b      = geomOr( err268b_sx err268b_pi)

  if( avSwitch("HIRESSUB") then
   errorLayer( err268b                          "GR268b_HR: RX(N+ Jct) to Substrate Contact space <= 53.000 um.")
  else
   errorLayer( err268b                          "GR268b: RX(N+ Jct) to Substrate Contact space <= 53.000 um.")
   )
   errbb268     = geomSepInside( pdiff_bb268 53.0 bbcont bb_not_nw )
   errorLayer( errbb268                        "GRBB268: (RX over PD) to RX(not PD) (same BB) space <= 53.000 um.")

   err268g1 = geomOutside( geomAndNot( geomHoles( nw ) nw ) geomOr( sxcont sxcont_tw))
   err268g2 = geomOutside( geomAndNot( geomAndNot( geomHoles( bb ) bb ) nw ) geomOr( sxcont sxcont_tw) )
   err268g3 = geomOutside( geomAndNot( geomHoles( bfgen ) bfgen ) geomOr( sxcont sxcont_tw) )
   err268g4 = geomOutside( geomAndNot( geomHoles( bfmoat ) bfmoat ) geomOr( sxcont sxcont_tw))
  if( avSwitch("HIRESSUB") then
   err268g5 = geomOutside( geomAndNot( geomHoles( btgen ) btgen ) geomOr( sxcont sxcont_tw))
   err268g6 = geomOutside( geomAndNot( geomHoles( hrgen ) hrgen ) geomOr( sxcont sxcont_tw))
  )
  if( avSwitch("HIRESSUB") then
   errorLayer( err268g1                     "GR268g_HR: NW(hole) without a substrate contact found!")
   errorLayer( err268g2                     "GR268g_HR: BB(hole) without a substrate contact found!")
   errorLayer( err268g3                     "GR268g_HR: BF(hole) without a substrate contact found!(generated BF)")
   errorLayer( err268g4                     "GR268g_HR: BFMOAT(hole) without a substrate contact found!")
   errorLayer( err268g5                     "GR268g_HR: BT(hole) without a substrate contact found!(generated BT)")
   errorLayer( err268g6                     "GR268g_HR: HR(hole) without a substrate contact found!(generated HR)")
  else
   errorLayer( err268g1                     "GR268g: NW(hole) without a substrate contact found!")
   errorLayer( err268g2                     "GR268g: BB(hole) without a substrate contact found!")
   errorLayer( err268g3                     "GR268g: BF(hole) without a substrate contact found!(generated BF)")
   errorLayer( err268g4                     "GR268g: BFMOAT(hole) without a substrate contact found!")
  )
 ;Rule 269
   gate269 = geomAnd( pc nwcont )
   err269  = geomStraddle( gate269 nw )
   nw_269a=geomAndNot(nw grlogic)
   drc( gate269 nw     sep < 0.70            "GR269: (PC over RX (where RX Straddles NW)) to NW space >= 0.700 um.")
   errorLayer( err269                        "GR269: (PC over RX (where RX Straddles NW)) straddling NW found!")
   drc( nwcont nw_269a 0 < enc < 0.70 "GR269a: RX(NWcont) overlap past (NW not over GRLOGIC ) >= 0.700 um.")

if( avSwitch("HIRESSUB") then
 ;Rule NW4
   errnw4 = drc( nw_wellasp bb_wellasp 0 < sep < 1.76  shielded withSingularPoint )
   errorLayer( errnw4       "GRNW4_HR: NW to BB ( same potential) >= 1.76um.")
   errnw4bhr = geomOutside( drc( nw bb 0 < sep < 7.20 shielded withSingularPoint diffNet ) wellasp )
   errorLayer( errnw4bhr    "GRNW4b_HR: NW to BB( different potentials ) >=7.20um.")

 ;Rule NW8
   bb_hole = geomHoles( bb innermost )
   nw_butt_bb = geomOverlap( nw geomSize( geomGetEdge( nw butting bb ) -0.02 ) )
   errnw8 = geomXor( geomOverlap( bb_hole nw_butt_bb ) nw_butt_bb )
   errorLayer( errnw8                       "GRNW8: NW shape abutting BB must be completely bordered by a BB ring")
 else
   nw_mosvar     = geomAnd( nw mosvar )
   nw_not_mosvar = geomAndNot( nw nw_mosvar )
   nw_not_schky  = geomAndNot( nw schky )
   errnw4        = geomAnd( nw_not_schky bb )
   drc( nw           bb  0 < sep < 1.76     "GRNW4: NW to adjacent BB >= 1.760 um.")
   errorLayer( errnw4                       "GRNW4: (NW not over SCHKY) overlapping BB found!")
   )

;VTSENS RULES
 ;Rule VTSENS00
   errvts00 = geomStraddle( gate vtsens )
   errorLayer( errvts00                   "GRVTSENS00: (PC over RX) straddling VTSENS found!")

 ;Rule VTSENS01
   ngate_vts = geomAnd( ngate vtsens )
 if( avSwitch("HIRESSUB") then
   drc( ngate_vts bb     sep < 3.00 withSingularPoint "GRVTSENSE01_HR: ((PC over RX) over VTSENS) to BB space >= 3.00 um.")
   drc( ngate_vts bfmoat sep < 3.00 withSingularPoint "GRVTSENSE01_HR: ((PC over RX) over VTSENS) to BFMOAT space >= 3.00 um.")
   drc( ngate_vts mosvar sep < 3.00 withSingularPoint "GRVTSENSE01_HR: ((PC over RX) over VTSENS) to MOSVAR space >= 3.00 um.")
   drc( ngate_vts nw     sep < 3.00 withSingularPoint "GRVTSENSE01_HR: ((PC over RX) over VTSENS) to NW space >= 3.00 um.")
   drc( ngate_vts zerovt sep < 3.00 withSingularPoint "GRVTSENSE01_HR: ((PC over RX) over VTSENS) to ZEROVT space >= 3.00 um.")
   drc( ngate_vts nohr sep < 3.00   withSingularPoint "GRVTSENSE01_HR: ((PC over RX) over VTSENS) to NOHR space >= 3.00 um.")
  else
   drc( ngate_vts bb     sep < 3.00 withSingularPoint  "GRVTSENS01: ((PC over RX) over VTSENS) to BB space >= 3.00 um.")
   drc( ngate_vts bfmoat sep < 3.00 withSingularPoint  "GRVTSENS01: ((PC over RX) over VTSENS) to BFMOAT space >= 3.00 um.")
   drc( ngate_vts mosvar sep < 3.00 withSingularPoint  "GRVTSENS01: ((PC over RX) over VTSENS) to MOSVAR space >= 3.00 um.")
   drc( ngate_vts nw     sep < 3.00 withSingularPoint  "GRVTSENS01: ((PC over RX) over VTSENS) to NW space >= 3.00 um.")
   drc( ngate_vts zerovt sep < 3.00 withSingularPoint  "GRVTSENS01: ((PC over RX) over VTSENS) to ZEROVT space >= 3.00 um.")
   )

 ;Rule VTSENS02 [((PC over RX) over BP) straddling NW covered by GR260]
   pgate_vts      = geomAnd( pgate vtsens )
   pgvts_strad_pi = geomStraddle( pgate_vts pi )
   drc( nw pgate_vts enc < 2.30            "GRVTSENS02: (((PC over RX) over BP) over VTSENS) within NW >= 2.30 um.")
   drc( pi pgate_vts enc < 2.30            "GRVTSENS02: (((PC over RX) over BP) over VTSENS) within PI >= 2.30 um.")
   errorLayer( pgvts_strad_pi             "GRVTSENS02: (((PC over RX) over BP) over VTSENS) straddling PI found!")

; Rules for High Vt FET

; High-Vt Device Layout Rules
; High-Vt NFET (NR)
; Rule 290
   drc( nr width < 0.64 "GR290: NR width >= 0.640 um.")

; Rule 291
   err291 = geomGetAngledEdge( nr 0 < keep < 90 fig )
   errorLayer( err291 "GR291: Non-orthogonal NR shape found!")

; Rule 292
   drc( nr   sep < 0.54 "GR292: NR to NR  space >= 0.540 um.")
   drc( nr   notch < 0.54 "GR292: NR to NR  notch >= 0.540 um.")

; Rule 294a
   pcInterRx = geomAnd( pc rx)
   pcInterRxNotWithinNw = geomAndNot( pcInterRx nw)
   err294a = drc( pcInterRxNotWithinNw nr sep < 0.260 "GR294a: [(PC intersect RX) not within NW] to NR  space >= 0.260 um." )
   drc( pcInterRxNotWithinNw nr sep < 0.260 "GR294a: [(PC intersect RX) not within NW] to NR  space >= 0.260 um." )

; Rule 294aR
   ;err294aR = drc( pcInterRxNotWithinNw nr 0 < sep < 0.480 )
   ;err294aR = geomAndNot( err294aR  err294a )
   ;errorLayer( err294aR "GR294aR: [(PC intersect RX) not within NW] to NR  space >= 0.480 um." )

; Rule 294b
   pcInterRxNotWithinNw_strad_nr = geomStraddle( pcInterRxNotWithinNw nr )
   err294b = drc( nr pcInterRxNotWithinNw enc < 0.26 "GR294b: [(PC intersect RX) not within NW] within NR >= 0.260 um.")
   drc( nr pcInterRxNotWithinNw enc < 0.26 "GR294b: [(PC intersect RX) not within NW] within NR >= 0.260 um.")
   errorLayer( pcInterRxNotWithinNw_strad_nr "GR294b: [(PC intersect RX) not within NW] straddling NR found!")

; Rule 294bR
   ;err294bR = drc( nr pcInterRxNotWithinNw enc < 0.44)
   ;err294bR = geomAndNot( err294bR  err294b ) ; remove previous err294b
   ;errorLayer( err294bR "GR294bR: [(PC intersect RX) not within NW] within NR >= 0.440 um.")

; Rule 299b
   drc( nr nw enc < 1.40 "GR299b: NR overlap past NW >= 1.400 um.")

; Rule NR10
   errnr10=geomButtOrOver( nr geomOr( bb mosvar pd di))
   errorLayer( errnr10 "GRNR10: NR touching (BB, MOSVAR, PD, DI) found!")

; Rule NR11
   drc( nr zerovt 0 < sep < 1.400 "GRNR11 : NR to ZEROVT >= 1.400 um.")
   errnr11touch = geomButtOrOver( nr zerovt )
   errorLayer( errnr11touch "GRNR11: NR touching ZEROVT found!")

; Rule NR12
   drc( nr pcfuse 0 < sep < 1.400 "GRNR12 : NR to PCFUSE >= 1.400 um.")
   errnr12touch = geomButtOrOver( nr pcfuse )
   errorLayer( errnr12touch "GRNR12: NR touching PCFUSE found!")

; Rule NR13
   pc_over_rx_nr13= geomAnd( pc rx)
   errnr13 = geomAvoiding( nr pc_over_rx_nr13 )
   errorLayer( errnr13 "GRNR13: NR not touching (PC over RX) found!")

; High-Vt NFET (PR)
; Rule LW00
   drc( pr width < 0.64 "GRLW00: PR width >= 0.640 um.")

; Rule LW01
   errlw01 = geomGetAngledEdge( pr 0 < keep < 90 fig )
   errorLayer( errlw01 "GRLW01: Non-orthogonal PR shape found!")

; Rule LW02
   drc( pr  sepNotch < 0.54 "GRLW02: PR to PR  space >= 0.540 um.")

; Rule LW04a
   pcInterRx = geomAnd( pc rx)
   pcInterRxWithinNw = geomAnd( pcInterRx nw)
   errlw04a = drc( pcInterRxWithinNw pr sep < 0.260 "GRLW04a: [(PC intersect RX) within NW] to PR  space >= 0.260 um." )
   drc( pcInterRxWithinNw pr sep < 0.260 "GRLW04a: [(PC intersect RX) within NW] to PR  space >= 0.260 um." )

; Rule LW04aR
   ;errlw04aR = drc( pcInterRxWithinNw pr sep < 0.480 )
   ;errlw04aR = geomAndNot( errlw04aR  errlw04a )
   ;errorLayer( errlw04aR "GRLW04aR: [(PC intersect RX) within NW] to PR  space >= 0.480 um." )

; Rule LW04b
   pcInterRxWithinNw_strad_pr = geomStraddle( pcInterRxWithinNw pr )
   errlw04b = drc( pr pcInterRxWithinNw enc < 0.26 "GRLW04b: [(PC intersect RX) within NW] within PR >= 0.260 um.")
   drc( pr pcInterRxWithinNw enc < 0.26 "GRLW04b: [(PC intersect RX) within NW] within PR >= 0.260 um.")
   errorLayer( pcInterRxWithinNw_strad_pr "GRLW04b: [(PC intersect RX) within NW] straddling PR found!")

; Rule LW04bR
   ;errlw04bR = drc( pr pcInterRxWithinNw enc < 0.44)
   ;errlw04bR = geomAndNot( errlw04bR  errlw04b )  ; remove previous errlw04b
   ;errorLayer( errlw04bR "GRLW04bR: [(PC intersect RX) within NW] within PR >= 0.440 um.")

; Rule LW09
   drc( nw pr ovlp < 0.86 "GRLW09: PR overlap past NW >= 0.860 um.")

; Rule LW10
   errlw10=geomButtOrOver( pr geomOr( bb mosvar pd di))
   errorLayer( errlw10 "GRLW10: PR touching (BB, MOSVAR, PD, DI) found!")

; Rule LW11
   drc( pr zerovt 0 < sep < 1.400 "GRLW11 : PR to ZEROVT >= 1.400 um.")
   errlw11touch = geomButtOrOver( pr zerovt )
   errorLayer( errlw11touch "GRLW11: PR touching ZEROVT found!")

; Rule LW12
   drc( pr pcfuse 0 < sep < 1.400 "GRLW12 : PR to PCFUSE >= 1.400 um.")
   errlw12touch = geomButtOrOver( pr pcfuse )
   errorLayer( errlw12touch "GRLW12: PR touching PCFUSE found!")

; Rule LW13
   pc_over_rx_lw13= geomAnd( pc rx)
   errlw13 = geomAvoiding( pr pc_over_rx_lw13 )
   errorLayer( errlw13 "GRLW13: PR not touching (PC over RX) found!")

; End of rules for High Vt FET


;BP LAYOUT RULES
 ;NOTE: MANY RULES ARE CHECKED WITH THE GENERATED BP INCLUDED WITH THE DRAWN BP.
   nd_butt   = geomButting( geomAndNot( ndiff pc ) pdiff )
   pd_butt   = geomButting( geomAndNot( pdiff pc ) ndiff )

 ;Rule 350
  if( avSwitch("HIRESSUB") then
   drc( geomOr( bp bpgen ) width < 0.34 withCornerTouch                 "GR350: BP width >= 0.340 um.")
  else
   drc( geomOr( bpgen bp ) width < 0.34 withCornerTouch "GR350: BP width >= 0.340 um.")
  )

 ;Rule 351
  if( avSwitch("HIRESSUB") then
   bp_not_ring  = geomAndNot( geomOr( bpgen bp ) bp_ring )
   bp_enclosure = geomAndNot( geomHoles( bp_not_ring ) bp_not_ring )
   drc( bpgen area < 0.387              "GR351a: BP area >= 0.387 sq.um.")
   drc( bp_enclosure area < 0.387       "GR351b: BP enclosed area >= 0.387 sq.um.")
  else
   bp_not_ring  = geomAndNot( geomOr( bpgen bp ) bp_ring )
   bp_enclosure = geomAndNot( geomHoles( bp_not_ring ) bp_not_ring )
   drc( geomOr( bp bpgen ) area < 0.387    "GR351a: BP area >= 0.387 sq.um.")
   drc( bp_enclosure area < 0.387          "GR351b: BP enclosed area >= 0.387 sq.um.")
  )

 ;Rule 352
  if( avSwitch("HIRESSUB") then
   drc( geomOr( bpgen bp ) sepNotch < 0.34 withSingularPoint    "GR352: BP space >= 0.340 um.")
  else
   drc( geomOr( bpgen bp ) sepNotch < 0.34 withSingularPoint    "GR352: BP space >= 0.340 um.")
  )

 ;Rule 353
   rx_pd       = geomAnd( rx pd )
   rx_bp       = geomButtOrOver( rx bp )
   rx_bp_nw    = geomOverlap( rx_bp nw )
   rx_jct_side = geomStraddle( geomAndNot( geomStraddle( rx bp ) pc ) bp )
   err353_enc  = geomAndNot( drc( bp rx_bp_nw 0 < enc < 0.14 ) rx_jct_side )
   err353_encbb = geomAndNot( drc( bb rx_bp_nw 0 < enc < 0.14 ) rx_jct_side )
   err353_coin = geomSize( geomGetEdge( rx_bp_nw coincident bp ) 0.01 )
   err353_coinbb = geomSize( geomGetEdge( rx_bp_nw coincident bb ) 0.01 )
;  err353b     = geomStraddle( rx_pd bb )
   errorLayer( err353_enc                 "GR353: ((RX over BP) over NW) within BP >= 0.140 um.")
   errorLayer( err353_coin                "GR353: ((RX over BP) over NW) within BP (coincident) >= 0.140 um.")
  ; errorLayer( err353_encbb               "GR353: ((RX over BP) over NW) within BB >= 0.140 um.")
  ; errorLayer( err353_coinbb              "GR353: ((RX over BP) over NW) within BB (coincident) >= 0.140 um.")

  ;drc( bb rx_pd    enc < 0.14             "GR353b: (RX over PD) within BB >= 0.140 um.")
  ;errorLayer( err353b                    "GR353b: (RX over PD) straddling BB found!")

 ;Rule 354
   nw_x042  = geomSize( nw 0.42 )
   sxc_354b = geomAnd( geomAndNot( sxcont pd_butt ) nw_x042 )
   err354a  = geomAndNot( geomStraddle( geomOutside( geomAndNot( geomOverlap( rx bp ) nw_x042 ) gate ) bp ) grlogic )
   errorLayer( err354a                    "GR354a: ((RX(sub cont) not GRLOGIC) not (NW +0.42)) within BP >= 0.000 um.")
   drc( bp sxc_354b enc < 0.14             "GR354b: (RX(sub cont) over (NW +0.42)) within BP >= 0.140 um.")


   rx_nd_side = geomAndNot( geomAndNot( geomAndNot( ndiff nw ) pc ) rx_jct_side )
   err355_0   = geomButtOrOver( rx_nd_side geomSize( bp 0.001 ) )
   err355_1   = geomAndNot( drc( rx_nd_side bp     sep < 0.14 ) dsram )
   errorLayer( geomOr( err355_0 err355_1 ) "GR355: (RX(not over BP)not over NW) to BP space >= 0.140 um.")

 ;Rule 356
   nw_e042        = geomSize( nw -0.42 )
   nwc_not_nwe042 = geomAndNot( geomAndNot( nwcont nd_butt ) nw_e042 )
   drc( nwc_not_nwe042 bp sep < 0.14       "GR356b: (RX(nw cont) not over (NW -0.42)) to adj BP >= 0.140 um.")

 ;Rule 357
   drc( geomOr( bhgen bh ) nw sep < 0.44  shielded "GR357: Layout will cause: BH to NW space >= 0.440 um.")
   drc( geomOr( bhgen bh ) bb sep < 0.44 withSingularPoint "GR357: Layout will cause: BH to BB space >= 0.440 um.")
   drc( geomOr( bhgen bh ) mosvar sep < 0.44 withSingularPoint "GR357: Layout will cause: BH to MOSVAR space >= 0.440 um.")
   drc( geomOr( bhgen bh ) width < 0.44 withCornerTouch "GR357a: Layout will cause: BH width >= 0.440 um.")
   drc( geomOr( bhgen bh ) sepNotch < 0.44 withSingularPoint "GR357b: Layout will cause: BH space >= 0.440 um.")

 ;Rule 358
   bp_out_bb  = geomOutside( bp bb )
   drc( bp_out_bb pd sep < 0.34 shielded withSingularPoint      "GR358b: BP to PD space >= 0.340 um.")
   drc( geomOr( bngen bn) pd sep < 0.34 shielded withSingularPoint "GR358c: Layout will cause: BN to PD space >= 0.340 um.")
   drc( geomOr( phgen ph) width < 0.44 withCornerTouch          "GR358d: Layout will cause: PH width >= 0.440 um.")
   drc( geomOr( bngen bn) width < 0.34 withCornerTouch          "GR358e: Layout will cause: BN width >= 0.340 um.")
   drc( geomOr( bngen bn) sepNotch < 0.34 withSingularPoint     "GR358f: Layout will cause: BN space >= 0.340 um.")

  if( avSwitch("HIRESSUB") then
   bfg_spa_err = drc( geomOr( bf bfgen ) sepNotch < 1.00 withSingularPoint )
   err358h = geomAndNot( bfg_spa_err geomOr( nw nwasp grlogic))
   drc( bfgen   width < 0.98 withCornerTouch                    "GR358g: Layout will cause: BF width >= 0.980 um.")
   drc( bf      width < 0.98 withCornerTouch                    "GR358g: Layout will cause: BFGEN width >= 0.980 um.")
   drc( bfgen sepNotch < 1.00 withSingularPoint                 "GR358h1: Layout will cause: BF space >= 1.00um.")
   drc( nohr bfgen enc < 10.00 withSingularPoint                "GR358h2: BF within NOHR >= 10.00um.")
   errorLayer( err358h                                          "GR358h: Layout will cause: BF space (not over (GRLOGIC or NW or NWASP)) >= 1.000 um.")
  else
   excl_358h = geomOr( nw nwasp grlogic)
   err358h_bf = drc( bf sepNotch < 1.00 withSingularPoint  )
   err358h_bfgen = drc( bfgen sepNotch < 1.00 withSingularPoint  )
   drc( bf width < 0.98 withCornerTouch                         "GR358g: Layout will cause: BF width >= 0.980 um.")
   drc( bfgen width < 0.98 withCornerTouch                      "GR358g: Layout will cause: BF width >= 0.980 um.")
   errorLayer( geomAndNot( err358h_bf excl_358h )               "GR358h: Layout will cause: BF space (not over (GRLOGIC or NW or NWASP)) >= 1.000 um.")
   errorLayer( geomAndNot( err358h_bfgen excl_358h )            "GR358h: Layout will cause: BF space (not over (GRLOGIC or NW or NWASP)) >= 1.000 um.")
  )
   drc( geomOr( phgen ph) sepNotch < 0.44  withSingularPoint    "GR358i: Layout will cause: PH space >= 0.440 um.")
   drc( geomOr( degen de) width < 0.44     withCornerTouch      "GR358j: Layout will cause: DE width >= 0.440 um.")
   drc( geomOr( degen de) sepNotch < 0.44  withSingularPoint    "GR358k: Layout will cause: DE space >= 0.440 um.")
   drc( geomOr( dfgen df) width < 0.44     withCornerTouch      "GR358m: Layout will cause: DF width >= 0.440 um.")
   drc( geomOr( dfgen df) sepNotch < 0.44  withSingularPoint    "GR358n: Layout will cause: DF space >= 0.440 um.")

 if( avSwitch("HIRESSUB")       then
 ;Rule BF11
   drc( nixbf width < 1.00  withCornerTouch             "GRBF11: NIXBF width >= 1.000 um.")

 ;Rule BF12
   drc( nixbf sepNotch < 0.98 withSingularPoint         "GRBF12: NIXBF space/notch >= 0.98 um.")

 ;Rule BF13
   errBF13 = geomAnd( nohr nixbf )
   drc( nixbf nohr sep < 0.98 withSingularPoint         "GRBF13: NIXBF minimum space to nohr >= 0.98um.")
   errorLayer(errBF13                                   "GRBF13: NIXBF touching nohr found!. ")

 ;Rule BF21
   drc( bfcus width < 0.98 withCornerTouch              "GRBF21: BFCUS width >= 0.980 um.")

 ;Rule BF22
   drc( bfcus sepNotch < 1.00 withSingularPoint         "GRBF22: BFCUS space/notch >= 1.00 um.")

 ;Rule BF23
   errbf23 = geomAndNot( bfcus nohr )
   drc( nohr bfcus enc < 10.00 withSingularPoint        "GRBF23: BFCUS must be within nohr >= 10.000 um.")
   errorLayer( errbf23                                  "GRBF23: BFCUS without nohr found!!")

 ;Rule BF24
   drc( bfgen        area < 2.10                       "GRBF24: BF area >= 2.10 sq.um.")

 ;Rule BF25
   bf_enclosure = geomAndNot( geomHoles( bfgen ) bfgen )
   drc( bf_enclosure area < 2.10                       "GRBF25: BF enclosed area >= 2.10 sq.um.")
 )

 if( !avSwitch( "DSRAM" ) then
 ;Rule 370
   ngate_mosvar = geomAnd( ngate mosvar)
   err370    = geomOutside( drc( ngate bp 0 < sep < 0.36 ) rx_jct_side )
   err370end = geomOverlap( geomSize( geomGetEdge( geomAndNot( ndiff nw ) over pc ) 0.23 ) bp )
   err370_1 = geomButtOrOver( bp ngate_mosvar)
   err370_2 = geomAndNot( err370 err370_1)
   err370end_2 = geomAndNot( err370end err370_1)
   err370b   = geomButtOrOver( gate pd )
   errorLayer( err370_2                   "GR370: (PC over RX) to BP space >= 0.360 um.")
   errorLayer( err370end_2                "GR370: (PC over RX) to BP space (gate end)>= 0.360 um.")
   drc( gate  bb     sep < 0.50            "GR370a: (PC over RX) to BB space >= 0.500 um.")
   drc( gate  pd 0 < sep < 0.50            "GR370b: (PC over RX) to PD >= 0.500 um.")
   errorLayer( err370b                    "GR370b: (PC over RX) touching PD found!")
 );END OF NOT DSRAM


 ;Rule 371
   err371 = geomStraddle( gate bp )
   drc( bp gate  enc < 0.36                "GR371: (PC over RX) within BP >= 0.360 um.")
   errorLayer( err371                     "GR371: (PC over RX) straddling BP found!")

 ;Rule BP3
   errbp3 = geomButtOrOver( bp bb )
   errorLayer( errbp3                     "GRBP3: BP touching BB found!")

;BUTTED JUNCTION RULES
 ;Rule 372
   rx_butted = geomButtOrOver( rx geomOr( nd_butt pd_butt ) )
   rx_btd_sx = geomAndNot( rx_butted nw )
   drc( bp rx_btd_sx 0 < ovlp < 0.22       "GR372: (BP overlap of RX) not over NW >= 0.220 um.")
   drc( sxcont           area < 0.147      "GR372a: Substrate contact area >= 0.147 sq.um.")

 ;Rule 373
   rx_btd_nw = geomAnd( rx_butted nw )
   drc( rx_btd_nw  bp  enc < 0.22          "GR373: (RX overlap past BP) over NW  >= 0.220 um.")
   drc( nwc_butted    area < 0.147         "GR373a: Well contact area >= 0.147 sq.um.")

 ;Rule 374
   err374 = geomStraddle( nd_butt nw )
   drc( nw nd_butt enc < 0.12              "GR374: RX within NW (butted n-well cont) >= 0.120 um.")
   errorLayer( err374                     "GR374: RX straddling NW (butted n-well cont) found!")

 ;Rule 378
   ngate_btd = geomAnd( ngate geomButting( ndiff pdiff ) )
   drc( pdiff ngate_btd sep < 0.28         "GR378: (BP inter RX) to adj ((PC intersect RX) not in BP) >= 0.280 um.")

 ;Rule 379
   pgate_btd = geomAnd( pgate geomButting( pdiff ndiff ) )
   drc( ndiff pgate_btd sep < 0.28         "GR379: (BP inter RX) overlap past ((PC intersect RX) in BP) >= 0.280 um.")


;DI DIODE RULES
 ;Rule 380
   bp_di      = geomButtOrOver( bp di )
   nw_di      = geomButtOrOver( nw di )
   err380     = geomAndNot( geomSize( bp_di -0.04 ) di )
   err380_1   = geomAndNot( di bp )
   err380a    = geomButtOrOver( nw_di jd )
   err380c_bb = geomButtOrOver( nw_di bb )
   err380c_pi = geomButtOrOver( nw_di pi )
   err380d_rp = geomButtOrOver( nw_di rp )
   err380d_rr = geomButtOrOver( nw_di rr )
   err380e_dg = geomButtOrOver( nw_di dg )
   err380e_op = geomButtOrOver( nw_di op )
   err380e_pc = geomButtOrOver( nw_di pc )
   err380g    = geomButtOrOver( geomButtOrOver( bp di ) pd )
   drc( bp    di     enc < 0.04            "GR380: DI must be within BP == 0.040 um. (error <)")
   errorLayer( err380                     "GR380: DI must be within BP == 0.040 um. (error >)")
   errorLayer( err380_1                   "GR380: DI outside of BP found.")
   drc( nw_di jd 0 < sep < 5.00            "GR380a: NW(touching DI) to JD space >= 5.000 um.")
   errorLayer( err380a                    "GR380a: NW(touching DI) touching JD found!")
   errorLayer( err380c_bb                 "GR380c: NW(touching DI) touching BB found!")
   errorLayer( err380c_pi                 "GR380c: NW(touching DI) touching PI found!")
   drc( nw_di rp 0 < sep < 2.50            "GR380d: NW(touching DI) to RP space >= 2.500 um.")
   drc( nw_di rr 0 < sep < 2.50            "GR380d: NW(touching DI) to RR space >= 2.500 um.")
   errorLayer( err380d_rp                 "GR380d: NW(touching DI) touching RP found!")
   errorLayer( err380d_rr                 "GR380d: NW(touching DI) touching RR found!")
   errorLayer( err380e_dg                 "GR380e: NW(touching DI) touching DG found!")
   errorLayer( err380e_op                 "GR380e: NW(touching DI) touching OP found!")
   errorLayer( err380e_pc                 "GR380e: NW(touching DI) touching PC found!")
   errorLayer( err380g                    "GR380g: BP(touching DI) touching PD found!")

 ;Rule 381
   rx_di       = geomButtOrOver( rx di )
   rx_strad_di = geomStraddle( rx di )
   err381b     = geomAndNot( geomSize( di -0.34 ) rx_di )
   drc( di rx         enc < 0.10           "GR381: RX within DI >= 0.100 um.")
   errorLayer( rx_strad_di                "GR381: RX straddling DI found!")
   errorLayer( err381b                    "GR381b: RX within DI <= 0.340 um.")

 ;Rule 382
   nwc_encl  = geomAndNot( geomHoles( nwcont ) nwcont )
   die_x055  = geomSize( geomGetEdge( di over bkgnd ) 0.55 )
  ;err382    = geomInside( di geomAvoiding( geomSize( di 0.54 ) nwcont ) )
   err382    = geomOutside( die_x055 nwcont )
   err382rng = geomAndNot( di nwc_encl )
   errorLayer( err382                     "GR382b: RX(NWcont) to DI space <= 0.540 um.")
   errorLayer( err382rng                  "GR382b: DI not within an RX(NWcont) hole found!")

 ;Rule 383
   err383 = geomAndNot( di geomEnclose( di rx ) )
   errorLayer( err383                     "GR383: DI not enclosing an RX shape found!")

 ;Rule 385
   rxdi_not_grl = geomAndNot( rx_di grlogic )
   err385a       = geomWidth( rxdi_not_grl keep > 2.00 )
   drc( rx_di width < 1.00                 "GR385: RX width (min) (when RX touches DI) >= 1.000 um.")
   errorLayer( err385a                    "GR385a: RX(not GRLOGIC) width (max) (when RX touches DI) <= 2.000 um.")

 ;Rule 387
   err387       = geomAndNot( rx_di nw )
   nw_387b      = geomSize( geomGetEdge( geomSize( geomButtOrOver( nw di ) 0.36 ) ) -0.01 )
   rx_387b      = geomAndNot( geomAnd( geomAvoiding( geomButtOrOver( rx ca ) pc ) bp ) geomOr( nw bb ) )
   err387b      = geomAndNot( nw_387b rx_387b )
   errorLayer( err387                     "GR387: RX(touching DI) not within NW found!")
   errorLayer( err387b                    "GR387b: ((NW(touching DI) expanded by 0.36um) edges) must be covered by ((((RX touching CA) not touching PC) over BP) not over (NW or BB))!")

 ;Rule 388
   nwc_di  = geomAnd( nwcont nw_di )
   drc( nwc_di bp sep < 0.14               "GR388: (RX(NWcont) over NW(touching DI)) to BP space >= 0.140 um.")

 ;Rule 389 (STRADDLE COVERED BY 354a)
   nwdi_x100      = geomSize( nw_di 1.00 )
   sxc_over_nwdix = geomAnd( sxcont nwdi_x100 )
   drc( bp sxc_over_nwdix enc < 0.14       "GR389: (RX(sxcont) over (NW(touch DI) +1.0)) within BP >= 0.140 um.")

;DIPI DIODE LAYOUT RULES
 ;Rule DIPI00
   dipi_sized  = geomSize( dipi 0.04 )
   okdipi00    = geomButtOnly( dipi_sized bp )
   errdipi00_0 = geomSize( geomAndNot( dipi_sized okdipi00 ) 0.04 )
   errdipi00_1 = geomButtOrOver( dipi bp )
   errorLayer( geomOr( errdipi00_0 errdipi00_1 ) "GRDIPI00: DIPI must be exact space to BP, with touching prohibited == 0.04 um." )

 ;Rule DIPI00a
   pi_touch_dipi = geomButtOrOver( pi geomSize( dipi 0.001 ) )
   errdipi00a_0  = drc( pi_touch_dipi jd sep < 1.00 )
   errdipi00a_1  = geomButtOrOver( pi_touch_dipi geomSize( jd 0.001 ) )
   errorLayer( geomOr( errdipi00a_0 errdipi00a_1 ) "GRDIPI00a: (PI touching DIPI) to JD (((PI touching DIPI) touching JD) prohibited) >= 1.00 um." )

 ;Rule DIPI00c
   errdipi00c = geomAndNot( dipi pi )
   errorLayer( errdipi00c "GRDIPI00c: DIPI must be covered by PI" )

 ;Rule DIPI00d
   rr_rp        = geomOr( rr rp )
   errdipi00d_0 = drc( pi_touch_dipi rr_rp sep < 2.50 )
   errdipi00d_1 = geomButtOrOver( pi_touch_dipi geomSize( rr_rp 0.001 ) )
   errorLayer( geomOr( errdipi00d_0 errdipi00d_1 ) "GRDIPI00d: (PI touching DIPI) minimum space to (RR or RP). (PI touching DIPI) touching (RR or RP) is prohibited.>= 2.50 um." )

 ;Rule DIPI00e
   errdipi00e = geomButtOrOver( dipi geomSize( geomOr( nw bp pc op bb pd mosvar nr pr dg tg zerovt ) 0.001 ) )
   errorLayer( errdipi00e "GRDIPI00e: DIPI touching {NW, BP,PC, OP, BB, PD, MOSVAR, NR, PR, DG, TG, ZEROVT} is prohibited" )

 ;Rule DIPI00f
   pi_touch_dipi = geomButtOrOver( pi geomSize( dipi 0.001 ) )
   errdipi00f    = geomButtOrOver( pi_touch_dipi geomSize( gate 0.001 ) )
   errorLayer( errdipi00f "GRDIPI00f: (PI touching DIPI) touching (PC over RX) is prohibited." )

 ;Rule DIPI00g
   bp_touch_pi_touch_dipi = geomButtOrOver( bp geomSize( pi_touch_dipi 0.001 ) )
   errdipi00g             = geomButtOrOver( bp_touch_pi_touch_dipi geomSize( pd 0.001 ) )
   errorLayer( errdipi00g "GRDIPI00g: (BP touching (PI touching DIPI)) touching PD is prohibited." )

 ;Rule DIPI01
   drc( dipi rx enc < 0.10 "GRDIPI01: RX minimum within DIPI >= 0.10 um." )

 ;Rule DIPI01b
   dipi_on_rx  = geomStraddle( dipi rx )
   dipi_shrunk = geomSize( dipi_on_rx -0.34 )
   errdipi01b  = geomAndNot( dipi_shrunk rx )
   errorLayer( errdipi01b "GRDIPI01b: RX maximum within DIPI <= 0.34 um." )

 ;Rule DIPI02b
   lay_dipi02b  = geomAnd( geomAnd( rx bp ) geomAndNot( pi nw ) )
   dipi_sized   = geomSize( dipi 0.54 )
   ok_dipi02b   = geomButtOrOver( dipi_sized lay_dipi02b )
   errdipi02b_0 = geomAndNot( dipi ok_dipi02b )
   errdipi02b_1 = drc( dipi lay_dipi02b 0.54 < sep < 3 )
   errorLayer( geomOr( errdipi02b_0 errdipi02b_1 ) "GRDIPI02b: RX isolated p-well contact maximum space to DIPI <= 0.54 um." )

 ;Rule DIPI02c
   rx_nw_cont_over_pi = geomAnd( geomAnd( rx nw ) pi )
   lay_dipi02c        = geomButtOrOver( lay_dipi02b dipi_sized )
   lay_dipi02c_sized  = geomSize( lay_dipi02c 1.00 )
   okdipi02c          = geomButtOrOver( lay_dipi02c_sized rx_nw_cont_over_pi )
   errdipi02c_0       = geomAndNot( lay_dipi02c okdipi02c )
   errdipi02c_1       = drc( lay_dipi02c rx_nw_cont_over_pi 1.00 < sep < 3 )
   errorLayer( geomOr( errdipi02c_0 errdipi02c_1 ) "GRDIPI02c: RX isolated p-well contact touching (DIPI sized by +0.54 um) maximum space to (RX n-well contact over PI) <= 1.00 um." )

 ;Rule DIPI03
   okdipi03  = geomEnclose( dipi rx )
   errdipi03 = geomAndNot( dipi okdipi03 )
   errorLayer( errdipi03 "GRDIPI03: DIPI must enclose RX." )

 ;Rule DIPI05
   rx_in_dipi = geomAnd( rx dipi )
   drc( rx_in_dipi width < 1.00 "GRDIPI05: RX minimum width (when RX is within DIPI) >= 1.00 um." )

 ;Rule DIPI5a
   lay_dipi5a = geomAndNot( rx_in_dipi grlogic )
   errdipi5a  = geomButtOrOver( lay_dipi5a geomSize( lay_dipi5a -1.00 downUp ) )
   errorLayer( errdipi5a "GRDIPI5a: (RX not over GRLOGIC) maximum width - (when RX is within DIPI) <= 2.00 um." )

 ;Rule DIPI07
   pi_not_nw_not_bp = geomAndNot( geomAndNot( pi nw ) bp )
   errdipi07        = geomAndNot( rx_in_dipi pi_not_nw_not_bp )
   errorLayer( errdipi07 "GRDIPI07: (RX within DIPI) must be within ((PI not over NW) not over BP)" )

 ;Rule DIPI07b
   lay_dipi07b       = geomButtOrOver( geomAndNot( nw pi ) geomSize( pi_touch_dipi 0.001 ) )
   lay_dipi07b_sized = geomSize( lay_dipi07b 1.00 )
   rx_not_pi         = geomAndNot( rx pi )
   okdipi07b         = geomButtOrOver( lay_dipi07b_sized rx_not_pi )
   errdipi07b        = geomSize( geomAndNot( lay_dipi07b_sized okdipi07b ) -1.00 )
   errorLayer( errdipi07b "GRDIPI07b: [(NW not over PI) touching (PI touching DIPI)] maximum space to (RX substrate contact not over PI) <= 1.00 um." )

 ;RuleDIPI08
   lay_dipi08 = geomButtOrOver( lay_dipi02b pi_touch_dipi )
   drc( bp lay_dipi08 enc < 0.14 "GRDIPI08: [RX p-well contact over (PI touching DIPI)] minimum within BP >= 0.14 um." )

 ;Rule DIPI09
   lay_dipi09 = geomAnd( rx geomSize( geomButtOrOver( geomAndNot( nw pi ) pi_touch_dipi ) 1.00 ) )
   drc( bp lay_dipi09 enc < 0.14 "GRDIPI09: {RX substrate contact over [((NW not over PI) touching (PI touching DIPI)) sized by +1.00 mm]} minimum within BP >= 0.14 um." )


;OP RESISTOR LAYOUT RULES
   rx_under_op = geomAnd( rx op )
   rx_res_ends = geomAndNot( rx_res rx_under_op )
   pc_under_op = geomAnd( pc op )
   pc_res_ends = geomAndNot( pc_res pc_under_op )

 ;Rule 710
   err710 = geomAnd( drc( rx_res_ends sep < 0.48 opposite ) rx_res )
   errorLayer( err710                   "GR710: (OP intersect RX) length >= 0.480 um.")

 ;Rule 711
   drc( rx_under_op width < 0.28         "GR711: (OP intersect RX) width >= 0.280 um.")

 ;Rule 712
   err712 = geomAnd( drc( pc_res_ends sep < 1.06 opposite ) pc_under_op )
   errorLayer( err712                   "GR712: (OP intersect PC) length >= 1.060 um.")

 ;Rule 713
   rr_under_pc_op_norec =  geomAnd( rr geomGetNonRectangle( pc_under_op) )
   pc_under_op_not_rr = geomAndNot( pc_under_op rr_under_pc_op_norec)
   op_len =   geomSize( geomGetEdge( pc_under_op_not_rr coincident pc ) 0.01 )
   err713 = drc( op_len sep < 0.28 opposite )
   err713_fil = geomAnd( err713 pc_under_op_not_rr )
   rr_serp_strip1 =  geomAnd( geomAnd( pc_under_op rr) reshv )
   rect_713a = geomGetRectangle( rr_serp_strip1 )
   good_713a = drc( rect_713a 0.18 <= width <= 0.32 opposite )
   errorLayer( geomAndNot( err713_fil good_713a)  "GR713a: (OP intersect PC) not over (RR intersect (non rectangular (PC under OP))) width >= 0.280 um.")

 ;Rule 713
   pc_under_op_rr = geomAnd( pc_under_op rr_under_pc_op_norec)
   op_len_713b =   geomSize( geomGetEdge( pc_under_op_rr coincident pc ) 0.01 )
   err713b = drc( op_len_713b sep < 0.18 opposite )
   err713b_fil = geomAnd( err713b pc_under_op_rr )
   errorLayer( err713b_fil                "GR713b: (OP intersect PC) over (RR intersect (non rectangular (PC under OP))) width >= 0.180 um.")

   err713c_fil=   geomAnd( geomSize( pc_under_op_rr -0.16) pc_under_op_rr)
   errorLayer( err713c_fil                "GR713c: (OP intersect PC) over (RR intersect (non rectangular (PC under OP))) width <= 0.320 um.")

 ;Rule 715
   ndiff_res = geomAndNot( rx_res bp )
   pdiff_res = geomAnd( rx_res bp )
   err715a   = geomAnd( ndiff_res nw )
   err715b   = geomAndNot( pdiff_res nw )
   err715f   = geomButtOrOver( rx_res bb )
   drc( ndiff_res nw sep < 0.42          "GR715a: ((RX touching OP) outside BP) to NW space >= 0.420 um.")
   errorLayer( err715a                  "GR715a: ((RX touching OP) outside BP) touching NW found!")
   drc( nw pdiff_res enc < 0.42          "GR715b: ((RX touching OP) inside BP) within NW >= 0.420 um.")
   errorLayer( err715b                  "GR715b: ((RX touching OP) inside BP) not within NW found!")
   errorLayer( err715f                  "GR715f: RX(over OP) touching BB found!")

 ;Rule 716
   err716anw = geomStraddle( rx_res nw )
   err716abb = geomStraddle( rx_res bb )
   err716b   = geomOutside( geomButtOrOver( rx_under_op nw ) bp )
   err716c   = geomButtOrOver( geomOutside( rx_under_op nw ) bp )
   errorLayer( err716anw                "GR716a: (RX touching OP) straddling NW found!")
   errorLayer( err716abb                "GR716a: (RX touching OP) straddling BB found!")
   errorLayer( err716b                  "GR716b: ((OP intersect RX) touching NW ) not touching BP found!")
   errorLayer( err716c                  "GR716c: ((OP intersect RX) not touching NW ) touching BP found!")

 ;Rule 717
   err717b = geomStraddle( pc_under_op nw )
   drc( pc_under_op nw sep < 0.60        "GR717a: (PC intersect OP) to NW space >= 0.600 um.")
   drc( nw pc_under_op enc < 0.86        "GR717b: (PC intersect OP) within NW >= 0.860 um.")
   errorLayer( err717b                   "GR717b: (PC intersect OP) straddling NW found!")

 ;Rule 725/726/729
 if( avSwitch("HIRESSUB") then
   drc( opgen width < 0.48 withCornerTouch "GR725: OP width >= 0.480 um.")
   drc( opgen sepNotch < 0.48 withSingularPoint  "GR726: OP space >= 0.480 um.")
   op_enclosure = geomAndNot( geomHoles( opgen ) opgen )
   drc( opgen           area < 0.72      "GR729a: OP area >= 0.720 sq.um.")
   drc( op_enclosure area < 0.72         "GR729b: OP enclosed area >= 0.720 sq.um.")
 else
   drc( op width < 0.48                  "GR725: OP width >= 0.480 um.")
   drc( op   sep < 0.48                  "GR726: OP space >= 0.480 um.")
   drc( op notch < 0.48                  "GR726: OP notch >= 0.480 um.")
   op_enclosure = geomAndNot( geomHoles( op ) op )
   drc( op           area < 0.72         "GR729a: OP area >= 0.720 sq.um.")
   drc( op_enclosure area < 0.72         "GR729b: OP enclosed area >= 0.720 sq.um.")
  )

 ;Rule 727
   drc( op rx_res enc < 0.18             "GR727: OP overlap past RX >= 0.180 um.")

 ;Rule 728
   drc( op rx sep < 0.16                 "GR728: OP to RX space >= 0.160 um.")


 ;Rule 730
   drc( op pc_res enc < 0.20             "GR730: OP overlap past PC >= 0.200 um.")

 ;Rule 731
   drc( op pc sep < 0.26                 "GR731: OP to PC space>= 0.260 um.")

 ;Rule OP9
   op_rp_pd   = geomAnd( geomAnd( op rp ) pd )
   op_rr_pd   = geomAnd( geomAnd( op rr ) pd )
   errop9a_rp = geomWidth( op_rp_pd  keep > 0.38 )
   errop9a_rr = geomWidth( op_rr_pd  keep > 0.38 )
   drc( op pd sep < 0.44                          "GROP9: OP to adjacent PD >= 0.440 um.")
   drc( op_rp_pd width < 0.38   opposite parallel "GROP9a: (OP over RP) overlap of PD == 0.380 um.(error <)")
   errorLayer( errop9a_rp                         "GROP9a: (OP over RP) overlap of PD == 0.380 um.(error >)")
   drc( op_rr_pd width < 0.38   opposite parallel "GROP9a: (OP over RR) overlap of PD == 0.380 um.(error <)")
   errorLayer( errop9a_rr                         "GROP9a: (OP over RR) overlap of PD == 0.380 um.(error >)")

 ;Rule 732
   err732 = geomAnd( ca_all op )
   errorLayer( err732                   "GR732: CA/CABAR over OP found!")

 ;Rule 733
   drc( ca    op sep < 0.18              "GR733: CA to OP space >= 0.180 um.")
   drc( cabar op sep < 0.36              "GR733a: CABAR to OP space >= 0.360 um.")

 ;Rule 734
   esdStruct = geomOr( esdummy esd_cdm )
   err734a = geomAndNot( geomStraddle( rx_res bp ) esdStruct )
   err734a_enc = geomAndNot( drc( bp rx_res enc < 0.22 withSingularPoint ) esdStruct )
   errorLayer( err734a                  "GR734a: (RX touching OP) straddling BP found!!")
   errorLayer( err734a_enc              "GR734a: (RX touching OP) within BP >= 0.220um")
   err734b = geomAndNot( drc( rx_res bp sep < 0.22 withSingularPoint ) esdStruct )
   errorLayer( err734b                  "GR734b: (RX touching OP) to BP space >= 0.220 um.")

 ;Rule 735
   err735a2_1 = geomAndNot( geomAndNot( pc_res geomOr( bb bp ) ) esdStruct )
   err735a2_2 = geomAndNot( drc( bp pc_res enc < 0.30 withSingularPoint ) esdStruct )
   err735a2_3 = geomAndNot( drc( bb pc_res enc < 0.30 withSingularPoint ) esdStruct )
   errorLayer( err735a2_1               "GR735a2: (PC touching OP) not within {BP or BB} found!")
   errorLayer( err735a2_2               "GR735a2: (PC touching OP) within BP >= 0.300 um.")
   errorLayer( err735a2_3               "GR735a2: (PC touching OP) within BB >= 0.300 um.")
   err735b    = geomAndNot( drc( pc_res bp sep < 0.30 withSingularPoint ) esdStruct )
   errorLayer( err735b                  "GR735b: (PC touching OP) to BP space >= 0.300 um.")

 ;Rule 736
   sblk_ovr_op = geomAnd( sblk op )
;   err736   = geomAnd( geomAndNot( op geomAnd( esdStruct tg )) gate )
   err736   = geomAnd( geomAndNot( op esdStruct ) gate )
   err736a  = geomOverlap( geomAvoiding( rx_res sblk_ovr_op ) geomSize( pc 0.01 ))
   err736a1 = geomOverlap( geomAvoiding( rx_res pc ) geomSize( sblk 0.01) )
   err736a2 = geomOverlap( geomAndNot( pc_res esdStruct ) geomSize( sblk_ovr_op  0.01 ) )
   errorLayer( err736                   "GR736: (OP not over (ESDUMMy , ESD_CDM)) over (PC intersect RX) found!")
   errorLayer( err736a                  "GR736a: RX(touching OP) touching PC found!")
   errorLayer( err736a1                 "GR736a1: (RX(touching OP) not touching PC) touching SBLK found!")
   errorLayer( err736a2                 "GR736a2: PC(touching OP) touching SBLK found!")
   sblk_good = geomOverlap( sblk  geomAnd( geomSize( op 0.01) sblk))
   err736a3  = geomAndNot( sblk sblk_good)
   errorLayer( err736a3 "GR736a3: SBLK must touch OP")

 ;Rule 737
   dg_737  = geomAndNot( dg geomOr( esdummy esd_cdm ) )
   err737  = geomOverlap( op geomSize( dg_737 0.01 ) )
   err737a = geomAndNot( geomAndNot( geomOverlap( pc_res geomSize( dg 0.01 ) ) esdStruct ) sblk_ovr_op )
   errorLayer( err737                   "GR737:  OP touching (DG not over (ESDUMMY or ESD_CDM)) not allowed!")
   errorLayer( err737a                  "GR737a: PC(touching OP) touching DG found!")

 ;Rule 738
   err738rx = geomGetPolygon( rx_under_op )
   err738pc = geomGetPolygon( geomAnd( geomAndNot( pc rr) op) )
   errorLayer( err738rx                 "GR738a: Non-rectangular (OP intersect RX) found!")
   errorLayer( err738pc                 "GR738b: Non-rectangular (OP intersect (PC not over RR)) found!")
   err738c = geomGetAngledEdge( pc_under_op 0 < keep < 90 fig )
   errorLayer( err738c                 "GR738c_TF: Non-orthogonal  (OP intersect PC) found!")

 ;Rule 739
   drc( rx_res op enc < 0.62 withSingularPoint "GR739a: RX overlap past OP >= 0.620 um.")
   drc( pc_res op enc < 0.58 withSingularPoint "GR739b: PC overlap past OP >= 0.580 um.")

 ;Rule OP20
   drc( op rn sep < 0.60 withSingularPoint     "GROP20: OP to adjacent RN >= 0.600 um.")

 ;Rule OP24
   errop24 = geomOverlap( op geomSize( geomAnd( rx rn ) 0.01 ))
   errorLayer( errop24                  "GROP24: OP touching RX(over RN) found!")

 ;Rule OP29
   errop29 = geomButtOrOver( geomButtOrOver( geomAndNot( pc esdStruct ) op ) rx )
   errorLayer( errop29                  "GROP29: PC(touching OP) touching RX found!")

 ;Rule OP30
   pcr_over_nw = geomAnd( pc_under_op nw )
   drc( pcr_over_nw rx sep < 0.38    "GROP30: ((PC over OP) over NW) to RX space >= 0.380 um.")

 ;Rule OP31
   drc( pc_res rn sep < 0.30            "GROP31: (PC touching OP) to RN must be>= 0.3um !")
   errop31a = geomButtOrOver( geomAnd( pc_res geomSize( rn .01 ) ) pc_res )
   errop31b = geomButtOrOver( geomAnd( pc_res rn ) pc_res )
   errop31c = geomOr( errop31a errop31b )
   errorLayer( errop31c                "GROP31: (PC touching OP) cannot touch RN !")

 ;Rule OP32
   rx_over_op_op32 = geomAnd( rx op )
   rx_over_op_notover_grlogic = geomAndNot( rx_over_op_op32 grlogic)
   nr_or_pr_op32=geomOr( nr pr)
   drc( rx_over_op_notover_grlogic nr_or_pr_op32 sep < 0.26 "GROP32: ((RX over OP) not over GRLOGIC) to (NR or PR) space >= 0.260 um.")
   errop32= geomButtOrOver( rx_over_op_notover_grlogic nr_or_pr_op32)
   errorLayer( errop32 "GROP32: ((RX over OP) not over GRLOGIC) touching (NR or PR) found!")

 ;Rule PCR20a
   errgrpcr20a1 = geomAnd( geomButtOrOver( pc_res ns ) ns )
   errgrpcr20a2 = geomButtOrOver( geomAnd( pc_res geomSize( ns .01 ) ) pc_res )
   errpcr20a3 = geomOr( errgrpcr20a1 errgrpcr20a2 )
   errorLayer( errpcr20a3              "GRPCR20a: (PCtouching OP) touching NS found !")

 ;Rule SBLK4
   errsblk4 = geomOr( geomStraddle( sblk esdStruct )  geomOutside( sblk esdStruct ) )
   errorLayer( errsblk4                "GRSBLK4: SBLK not covered by (ESDUMMY or ESD_CDM) found!!")

 ;Rule PBR19
   errpbr19pc  = geomOutside( geomButtOrOver( pc_res op keep > 1) sblk )
   errpbr19rx  = geomOutside( geomButtOrOver( rx_res op keep > 1) sblk )
   ;errpbr19pc  = geomEnclose( pc_res pc_res_ends keep > 2 )
   ;errpbr19rx  = geomOutside( geomEnclose( rx_res rx_res_ends keep > 2 ) sblk )
   errorLayer( errpbr19pc               "GRPBR19: More than ONE set of contacts found on a PC resistor!")
   errorLayer( errpbr19rx               "GRPBR19: More than ONE set of contacts found on a RX resistor!")

 ;Rule PBR29 (PC STRADDLING NW COVERED BY 717b)
   pcop_analog    = geomAndNot( pc_res grlogic )
   drc( nw pcop_analog enc < 2.00        "GRPBR29: PC(touching OP, not GRLOGIC) within NW >= 2.000 um.")

 ;Rule PBR31 (PC STRADDLING BB COVERED BY BB41)
   pcop_bb   = geomButtOrOver( pc_res bb )
   drc( bb pcop_bb enc < 2.00            "GRPBR31: PC(touching OP, touching BB) within BB >= 2.000 um.")

 ;Rule PBR33
   pcop_nonw = geomAndNot( geomOutside( pc_res nw ) grlogic )
   drc( pcop_nonw nw sep < 2.00          "GRPBR33: PC(touch OP, no touch NW, not GRLOGIC) to adjacent NW >= 2.000 um.")

 ;Rule PBR35
   pcop_nobb = geomOutside( pc_res bb )
   drc( pcop_nobb bb sep < 2.00          "GRPBR35: PC(touching OP, not touching BB) to adjacent BB >= 2.000 um.")


;RR RULES
 ;Rule RR1
   drc( rr width < 0.80                  "GRRR1: RR width >= 0.800 um.")

 ;Rule RR2
   drc( rr   sep < 0.80                  "GRRR2: RR space >= 0.800 um.")
   drc( rr notch < 0.80                  "GRRR2: RR notch >= 0.800 um.")

 ;Rule RR3
   errrr3 = geomButtOrOver( rr rp )
   drc( rr rp 0 < sep < 0.80             "GRRR3: RR to RP space >= 0.800 um.")
   errorLayer( errrr3                   "GRRR3: RR touching RP found!")

 ;Rule RR4
   pc_strad_rr = geomStraddle( pc rr )
   drc( rr pc enc < 0.26                 "GRRR4: PC within RR >= 0.260 um.")
   errorLayer( pc_strad_rr              "GRRR4: PC straddling RR found!")

 ;Rule RR5
   drc( rr pc       sep < 0.28           "GRRR5: RR to adjacent PC >= 0.280 um.")

 ;Rule RR6
   drc( rr gate 0 < sep < 0.50           "GRRR6: RR to (PC over RX) space >= 0.500 um.")

 ;Rule RR7
   errrr7 = geomButtOrOver( rr rx )
   drc( rr rx 0 < sep < 0.28             "GRRR7: RR to adjacent RX >= 0.280 um.")
   errorLayer( errrr7                   "GRRR7: RR touching RX found!")

 ;Rule RR8
   errrr8 = geomAndNot( geomOverlap( bp rr ) rr )
   errorLayer( errrr8                   "GRRR8: BP within RR >= 0.000 um.")

 ;Rule RR9
   bp_touch_rr = geomButtOrOver( bp rr )
   errrr9bb    = geomButtOrOver( bp_touch_rr bb )
   errrr9pc    = geomButtOrOver( bp_touch_rr geomOutside( pc rr ) )
   errorLayer( errrr9bb                 "GRRR9: BP(touching RR) touching BB found!")
   errorLayer( errrr9pc                 "GRRR9: BP(touching RR) touching PC(not touching RR) found!")

 ;Rule RR10
   errrr10 = geomButtOrOver( geomAvoiding( pc op ) rr )
   errorLayer( errrr10                  "GRRR10: PC(not touching OP) touching RR found!")

 ;Rule RR11
   cont_rr = geomAnd( ca_all rr )
   errrr11 = geomAndNot( cont_rr pd )
   errorLayer( errrr11                  "GRRR11: (CA/CABAR over RR) not covered by PD found!")


;RP RULES
 ;Rule RP1
   drc( rp width < 0.80                  "GRRP1: RP width >= 0.800 um.")

 ;Rule RP2
   drc( rp   sep < 0.80                  "GRRP2: RP space >= 0.800 um.")
   drc( rp notch < 0.80                  "GRRP2: RP notch >= 0.800 um.")

 ;Rule RP4
   pc_strad_rp = geomStraddle( pc rp )
   drc( rp pc enc < 0.26                 "GRRP4: PC within RP >= 0.260 um.")
   errorLayer( pc_strad_rp              "GRRP4: PC straddling RP found!")

 ;Rule RP5
   drc( rp pc       sep < 0.28           "GRRP5: RP to adjacent PC >= 0.280 um.")

 ;Rule RP6
   drc( rp gate 0 < sep < 0.50           "GRRP6: RP to (PC over RX) space >= 0.500 um.")

 ;Rule RP7
   errrp7 = geomButtOrOver( rp rx )
   drc( rp rx 0 < sep < 0.28             "GRRP7: RP to adjacent RX >= 0.280 um.")
   errorLayer( errrp7                   "GRRP7: RP touching RX found!")

 ;Rule RP8
   errrp8 = geomAndNot( geomOverlap( bp rp ) rp )
   errorLayer( errrp8                   "GRRP8: BP within RP >= 0.000 um.")

 ;Rule RP9
   bp_touch_rp = geomButtOrOver( bp rp )
   errrp9bb    = geomButtOrOver( bp_touch_rp bb )
   errrp9pc    = geomButtOrOver( bp_touch_rp geomOutside( pc rp ) )
   errorLayer( errrp9bb                 "GRRP9: BP(touching RP) touching BB found!")
   errorLayer( errrp9pc                 "GRRP9: BP(touching RP) touching PC(not touching RP) found!")

 ;Rule RP10
   errrp10 = geomButtOrOver( geomAvoiding( pc op ) rp )
   errorLayer( errrp10                  "GRRP10: PC(not touching OP) touching RP found!")

 ;Rule RP11
   cont_rp = geomAnd( ca_all rp )
   errrp11 = geomAndNot( cont_rp pd )
   errorLayer( errrp11                  "GRRP11: (CA/CABAR over RP) not covered by PD found!")

;RR Serpentine RULES
   ;Rule RESHV1
   pc_under_op_non_rec = geomGetNonRectangle( pc_under_op)
   err_reshv1 =  geomAvoiding( pc_under_op_non_rec rr)
   errorLayer( err_reshv1               "GRSERP1: (Non rectangular (PC intersect OP)) must touch RR.")

 ;Rules RESHV7
   pc_op_rr_serp = geomAnd( geomAnd( geomAnd( pc op) rr) pc_under_op_non_rec)
   pc_serp_conve = geomGetCorner( pc_op_rr_serp convex)
   err_serp7_1  = geomSize( geomGetEdge( pc_op_rr_serp) -0.01)
   err_serp7_2 = geomGetEdge( pc_op_rr_serp coincident geomAvoiding( err_serp7_1 pc_serp_conve))
   err_serp7 = geomGetLength( err_serp7_2 ignore == 0.240)
   errorLayer( err_serp7             "GRSERP7: (((PC over OP) over RR) over (Non rectangular (PC intersect OP)) notches == 0.240.")

 ;Rule RESHV10
   ca_serp = geomButtOrOver( ca  geomButtOrOver( pc pc_under_op_non_rec) )
   drc( ca_serp op  sep < 0.320        "GRSERP10: (CA touching (PC touching (Non rectangular (PC intersect OP)))) to OP space >= 0.320.")

 ;Rule SERP11
   op_size = geomSize( op 0.52)
   err_reshv11 = geomAndNot( ca_serp  op_size)
   errorLayer( err_reshv11              "GRSERP11: (CA touching (PC touching (Non rectangular (PC intersect OP)))) must be within (OP expanded by 0.52) >= 0.0000 um.")

  ;Rule SERP12
   careshved_size = geomSize( geomGetEdge( ca_serp) 0.31)
   err_reshv12 = geomAndNot( careshved_size geomAndNot( pd op ))
   errorLayer( err_reshv12              "GRSERP12: (CA touching (PC touching (Non rectangular (PC intersect OP)))) expanded by 0.31 per edge) must be within (PD not over OP) >= 0.0000 um.")

 ;Rule SERP13
   pd_reshv = geomButtOrOver( pd pc_under_op_non_rec)
   err_reshv13_butt = geomButting( pd_reshv op)
   err_reshv13 = geomAvoiding( pd_reshv op )
   errorLayer( err_reshv13              "GRSERP13: (PD touching (PC touching (Non rectangular (PC intersect OP)))) must touch OP.")
   errorLayer( err_reshv13_butt         "GRSERP13: (PD touching (PC touching (Non rectangular (PC intersect OP)))) abutting OP is prohibited.")

 ;Rule SERP15
   drc( pd ca_serp enc < 0.34          "GRSERP15: (CA touching (PC touching (Non rectangular (PC intersect OP)))) within PD >= 0.340 um.")

 ;Rule SERP16
   pc_under_op_rec = geomGetRectangle( pc_under_op)
   rr_serp = geomButtOrOver( rr pc_under_op_non_rec)
   err_serp16 = geomButtOrOver( rr_serp  pc_under_op_rec)
   errorLayer( err_serp16               "GRSERP16: (RR touching (Non rectangular (PC intersect OP)))  cannot touch (RR touching (rectangular (PC intersect OP))).")


;Kx LEVEL RESISTOR RULES
 ;RULE KX1
   drc( k1  width < 5.00                 "GRKX1: K1 width (min) >= 5.000 um.")

 ;RULE KX2
   v1_strad_k1 = geomStraddle( v1 k1 )
   drc( k1 v1 enc < 0.50                 "GRKX2: V1 within K1 >= 0.5000 um.")
   errorLayer( v1_strad_k1              "GRKX2: V1 straddling K1 found!")

 ;RULE KX3
   drc( k1    sep < 5.50                 "GRKX3: K1 space >= 5.500 um.")

 ;RULE KX4
   errkx4 = geomButtOrOver( k1 m1 )
   drc( k1 m1 0 < sep < 1.00             "GRKX4: K1 to M1 space >= 1.000 um.")
   errorLayer( errkx4                   "GRKX4: K1 touching M1 found!")

 ;RULE KX5
   v1_k1  = geomAnd( v1 k1 )
   errkx5 = geomEnclose( k1 geomSize( geomSize( v1_k1 0.28 ) -0.28) keep > 2 )
   errorLayer( errkx5                   "GRKX5: More than ONE set of contacts found on a K1 resistor!")

 ;RULE KX6
   k1_res_end   = geomAnd( geomSize( v1_k1 1.00 ) k1 )
   k1_res_body  = geomAndNot( k1 k1_res_end )
   k1_v1_set    = geomSize( v1_k1 1.10 ) ;1.1 arbitrary value
   k1_edge_set  = geomSize( geomStretch( k1 -2.4 ) 0.1 edges ) ; (1(arbitrary max V1 inside K1) + 0.28 + 1.1) 2.38  < 2.4 < 2.48 (1.1*2 +0.28)
   k1_and_set   = geomAnd( geomSize( geomButtOrOver( k1_edge_set k1_v1_set ) 2.4) k1)
   errkx6       = geomGetLength( k1_and_set keep > 30 )
   errorLayer( errkx6                   "GRKX6: K1 width (max) <= 30.000 um.")

 ;RULE KX7 (THIS IS A PATTERN FILL RULE)

 ;RULE KX8
   k1_polygon = geomGetPolygon( k1 )
   k1_45      =  geomGetAngledEdge( k1 keep == 45 fig)
   errorLayer( k1_polygon               "GRKX8: Non-rectangular K1 found!")
   errorLayer( k1_45                    "GRKX8: 45 degree K1 found!")

 ;RULE KX9
  ;V1 SPACE LESS THAN 0.28 IS COVERED BY GR553
   v1_contact = geomSize( geomSize( v1_k1 0.14 ) -0.14)
   errkx9     = geomInside( v1_contact geomEnclose( k1_res_end v1_contact keep > 1 ) )
   errorLayer( errkx9                   "GRKX9: V1(touching K1) space == 0.28 um. (error >)")

 ;RULE KX10
   k1_over_m2   = geomAnd( geomOverlap( geomAnd( k1 m2 ) v1 ) LM2_5 )
   k1_over_mt   = geomAnd( geomOverlap( geomAnd( k1 mt ) v1 ) LM1 )
   k1m2_one_v1  = geomAnd( geomButtOrOver( k1_over_m2 v1 keep == 1 ) LM2_5 )
   k1mt_one_v1  = geomAnd( geomButtOrOver( k1_over_mt v1 keep == 1 ) LM1 )
   errorLayer( k1m2_one_v1                "GRKX10: K1/M2 intersection only enclosing one V1 shape found!")
   errorLayer( k1mt_one_v1                "GRKX10: K1/MT intersection only enclosing one V1 shape found!")

 ;RULE KX11
   errkx11 = geomButtOrOver( k1 op )
   errorLayer( errkx11                    "GRKX11: K1 touching OP found!")


;===== TI DEEP TRENCH ISOLATION RULES =====
  if( avSwitch("HIRESSUB") then

  ;Rule TI1
   errti1        = geomWidth( ti  keep >  1.040 )
   drc( ti width < 1.04 withCornerTouch                 "GRTI1: TI exact width == 1.04 um.(error <)")
   errorLayer( errti1                                   "GRTI1: TI exact width == 1.04 um.(error >)")

 ;Rule TI2
   ;drc( ti area < 1.9968                       "GRTI2: TI exact length == 1.920um.")
   ;errti2 = geomGetBBox( ti length < 1.92 width == 1.040 outputInLayer )
   errti2 = geomGetLength( ti 1.04 < keep < 1.92 )
   errorLayer( errti2       "GRTI2: TI length >= 1.920um.")

 ;Rule TI3a
   errti3a = geomGetVertex( ti ignore == 8 )
   ti_vtx_lt_9 = geomGetVertex( ti 4 < keep < 9 )
   ti_vtx_lt_9_wh = geomButtOrOver( ti_vtx_lt_9 geomHoles( ti ) )
   ti_vtx_lt_9_holeless = geomAndNot( ti_vtx_lt_9 ti_vtx_lt_9_wh )
   errorLayer( errti3a                                  "GRTI3a: TI must have 8 vertices (<).")
   errorLayer( ti_vtx_lt_9_holeless                     "GRTI3a: TI shape without a hole found!")

 ;Rule TI4
   drc( ti sepNotch < 1.60 withSingularPoint            "GRTI4: TI space >= 1.60um.")

 ;Rule TI5a
   rx_not_bpnw = geomAndNot( geomAndNot( rx bp ) nw )
   ti_maze_envlp = geomOr( ti )
   ;ti_maze_envlp = geomOr( rx_not_bpnw )
   ti_shape_x = geomSize( ti 0.01 )
   ti_maze_x = geomSize( ti_maze_envlp 0.01 )
   ti_edge1 = geomSize( ti 0.01 edges )
   ti_edge2 = geomSize( ti_maze_envlp 0.01 edges )
   ti_corner1 = geomAndNot( geomAndNot( ti_shape_x ti ) ti_edge1 )
   ti_corner2 = geomAndNot( geomAndNot( ti_maze_x ti_maze_envlp ) ti_edge2 )
   ti_corner = geomOr( ti_corner1 ti_corner2 )
   drc( ti_corner rx_not_bpnw sep < 1.80 withSingularPoint   "GRTI5a: TI(outside corner) to ((RX not over BP) not over NW) space >= 1.81 um.")

 ;Rule TI9
   drc( ti rn enc < 0.20 withSingularPoint              "GRTI9: TI overlap past RN >= 0.20um.")

 ;Rule TI15
   errti15 = geomGetAngledEdge( ti 0 < keep < 90 fig )
   errorLayer( errti15                                  "GRTI15: Non-orthogonal TI shape found!")

 ;Rule TI17
   drc( ti nw sep < 2.64 withSingularPoint              "GRTI17: TI to NW space >= 2.64um.")
   errorLayer( geomGetEdge( ti inside nw )              "GRTI17b: TI inside edge NW found!!")

 ;Rule TI18
   errti18 =  geomAnd(  ti pc )
   drc( ti pc sep < 0.72 withSingularPoint              "GRTI18: TI to PC space >=0.72um.")
   errorLayer( errti18                                  "GRTI18: TI touching PC shape found!")

 ;Rule TI19
   drc( ti bb sep < 2.32 withSingularPoint              "GRTI19: TI to BB space >= 2.32um.")

 ;Rule TI20
   errti20 = geomAndNot( drc( ti pi sep < 2.64 withSingularPoint ) nw  )
   errorLayer( errti20                                  "GRTI20: TI to PI space >= 2.64um.")
   errti20_1 = geomAndNot( geomAnd( ti pi ) nw )
   errorLayer( errti20_1                                "GRTI20: TI touching PI shape found!.")

 ;Rule TI25
   errti25 = geomOr( geomStraddle( ti bb ) geomOutside( ti bb ))
   errorLayer( errti25                                  "GRTI25: TI not within BB found!.")

 ;Rule TI26
   errorLayer( geomStraddle( ti nohr )                  "GRTI26: TI within NOHR >=0.90um.")

 ;Rule TIEF05
   errtief05 =  geomOverlap( pcfuse geomSize( ti 0.01 ) )
   errorLayer( errtief05                                "GRTIEF05: PCFUSE touching TI found!.")

 ;Rule TIEF06
   drc( pcfuse ti  sep <  2.50 withSingularPoint        "GRTIEF06: PCFUSE to TI space >=2.50um.")

 ;Rule TIPN001
   errorLayer( errpn001_ti                              "GRTIPN001: Shape straddling LOGOBND found! (TI)")

 ;Rule HR1
   drc( hrgen width < 2.00 withCornerTouch              "GRHR1: HR width >= 2.00 um.")

 ;Rule HR2
   drc( hrgen sepNotch < 2.00 withSingularPoint         "GRHR2: HR space >= 2.00 um.")

 ;Rule HR3
   drc( hrgen area < 9.00                               "GRHR3: HR area >= 9.00 sq.um.")

 ;Rule HR4
   hr_enclosure = geomAndNot( geomHoles( hrgen ) hrgen )
   drc( hr_enclosure area < 9.00                        "GRHR4: HR enclosed area >= 9.00 sq.um.")

 ;Rule HR11
   drc( nixhr width < 2.00 withCornerTouch              "GRHR11: NIXHR width >= 2.00 um.")

 ;Rule HR12
   drc( nixhr sepNotch < 2.00 withSingularPoint         "GRHR12: NIXHR space/notch >= 2.00 um.")

 ;Rule HR13
   errhr13 = geomAnd( nixhr nohr )
   drc( nixhr nohr sep < 2.00 withSingularPoint         "GRHR13: NIXHR minimum space to NOHR >= 2.00 um.")
   errorLayer(errhr13                                   "GRHR13: NIXHR touching NOHR found!. ")

 ;Rule HR21
   drc( hrcus width < 2.00 withCornerTouch              "GRHR21: HRCUS width >= 2.00 um.")

 ;Rule HR22
   drc( hrcus sepNotch < 2.00 withSingularPoint         "GRHR22: HRCUS space/notch >= 2.00 um.")

 ;Rule HR23
   errhr23 = geomAndNot( hrcus nohr )
   drc( nohr hrcus enc < 2.00 withSingularPoint         "GRHR23: HRCUS must be within NOHR >= 2.00 um.")
   errorLayer(errhr23                                   "GRHR23: HRCUS outside NOHR found!. ")

 ;Rule BT1
   drc( btgen width < 2.00  withCornerTouch             "GRBT1: BT width >= 2.00 um.")

 ;Rule BT2
   drc( btgen sepNotch < 2.00 withSingularPoint         "GRBT2: BT space >= 2.00 um.")

 ;Rule BT3
   drc( btgen area < 9.00                               "GRBT3: BT area >= 9.00 sq.um.")

 ;Rule BT4
   bt_enclosure = geomAndNot( geomHoles( btgen ) btgen )
   drc( bt_enclosure area < 9.00                        "GRBT4: BT enclosed area >= 9.00 sq.um.")

 ;Rule BT11
   drc( nixbt width     < 2.00 withCornerTouch          "GRBT11: NIXBT width >= 2.00 um.")

 ;Rule BT12
   drc( nixbt sepNotch  < 2.00 withSingularPoint        "GRBT12: NIXBT space/notch >= 2.00 um.")

 ;Rule BT13
   errbt13 = geomAnd( nohr nixbt )
   drc( nixbt nohr sep < 2.00 withSingularPoint         "GRBT13: NIXBT minimum space to NOHR >= 2.00 um.")
   errorLayer(errbt13                                   "GRBT13: NIXBT touching NOHR found!. ")

 ;Rule BT21
   drc( btcus width     < 2.00 withCornerTouch          "GRBT21: BTCUS width >= 2.00 um.")

 ;Rule BT22
   drc( btcus sepNotch  < 2.00 withSingularPoint        "GRBT22: BTCUS space/notch >= 2.00 um.")

 ;Rule BT23
   errbt23 = geomAndNot( btcus nohr )
   drc( nohr btcus enc < 2.00 withSingularPoint         "GRBT23: BTCUS must be within NOHR >= 2.00 um.")
   errorLayer(errbt23                                   "GRBT23: BTCUS outside/straddle NOHR found!.")

 ;Rule NOHR1
   drc( nohr sepNotch < 2.00  withSingularPoint         "GRNOHR1: NOHR space >= 2.00 um.")

 ;Rule NOHR2
   drc( nohr width < 2.00  withCornerTouch              "GRNOHR2: NOHR width >= 2.00 um.")

 ;Rule NOHR3
  errnohr3 = geomGetAngledEdge( nohr_not_ring 0 < keep < 90 fig )
  errorLayer( errnohr3                                  "GRNOHR3: Non-orthogonal (NOHR not over CHIPRING) shape found!")

 ;Rule NOHR4
   errnohr4 = geomAvoiding( bb geomOr( nw rn pi rx pc ) )
   errnohr41 = geomOverlap( errnohr4 geomSize( nohr 0.01 ) )
   errorLayer( errnohr41                                "GRNOHR4: BB not touching (NS,NW,NWHV,RN,PI,RX,RXHV,PC) touching NOHR found!")

 ;Rule NOHR5
   drc( nohr rx enc < 2.00 withSingularPoint            "GRNOHR5: RX/RXHV within NOHR >= 2.00 um.")
   drc( nohr pc enc < 2.00 withSingularPoint            "GRNOHR5: PC within NOHR >= 2.00 um.")

 ;Rule NOHR6
   drc( nohr rx sep < 2.00 withSingularPoint            "GRNOHR6: NOHR to adjacent( RX or RXHV) space >= 2.00 um.")
   drc( nohr pc sep < 2.00 withSingularPoint            "GRNOHR6: NOHR to adjacent PC space >= 2.00 um..")

 ;Rule NOHR7
   rx_outside_nohr = geomOutside( rx nohr )
   pc_outside_nohr = geomOutside( pc nohr )
   errnohr7_rx = geomOverlap( rx_outside_nohr geomSize( ca_all 0.01 ) )
   errnohr7_pc = geomOverlap( pc_outside_nohr geomSize( ca_all 0.01 ) )
   errorLayer( errnohr7_rx                              "GRNOHR7: (RX,RXHV not within NOHR) touching CA/CABAR found!" )
   errorLayer( errnohr7_pc                              "GRNOHR7: (PC not within NOHR) touching CA/CABAR found!" )

 ;Rule NOHR11
   drc( nohr bb enc < 10.00 withSingularPoint           "GRNOHR11: BB within NOHR >= 2.00 um.")

 ;Rule NOHR12
   errnohr12 = geomAndNot( geomOr( pi rn ) nohr)
   drc( nohr pi enc < 10.00  withSingularPoint "GRNOHR12: PI must be within NOHR >= 10.00 um." )
   drc( nohr rn enc < 10.00  withSingularPoint "GRNOHR12: RN must be within NOHR >= 10.00 um." )
   errorLayer( errnohr12                       "GRNOHR12: ( PI, RN ) outisde NOHR found!!" )

 ;Rule NOHR13
   errnohr13 = geomAndNot( nw nohr)
   drc( nohr nw    enc < 10.68 withSingularPoint        "GRNOHR13: NW must be within NOHR >= 10.68 um." )
   errorLayer( errnohr13                                "GRNOHR13: NW outside NOHR found!." )

 ;Rule NOHR15
   errnohr15 = geomAndNot( pcfuse nohr)
   drc( nohr pcfuse    enc < 2.50 withSingularPoint     "GRNOHR15: PCFUSE must be within NOHR >= 2.50 um." )
   errorLayer( errnohr15                                "GRNOHR15: PCFUSE outside NOHR found!." )

 ;Rule NOHR17a
   errnohr17a = geomOverlap( ind_filt geomSize( nohr 0.01 ))
   errorLayer( errnohr17a                               "GRNOHR17a: IND_FILT touching NOHR found!.")

   chip_not_nohr = geomAndNot( chipedge nohr )
 if( avSwitch( "CHECK_RECOMMENDED" ) then
 ;Rule NOHR16R
   rxop_t_ca = geomButtOrOver( rx_res ca_all )
   rx_t_ca_t_pc = geomButtOrOver( geomButtOrOver( rx ca ) pc )
   pc_t_ca_t_rx = geomButtOrOver( geomButtOrOver( pc ca ) rx )
   errnohr16r_l1 = geomOr( pcfuse rxop_t_ca rx_t_ca_t_pc pc_t_ca_t_rx )
   drc( nohr errnohr16r_l1 enc < 6.10 withSingularPoint  "GRNOHR16R: (((RX touching OP) touching CA/CABAR), ((RX touching CA) touching PC), ((PC touching CA) touching RX)) must be within NOHR >= 6.10um.")
   errorLayer( geomAndNot(errnohr16r_l1 nohr )          "GRNOHR16R: (((RX touching OP) touching CA/CABAR), ((RX 5103 touching CA) touching PC), ((PC touching CA) touching RX)) straddling NOHR found!")

 ;Rule NOHR17bR
   drc( ind_filt nohr sep < 50.00  withSingularPoint         "GRNOHR17bR: IND_FILT to NOHR >=50.00um.")

 ;Rule NOHR19R
   mt_t_qt = geomOverlap( mt geomSize( qt 0.01 ) )
   drc( nohr mt_t_qt enc < 3.00 withSingularPoint       "GRNOHR19R: (MT touching QT) within NOHR >= 3.00um .")
   drc( nohr k1 enc < 3.00      withSingularPoint       "GRNOHR19R: K1 within NOHR >= 3.00um .")
   drc( chip_not_nohr mt_t_qt enc < 3.00 withSingularPoint "GRNOHR19R: (MT touching QT) within ( CHIPEDGE not NOHR ) >= 3.00um .")
   drc( chip_not_nohr k1 enc < 3.00  withSingularPoint  "GRNOHR19R: K1 within ( CHIPEDGE not NOHR ) >= 3.00um .")
  );End of CHECK_RECOMMENDED

 ;Rule NOHR18
   drc( tline nohr sep < 3.00  withSingularPoint        "GRNOHR18: TLINE to NOHR >=3.00um.")
   drc( trans nohr sep < 3.00  withSingularPoint        "GRNOHR18: TRANSMIS to NOHR >=3.00um.")
   errorLayer( geomAnd(tline nohr )                     "GRNOHR18: TLINE touching NOHR found!!")
   errorLayer( geomAnd( trans nohr )                    "GRNOHR18: TRANSMIS touching NOHR found!!")

 ;Rule NOHR29
   errnohr13 = geomAndNot( op nohr)
   drc( nohr op    enc < 0.48    withSingularPoint      "GRNOHR29: OP must be within NOHR >= 0.48 um." )
   errorLayer( errnohr13                                "GRNOHR29: OP outside NOHR found!." )

 ;Rule NOHR30
    drc( nohr bfmoat    enc < 1.00  withSingularPoint   "GRNOHR30: BFMOAT within NOHR >= 1.00 um." )

 ;Rule NOHR999
   errnohr999 = geomStraddle( nohr chipedge )
   errorLayer( errnohr999                               "GRNOHR999: NOHR straddling CHIPEDGE is found!!")
  );End HIRESSUB


;DUAL GATE OXIDE DEVICE RULES
 ;Rule DG0
   errdg0 = geomXor( dgv geomButtOrOver( dg dgv ) )
   errorLayer( errdg0                       "GRDG0: DGV must be within DG == 0.000 um.")

 ;Rule DG1
   errdg1 = geomGetAngledEdge( dg 0 < keep < 90 fig )
   errorLayer( errdg1                       "GRDG1: Non-orthagonal DG found!")

 ;Rule DG2
   gate_dg      = geomAnd( gate dg )
   rx_touch_dg  = geomButtOrOver( rx dg )
   errdg2b_rect = geomGetPolygon( gate_dg )
   errdg2b_45   =  geomGetAngledEdge( gate_dg keep == 45 fig)
   errorLayer( errdg2b_rect                 "GRDG2b: Non-rectangular ((PC over RX) over DG) found!")
   errorLayer( errdg2b_45                   "GRDG2b: 45 degree ((PC over RX) over DG) found!")

 ;Rule DG3
   pc_touch_dg = geomButtOrOver( pc dg )
   drc( pc_touch_dg rx sep < 0.08            "GRDG3: (PC touching DG) to RX space >= 0.080 um.")

 ;Rule DG4
   gate_strad_dg = geomStraddle( gate dg )
   drc( dg gate enc < 0.50                   "GRDG4: (PC over RX) within DG >= 0.500 um.")
   errorLayer( gate_strad_dg                "GRDG4: (PC over RX) straddling DG found!")

 ;Rule DG5
   drc( gate dg sep < 0.50                   "GRDG5: (PC over RX) to DG space >= 0.500 um.")

 ;Rule DG6
   drc( dg width < 0.44                      "GRDG6: DG width >= 0.440 um.")

 ;Rule DG7
   drc( dg   sep < 0.44                      "GRDG7: DG space >= 0.440 um.")
   drc( dg notch < 0.44                      "GRDG7: DG notch >= 0.440 um.")

 ;Rule DG8
   diff_dg               = geomButtOnly( geomButtOrOver( diff dg ) gate )

   errdg8a               = geomAnd( geomAndNot( geomAndNot( geomAnd( drc( diff_dg sep < 0.40 ) dg ) dgv ) bp ) gate ) ;no bp = nfet
   errdg8b               = geomAnd( geomAnd( geomAndNot( geomAnd( drc( diff_dg sep < 0.40 ) dg ) dgv ) bp ) gate ) ; bp = pfet
   errorLayer( errdg8a                      "GRDG8a: (((PC over RX) over DG) not over DGV) width for NFET >= 0.400 um." )
   errorLayer( errdg8b                      "GRDG8b: (((PC over RX) over DG) not over DGV) width for PFET >= 0.400 um." )

   errdgv8a              = geomAnd( geomAndNot( geomAnd( geomAnd( drc( diff_dg sep < 0.32 ) dg ) dgv ) bp ) gate ) ;no bp = nfet
   errdgv8b              = geomAnd( geomAnd( geomAnd( geomAnd( drc( diff_dg sep < 0.32 ) dg ) dgv ) bp ) gate ) ; bp = pfet
   errorLayer( errdgv8a                      "GRDGV8a: (((PC over RX) over DG) over DGV) width for NFET >= 0.320 um." )
   errorLayer( errdgv8b                      "GRDGV8b: (((PC over RX) over DG) over DGV) width for PFET >= 0.320 um." )

   drc( gate_dg          sep < 0.30          "GRDG8c: ((PC over RX) over DG) space >= 0.300 um.")
   drc( ca_rx gate_dg    sep < 0.16          "GRDG8d: (CA over RX) to adj ((PC over RX) over DG) space >= 0.160 um.")

 ;Rule DG9
   drc( dg nw enc < 0.44                     "GRDG9: DG overlap past NW >= 0.440 um.")

; Rule DG10
   drc( dg nr sep < 0.70 "GRDG10 : DG to NR >= 0.700 um.")
   errdg10 = geomButtOrOver( dg nr )
   errorLayer( errdg10 "GRDG10: DG touching NR found!")

 ; Rule DG11
   drc( dg pr sep < 0.70 "GRDG11 : DG to PR >= 0.700 um.")
   errdg11 = geomButtOrOver( dg pr )
   errorLayer( errdg11 "GRDG11: DG touching PR found!")

 ;Rule DG13 ;see end of deck as we must introduce connectivity

 ;Rule DG14
   drc( dg nw 0 < ovlp < 0.44                "GRDG14: DG overlap of NW >= 0.440 um.")

 ;Rule DG15 (TOUCH COVERED BY 737)
   drc( dg pc_under_op 0 < sep < 0.70        "GRDG15: DG to (OP intersect PC) space >= 0.700 um.")

 ;Rule DG16
   drc( nw dg enc < 0.44                     "GRDG16: NW overlap past DG >= 0.440 um.")

 ;Rule DG21
   errdg21 = geomButtOrOver( dg bb )
   errorLayer( errdg21                      "GRDG21: DG touching BB found!")

 ;Rule DG50
   pc_ng_dg = geomAnd( pc_near_gt dg )
   errdg50  = geomAnd( gate_dg drc( pc_ng_dg sep < 0.50 ) )
   errorLayer( errdg50                      "GRDG50: ((RX over PC) over DG) width >= 0.500 um.")

 ;Rule DG52
   drc( rx_touch_dg rx 0 < sep < 0.38        "GRDG52: (RX touching DG) to RX space >= 0.380 um.")

 ;Rule DG110
   rx_over_dg = geomAnd( rx dg )
  ;drc( rx_over_dg pc enc < 0.38             "GRDG110: (RX over DG) overlap past PC >= 0.380 um.")
   errdg110   = geomAndNot( geomSize( geomGetEdge( pc over rx_over_dg ) 0.38 ) rx )
   errorLayer( errdg110                     "GRDG110: (RX over DG) overlap past PC >= 0.380 um.")

 ;Rule DG260 (STRADDLE COVERED BY GR260)
   pdiff_in_dg = geomButtOrOver( pdiff_in_nw dg )
   drc( nw pdiff_in_dg enc < 0.56 "GRDG260: (RX(P+) touching DG) within NW >= 0.560 um." )

 ;Rule DG265
   ndiff_in_dg = geomButtOrOver( ndiff dg )
   nw_touch_dg = geomButtOrOver( nw dg )
   drc( ndiff_in_dg nw          sep < 0.56   "GRDG265a: (RX(N+) touching DG) to adjacent NW >= 0.560 um.")
   drc( ndiff_in_dg bb          sep < 0.56   "GRDG265a1: (RX(N+) touching DG) to adjacent BB >= 0.560 um.")
   errdg265b_all = drc( ndiff       nw_touch_dg  sep < 0.56 )                                                 ; geta
   errdg265b = geomOutside( errdg265b_all  nw_touch_dg)                                                       ; geta
   errorLayer( errdg265b                      "GRDG265b: RX(N+) to adjacent (NW touching DG) >= 0.560 um.")   ; geta

 ;Rule DG268
   pdiff_dg268  = geomButtOrOver( geomAndNot( pdiff_in_nw geomOr( esdummy esd_cdm ) ) dg )
   ndiff0       = geomAndNot( ndiff geomOr( esdummy esd_cdm ) )
   nwc_fet0     = geomAndNot( geomButtOrOver( geomStraddle( ndiff0 nw ) pc ) nw )
  if( avSwitch("HIRESSUB") then
   njct0        = geomOr( geomOutside( geomButtOrOver( ndiff0 ca_all ) geomOr( nw bb bfmoat ti btgen hrgen ) ) nwc_fet0 )
  else
   njct0        = geomOr( geomOutside( geomButtOrOver( ndiff0 ca_all ) geomOr( nw bb bfmoat ) ) nwc_fet0 )
   )
   njct_dg268   = geomButtOrOver( njct0    dg )
   njct_dg268_in_pi=geomAnd( njct_dg268 pi)
   njct_dg268_in_sx=geomAndNot( njct_dg268 pi)


 ;Rule DG268
   errdg268a   = geomSepInside( pdiff_dg268 20.0 nwc_over_nw nw )
   errorLayer( errdg268a      "GRDG268a: (RX(in BP)touch DG) to RX(not BP) (same NW) space <= 20.000 um.")

   errdg268b_sx   = geomSepOutside( njct_dg268_in_sx 20.0 sxcont_268b sx_block )
   errdg268b_pi   = geomSepOutside( njct_dg268_in_pi 20.0 picont_268b sx_block )
   errdg268b   = geomOr(errdg268b_sx errdg268b_pi)

 ;Rule 268h
   err268h = geomAvoiding( nohr geomAndNot( pdiff geomOr( pi nw )))

 ;Rule 268i
   nw_tch_ngate = geomButtOrOver( nw geomAndNot( gate bp ) )
   sxcont_268i = geomAndNot( geomAndNot( geomAnd( rx bp ) nw ) pi )
   sxc_corners268i = geomGetCorner( sxcont_268i angleAll )
   sxc_crnr_sx268i = geomAndNot( sxcont_268i sxc_corners268i )
   sxc_x5300_268i = geomSizeAnd( sxc_crnr_sx268i bkgnd 0.10 53.0 )
   err268i = geomAndNot( nw_tch_ngate sxc_x5300_268i )

 if( avSwitch("HIRESSUB") then
    errorLayer( errdg268b       "GRDG268b_HR: (RX(no BP)touch DG) to Substrate Contact space <= 20.000 um.")
    errorLayer( err268h         "GR268h: NOHR not touching  ((RX over BP) not over (NW or PI)) found!!")
    errorLayer( err268i         "GR268i: Maximum {NW touching ((PC over RX) not over BP)} to substrate well contact <= 53.0um.")
 else
   errorLayer( errdg268b        "GRDG268b: (RX(no BP)touch DG) to Substrate Contact space <= 20.000 um.")
  )

;PD  RULES
 ;Rule PD1
   drc( pd width < 0.34                  "GRPD1: PD width >= 0.340 um.")

 ;Rule PD2a
   drc( pd   sep < 0.34                  "GRPD2a: PD space >= 0.340 um.")
   drc( pd notch < 0.34                  "GRPD2a: PD notch >= 0.340 um.")

 ;Rule PD3
   sbd_anode    = geomButtOrOver( pd_enclosure sbd )
   drc(sbd_anode width < 0.70            "GRPD3: PDHOLE width (for SBD anode) >= 0.700 um.")


 ;Rule PD4
   pd_pd4    = geomAndNot( pd geomButtOrOver( pd geomAnd( pd rx ) ) )
   errpd4    = geomButtOnly( pd_pd4 rx )
   errpd4bis = drc( pd_pd4 rx sep < 0.36 withSingularPoint )
   errorLayer( geomOr( errpd4 errpd4bis ) "GRPD4: PD to adj RX >= 0.360 um." )

 ;Rule PD5
   pd_sbd = geomButtOrOver( pd sbd )
   drc( pd_sbd rx   ovlp < 0.32          "GRPD5: RX intersect PD (SBD guardring) >= 0.320 um.")

 ;Rule PD6
   rx_not_sbd      = geomAndNot( rx sbd)
   rx_not_sbd_bp2  = geomAndNot( rx geomOr( sbd bp2nd))
   rx_strad_pd = geomStraddle( rx_not_sbd_bp2 pd )
   rx_sbd      = geomButtOrOver( rx pd_sbd )
   drc( pd     rx_not_sbd_bp2 enc < 0.20     "GRPD6: RX(not over (SBD or BP2ND)) within PD >= 0.200 um.")
   errorLayer( rx_strad_pd              "GRPD6: RX(not over (SBD or BP2ND)) straddling PD found!")
   drc( pd_sbd rx_sbd     enc < 0.36     "GRPD6a: PD overlap past RX(SBD guardring) >= 0.360 um.")
   drc( pd     rx_not_sbd enc < 0.14     "GRPD6b: RX(not over SBD) within PD >= 0.140 um.")

 ;Rule PD7
   drc(pd pc enc < 0.28                  "GRPD7: PD overlap past PC >= 0.280 um.")

 ;Rule PD9
   errpd9b = geomGetAngledEdge( pd 0 < keep < 90 fig )
   errorLayer( errpd9b                  "GRPD9b: Non-orthogonal PD shape found!")

 ;Rule PD10
   drc( pd pc sep < 0.28                  "GRPD10a: PD to adjacent PC >= 0.280 um.")
   drc( geomAnd( pd rr ) pc sep < 0.28    "GRPD10b: (PD over RR) to  PC >= 0.280 um.")

 ;Rule PD11
   drc( pd_enclosure area < 0.32         "GRPD11: PD enclosed area >= 0.320 sq.um.")

 ;Rule PD14
   ca_sbd  = geomButtOrOver( geomAndNot( ca rn ) sbd )
   errpd14 = geomAndNot( ca_sbd pd_sbd )
   drc( pd_sbd ca_sbd enc < 0.28         "GRPD14: CA(not over RN) must be within PD(SBD) >= 0.280 um.")
   errorLayer( errpd14                  "GRPD14: CA(not over RN) not within PD(SBD) found!")

 ;Rule PD15
   errpd15 = geomButtOrOver( geomButtOrOver( rx pd_sbd ) bp )
   errorLayer( errpd15                  "GRPD15: (RX touching PD(touching SBD)) touching BP(drawn) found!")

 ;Rule PD16
   errpd16 = geomButtOrOver( pd_sbd geomOr( pc geomOutside( rx pd ) ) )
   errorLayer( errpd16                  "GRPD16: PD(touching SBD) touching {PC or (RX not touching PD)} found!")

;RN RULES
 ;Rule RN1
   drc( rn width < 0.80                   "GRRN1: RN width >= 0.800 um.")

 ;Rule RN2
   drc( rn   sep < 1.28                   "GRRN2: RN space >= 1.280 um.")
   drc( rn notch < 1.28                   "GRRN2: RN notch >= 1.280 um.")

 ;Rule RN3
   drc( rn rx sep < 0.42                  "GRRN3: RN to adjacent RX >= 0.420 um.")

 ;Rule RN4
   rx_strad_rn = geomStraddle( rx rn )
  ;errrn4      = geomAndNot( geomSize( rn -0.14 ) geomButtOrOver( rx rn ) )
   drc( rn rx enc < 0.14                  "GRRN4: RX within RN >= 0.140 um.")
  ;errorLayer( errrn4                    "GRRN4: RX within RN == 0.140 um.(error >)")
   errorLayer( rx_strad_rn               "GRRN4: RX straddling RN found!")

 if( avSwitch("HIRESSUB") then
 ;Rule RN4
   errrn4b = geomAvoiding( geomAndNot( rn ti ) rx )
   errorLayer( errrn4b                    "GRRN4b: (RN not over TI) not touching RX found!!")
 )
 ;Rule RN5
   errrn5 = geomOverlap( geomAnd( rx rn ) geomAnd( geomSize( bpgen 0.01 ) geomAnd( rx rn ) ) )
   errorLayer( errrn5                    "GRRN5a: (RX within RN) touching BP found!")

 ;Rule RN6
   errrn6 = geomOverlap( rn geomAnd( geomSize( geomOr( pdiff_in_nw pdiff_in_bb ) 0.01 ) rn ) )
   errorLayer( errrn6                    "GRRN6: RN touching a P+ Junction found!")

 ;Rule RN7
   errrn7 = geomButtOrOver( rn sxcont )
   errorLayer( errrn7                    "GRRN7: RN touching a Substrate Contact found!")

 ;Rule RN9
 ; rn_enclosure = geomAndNot( geomHoles( rn ) rn )
 ; drc( rn_enclosure area < 0.537         "GRRN9: RN enclosed area >= 0.537 sq.um.")

 ;Rule RN10 (BUTTING COVERED BY PD4, BNGEN COVERED BY RN6 & RN7)
   errrn10pd = geomAnd( rx_over_rn pd )
   errorLayer( errrn10pd                 "GRRN10: (RN over RX) touching PD found!")

 ;Rule RN11
   errrn11 = geomAndNot( rn ns )
   errorLayer( errrn11                  "GRRN11: RN not within NS found!")

 ;Rule RN12
   drc( rn nw sep < 1.28                 "GRRN12: RN to NW space >= 1.280 um.")

 ;Rule RN13
   rn_or_nw = geomOr( rn nw )
   drc( rn_or_nw width < 0.70            "GRRN13: (RN union NW) width >= 0.700 um.")


;NS RULES
 ;Rule NS1
   drc( ns width < 4.50                   "GRNS1: NS width >= 4.500 um.")

 ;Rule NS2
   drc( ns   sep < 3.68                   "GRNS2: NS space >= 3.680 um.")
   drc( ns notch < 3.68                   "GRNS2: NS notch >= 3.680 um.")

 ;Rule NS4
   errns4b = geomButtOrOver( ns nw )
   errorLayer( errns4b                   "GRNS4b: NS touching NW found!")

 ;Rule NS5
   drc( ns nw  0 < sep < 3.68             "GRNS5: NS to adjacent NW space >= 3.680 um.")

 ;Rule CPNS7 (STRADDLE CHECKED BY NS9)
   errcpns7 = geomAndNot( geomSize( geomButtOrOver( bb ns ) -2.10 ) ns )
   drc( bb ns enc < 2.10                  "GRCPNS7: NS within BB == 2.100 um.(error <)")
   errorLayer( errcpns7                  "GRCPNS7: NS within BB == 2.100 um.(error >)")

 ;Rule NS9
   errns9 = geomAndNot( ns bb )
   errorLayer( errns9                    "GRNS9: NS not covered by BB found!")

 ;Rule NS10
   drc( ns bb sep < 5.20                  "GRNS10: NS to adjacent BB >= 5.200 um.")

 ;Rule NS15
   rx_jdvar     = geomOr( rx ns )
   errns15a_bb  = geomEnclose( bb rx_jdvar keep > 1 )
   errorLayer( errns15a_bb               "GRNS15a: More than one (RX union NS) shape in the same BB found!")


 ;Rule NS15bR/NS15cR
; if( avSwitch ( "CHECK_RECOMMENDED" ) then
;   nw_over_bb_ns15b=geomAnd(nw bb)
;   errns15bR=geomAndNot( nw_over_bb_ns15b ns)
;   errorLayer( errns15bR "GRNS15bR: (NW over BB) not covered by NS found !")

;   bb_abut_nw_ns15c=geomButting(bb nw)
;   errns15cR=geomButtOrOver( bb_abut_nw_ns15c nw keep > 1 )
;   errorLayer( errns15cR "GRNS15cR: (BB abutting NW) touching more than one NW found !")
; );END RECOMMENDED

 ;Rule NS16
   errns16 = geomOutside( ns geomAnd( rx rn ) )
   errorLayer( errns16                   "GRNS16: NS not enclosing RX(over RN) found!")

 ;Rule NS21
   errns21b_pd = geomAnd( ns geomAndNot( rx_pd sbd ) )
   errns21b_bp = geomAnd( ns geomAndNot( rx_bp sbd ) )
   drc( ns rx_pd sep < 2.76               "GRNS21b: NS to (RX touching PD) space >= 2.760 um.")
   drc( ns rx_bp sep < 2.76               "GRNS21b: NS to (RX touching BP) space >= 2.760 um.")
   errorLayer( errns21b_pd               "GRNS21b: NS touching ((RX touching PD) not over SBD) found!")
   errorLayer( errns21b_bp               "GRNS21b: NS touching ((RX touching BP) not over SBD)found!")

 ;Rule NS26
   errns26 = geomAvoiding( ns geomOr( jd pd_enclosure ) )
   errorLayer( errns26                   "GRNS26: NS not touching (JD (HAVAR) or PD hole (SBD)) found!")

;BB RULES
 ;Rule BB1
   bb_butt_nw             = geomButting( bb nw )
   bb_nobutt_nw           = geomAndNot( bb bb_butt_nw )
   bb_not_schky           = geomAndNot( bb schky )
   bb_not_schky_butt_nw   = geomButting( bb_not_schky nw )
   bb_not_schky_nobutt_nw = geomAndNot( bb_not_schky bb_not_schky_butt_nw )
   bb_touch_schky         = geomButtOrOver( bb geomSize( schky 0.001 ) )
   errbb1a      = geomWidth( bb_butt_nw keep > 1.00 )
   drc( bb_not_schky_nobutt_nw width < 2.76         "GRBB1: ((BB not over SCHY) not abutting NW) width >= 2.760 um.")
   drc( bb_touch_schky width < 0.98      "GRBB1b: BB(touching SCHKY) width >= 0.980 um." )

 if( avSwitch( "HIRESSUB" ) then
   bb_butt_nw_ovr_mos     = geomButting( bb geomAnd( nw mosvar ) )
   bb_butt_nw_not_mos     = geomButting( bb geomAndNot( nw mosvar ) )
   errorLayer( geomWidth( bb_butt_nw_ovr_mos keep > 1.00  )  "GRBB1a_HR: BB(abutting NW over MOSVAR) width == 1.00um(error >)")
   drc( bb_butt_nw_ovr_mos width < 1.00 withCornerTouch      "GRBB1a_HR: BB(abutting NW over MOSVAR) width == 1.00um(error <)")
   errorLayer( geomWidth( bb_butt_nw_not_mos keep > 2.00  )  "GRBB1b_HR: BB(abutting NW not over MOSVAR) width == 2.00um(error >)")
   drc( bb_butt_nw_not_mos width < 2.00 withCornerTouch      "GRBB1b_HR: BB(abutting NW not over MOSVAR) width == 2.00um(error <)")
 else
   errorLayer( geomWidth( bb_butt_nw keep > 1.00 )           "GRBB1a: BB(abutting NW) width == 1.000 um.(error >)" )
   drc( bb_butt_nw   width < 1.00                            "GRBB1a: BB(abutting NW) width == 1.000 um.(error <)" )
   )
 ;Rule BB2
   bb_and_nw = geomAnd( bb nw )
 if( avSwitch( "HIRESSUB" ) then
   errbb2hr = geomAndNot( drc( bb_wellasp sepNotch < 2.00 ) nw  )
   errorLayer( errbb2hr   "GRBB2_HR: (( BB to BB ) not over NW ) space( same potential) >= 2.00um.")
   errbb2bhr = geomOutside( drc( bb_not_nw sep < 7.00 diffNet  withSingularPoint shielded ) wellasp )
   errorLayer( errbb2bhr "GRBB2b_HR: (( BB to BB ) not over NW ) space(different potential) >= 2.00um.")
 else
   errbb2_0 = drc( bb_not_nw sepNotch < 2.00 )
   errbb2_1 = drc( bb_not_nw bb_and_nw sep < 2.00 )
   errorLayer( geomOr( errbb2_0 errbb2_1 ) "GRBB2: (BB to BB space) not over NW (including notch)  >= 2.00" )
  )

 ;Rule BB2a
   errbb2a = drc( bb_and_nw sepNotch < 0.50 )
   errorLayer( errbb2a "GRBB2a: (BB to BB space) over NW (including notch)   >= 0.50" )

 ;Rule BB6
   drc( bb_not_schky area < 9.60                    "GRBB6: (BB not over SCHKY) area >= 9.600 sq.um.")
   errbc6b = geomAndNot( schky nw )
   errorLayer( errbc6b "GRBB6a: SCHKY must be covered by NW" )

 ;Rule BB7
   bb_enclosure = geomAndNot( geomHoles( bb ) bb )
   drc( bb_enclosure area < 4.00          "GRBB7: BB enclosed area >= 4.000 sq.um.")

 ;Rule BB34
   errbb34_over = geomAnd( geomAndNot( bb schky ) nw )
   drc( geomAndNot( bb schky ) nw 0 < sep < 0.01 withSingularPoint  "GRBB34: BB touching(singular) NW found!" )
   errorLayer( errbb34_over              "GRBB34: BB over NW found!")

 ;Rule BB34a
   errbb34a1 = geomOr( ns nw rn )
   errbb34a2 = geomButtOrOver( bb errbb34a1 keep > 1 )
   errorLayer( errbb34a2       "GRBB34a: BB touching more than one (union(union(NS, NW), RN)) shapes not allowed !" )

 ;Rule BB35
   errbb35a = geomButtOrOver( bb bp )
   drc( bb bp  0 < sep < 0.44             "GRBB35: BB to adjacent BP >= 0.440 um.")
   errorLayer( errbb35a                  "GRBB35a: BB touching BP found!")

 ;Rule BB37
   bb_ind   = geomButtOrOver( bb ind_filt )
   bb_pcres = geomAnd( bb geomSize( pc_res 0.40 ) )
   bp_pcres = geomAnd( bp geomSize( pc_res 0.40 ) )
   serp_bb37= geomAnd( geomOr( bb bp) geomAnd( rr  geomSize( pc_res 0.8)) )
   errbb37  = geomAndNot( pd geomOr( bb_ind bb_pcres bp_pcres sbd bp2nd serp_bb37) )
   errorLayer( errbb37 "GRBB37: PD not within {[BB touch IND_FLT] or [(BP or BB) over (PC(res)+ 0.40)] or SBD or BP2ND or ((BB or BP) intersect (RR intersect (PC touching OP)expanded by 0.8))} found!")

 ;Rule BB38
   errbb38 = geomAvoiding( geomAndNot( geomButtOrOver( geomAndNot( rx schky ) bb ) ind_filt ) ns )
   errorLayer( errbb38                   "GRBB38: (((RX not over SCHKY) touching BB) not over IND_FILT) must be touching NS")

 ;Rule BB41
   pc_strad_bb = geomStraddle( pc bb )
   drc( bb pc enc < 0.50                  "GRBB41: PC within BB >= 0.500 um.")
   errorLayer( pc_strad_bb               "GRBB41: PC straddling BB found!")

 if( avSwitch("HIRESSUB") then
 ;Rule WELLASP1
  foreach( level '( nw bb pi )
      let(( errMsgw1 errwellasp1 )
          errwellasp1 = strcat( "errwellasp1_" level )
          errwellasp1 = geomStraddle( eval(level) wellasp )
          sprintf( errMsgw1  "GRWELLASP1: %s straddle WELLASP found!" upperCase(level))
          errorLayer( errwellasp1  errMsgw1 )
      );End Let
  );End foreach
 );End of HIRESSUB

 ;Rule PBN10 (PC STRADDLING BB COVERED BY BB41)
   bb_or_bp    = geomOr( bb bp )
   pc_touch_pd = geomButtOrOver( pc pd )
   pc_touch_rr = geomButtOrOver( pc rr )
   pc_touch_rp = geomButtOrOver( pc rp )
   errpbn10_pd = geomAndNot( pc_touch_pd bb_or_bp )
   errpbn10_rr = geomAndNot( pc_touch_rr bb_or_bp )
   errpbn10_rp = geomAndNot( pc_touch_rp bb_or_bp )
   drc( bb_or_bp pc_touch_pd enc < 0.40   "GRPBN10: PC(touch PD) must be within {BP or BB} >= 0.400 um.")
   drc( bb_or_bp pc_touch_rr enc < 0.40   "GRPBN10: PC(touch RR) must be within {BP or BB} >= 0.400 um.")
   drc( bb_or_bp pc_touch_rp enc < 0.40   "GRPBN10: PC(touch RP) must be within {BP or BB} >= 0.400 um.")
   errorLayer( errpbn10_pd               "GRPBN10: PC(touching PD) not within {BP or BB} found!")
   errorLayer( errpbn10_rr               "GRPBN10: PC(touching RR) not within {BP or BB} found!")
   errorLayer( errpbn10_rp               "GRPBN10: PC(touching RP) not within {BP or BB} found!")

 ;Rule PBN11
   errpbn11 = geomAndNot( geomAnd( geomButtOrOver( pc ca_all ) bb ) geomOr( pd rr rp ) )
   errorLayer( errpbn11                  "GRPBN11: (PC(touching CA/CABAR) intersect BB) not within {PD/RR/RP} found!")

 ;Rule PBN12 (PC STRADDLING BB COVERED BY BB41)
   drc( pc bb sep < 0.32                  "GRPBN12: PC to adjacent BB space >= 0.320 um.")


;TRIPLE WELL NFET RULES
 ;Rule TW01
   errtw1a = geomGetAngledEdge( pi 0 < keep < 90 fig )
   drc( pi      width < 3.20           "GRTW01: PI width >= 3.20 um.")
   errorLayer( errtw1a                "GRTW01a: Non-orthagonal PI found!")

 ;Rule TW02
  if( avSwitch("HIRESSUB") then
   geomConnect( incremental
       buttOrOver( pi wellasp )
   )

   pi_wellasp = geomNodeRelate( pi wellasp conn )
   errtw02_asp = geomButtOrOver( nw_wellasp pi_wellasp keep > 1)
   drc( geomOverlap( pi_wellasp errtw02_asp)    sepNotch < 4.00               "GRTW02_HR: PI space (PI shapes touching the same NW ) >= 4.00 um." )
   pinonw     = geomAvoiding( pi_wellasp nw_wellasp )
   err_tw02_a = geomButtOrOver( nw_wellasp pi_wellasp keep == 1 )
   err_tw02_b = drc( geomOverlap( pi_wellasp err_tw02_a ) sep < 4.30 withSingularPoint )
   err_tw02_c = drc( pinonw sepNotch < 4.30 withSingularPoint )
   errorLayer( geomOr( err_tw02_b err_tw02_c ) "GRTW02_HR: PI space >= 4.30 um." )
   geomConnect( incremental
        via( ca_via    rx_over_bp     pi )
   )
   errtw02bhr = geomOutside( drc( pi sep < 13.0  diffNet ) wellasp )
   errorLayer(  errtw02bhr                     "GRTW02b_HR: PI space ( differnet potential) >= 13.0um.")

  else
   err_tw02 = geomButtOrOver( nw pi keep > 1)
   drc( geomOverlap( pi err_tw02)    sep < 4.00               "GRTW02: PI space (PI shapes touching the same NW ) >= 4.00 um." )
   drc( pi                         notch < 4.00               "GRTW02: PI notch (PI shapes touching the same NW ) >= 4.00 um." )
   pinonw     = geomAvoiding( pi nw )
   err_tw02_a = geomButtOrOver( nw pi keep == 1 )
   err_tw02_b = drc( geomOverlap( pi err_tw02_a ) sep < 4.30 withSingularPoint )
   err_tw02_c = drc( pinonw sepNotch < 4.30 withSingularPoint )
   errorLayer( geomOr( err_tw02_b err_tw02_c ) "GRTW02: PI space >= 4.30 um." )
   )

 ;Rule TW03
   foreach( level '( rn nr pr di )
      let(( errMsgtw03 errtw03 )
          errtw03 = strcat( "errtw03" level )
          errtw03 = geomButtOrOver( pi eval(level))
          sprintf( errMsgtw03  "GRTW03: PI touching %s found!" upperCase(level))
          errorLayer( errtw03   errMsgtw03 )
       );End Let
    );End foreach

 ;Rule TW03a
   errtw3apd = geomButtOrOver( pi geomAndNot( pd bp2nd))
   errorLayer( errtw3apd "GRTW03a: PI touching  (PD not over BP2ND) found!")


 ;Rule TW04
   bkgndored = geomOr( bkgnd )
  ;errtw4 = geomAndNot( geomSize( geomStretch( geomGetEdge( pi over bkgndored ) -0.02 ) -0.02 ) nw )
   errtw4 = geomAndNot( geomSize( geomStretch( geomGetEdge( pi ) -0.02 ) -0.02 ) nw )
   errorLayer( errtw4                 "GRTW04: PI(edge) not covered by NW found!")

 ;Rule TW05
   drc( pi nw    ovlp < 1.00           "GRTW05: PI overlap of NW >= 1.00 um.")

 ;Rule TW06
   drc( nw pi     enc < 1.10           "GRTW06: NW overlap past PI >= 1.10 um.")

  ;Rule TW06aR
;  if( avSwitch( "CHECK_RECOMMENDED" ) then
;   nw_w_pdiff_in_tw = geomButtOrOver( geomButtOrOver( nw pi ) pdiff )
;   errtw06ar = geomSize( geomSize( geomAndNot( nw_w_pdiff_in_tw pi) -0.55 ) 0.55)
;   drc( nw_w_pdiff_in_tw pi enc < 1.10           "GRTW06aR: NW overlap past PI with P+ diffusion = 1.10 um. (error < 1.10um)")
;   errorLayer( errtw06ar                        "GRTW06aR: NW overlap past PI with P+ diffusion = 1.10 um. (error > 1.10um)")
;  ); END OF RECOMMENDED

 ;Rule TW09 (REMOVED IN V1100 KIT)

 ;Rule TW10
   errtw10  = geomButtOrOver( pi bb )
   errtw10a = geomButtOrOver( pi ns )
   errtw10b = geomAndNot( drc( pi bb 0 < sep < 3.20) nw)
   errorLayer( errtw10b               "GRTW10: (PI to adjacent BB) not over NW >= 3.20 um.")
  ; errorLayer( errtw10                "GRTW10: PI touching BB found!")
   drc( pi ns 0 < sep < 5.52           "GRTW10a: PI to adjacent NS >= 5.52 um.")
   errorLayer( errtw10a               "GRTW10a: PI touching NS found!")

 ;Rule TW10b
   errtw10b = geomOr( geomGetEdge( geomAnd( bb pi) outside geomOr( nw bp2nd))  geomGetEdge( geomAnd( bb pi) inside geomOr( nw bp2nd)))
   errorLayer( errtw10b               "GRTW10b: all (BB over PI) edges must abut (NW or BP2ND)")


 ;Rule TW10a1
   errtw10a1 = geomAnd( drc( pi bb 0 < sep < 1.10) nw)
   errorLayer( errtw10a1              "GRTW10a1: (PI to adjacent BB) over NW >= 1.10 um.")
   pi_ovr_nw = geomAnd( pi nw )
   errtw10c = geomOverlap( pi_ovr_nw bb )
   pi_bb_over_nw = geomAnd( geomButtOrOver( pi bb) nw)
   pi_ovr_nw_hole = geomHoles( pi_ovr_nw )
   pi_edg_check = geomSize( geomGetEdge( pi_bb_over_nw butting pi_ovr_nw_hole ) 0.01)
   errtw10d = geomAndNot( pi_edg_check bb)
   errorLayer( errtw10c               "GRTW10a1: (PI over NW) overlapping BB found!")
   errorLayer( errtw10d               "GRTW10a1: All (((PI touching BB) over NW) edges touching (PI over NW) hole) must abut BB.")

 ;Rule TW15
  ;gate_vts      = geomAnd( gate vtsens )
  ;gate_strad_pi = geomStraddle( gate_vts pi )
  ;drc( pi gate_vts enc < 3.00         "GRTW15: ((RX over PC) over VTSENS) within PI >= 3.000 um.")
  ;errorLayer( gate_strad_pi          "GRTW15: ((RX over PC) over VTSENS) straddling PI found!")

 ;Rule TW16   (REMOVED IN V1200 KIT)
;  nw_tw_pfet = geomButtOrOver( geomButtOrOver( nw pi ) pdiff_in_nw )
;  drc( nw_tw_pfet width < 2.10        "GRTW16a: ((NW touching PI) touching (RX over BP)) width >= 2.100 um.")

 ;Rule TW17   (REMOVED IN V1200 KIT)
  pdinnw_vts   = geomButtOrOver( pdiff_in_nw vtsens )
;  tw_with_pfet = geomButtOrOver( pi geomButtOrOver( nw pdiff ) )
;  tw_sxc       = geomButtOrOver( pdiff pi )
;  tw_sxc_hole  = geomAndNot( geomHoles( tw_sxc ) tw_sxc )
;  tw_dev       = geomButtOrOver( geomOutside( ndiff nw ) pi )
;  errtw17      = geomAndNot( geomButtOrOver( tw_dev tw_with_pfet ) tw_sxc_hole )
;  errorLayer( errtw17                "GRTW17: RX(NFETTW) not surrounded by a ((RX over BP) over PI) ring found!")
  drc( pdinnw_vts pi     sep < 1.00   "GRTW17a: (((RX over BP) over VTSENS) over NW) to PI space >= 1.000 um.")

 ;Rule TW18 (PI WILL NEVER ABUT NW - SEE TW4 & TW6)
   pi_319       = geomSize( pi 3.19 )
   errtw18      = geomButting( drc( pi nw 0 < sep < 3.20 diffNet) geomAnd( pi geomButtOrOver( pi_319 nw keep >1 ) ) )
   errorLayer( errtw18                "GRTW18: PI to NW space >= 3.200 um.")
;   drc( pi nw sep < 3.20               "GRTW18: PI to NW space >= 3.200 um.")
;  drc( pi nw 0 < sep < 3.20 diffNet     "GRTW18: PI to adjacent NW space >= 3.200 um.")

 ;Rule TW19
   errpi5 = geomOutside( geomAndNot( pi nw ) geomOr( sxcont geomAnd( rx pd)))
   errorLayer( errpi5                 "GRTW19: PI(not over NW) not touching a Pwell contact found!")

   pi_not_nw = geomAndNot( pi nw )
   nw_pi          = geomButtOrOver( nw pi )
   nwpi_pd        = geomButtOrOver( nw_pi pdiff )
   ndiff_in_pi    = geomAnd( ndiff pi )
   ndiff_indg_tpi = geomAnd( ndiff_in_dg pi )

 if( !avSwitch( "DSRAM" ) then
 ;Rule TW260
   drc( pdiff_in_nw pi_not_nw  sep < 0.42
                                       "GRTW260: ((RX over BP) over NW) to (PI not over NW) space >= 0.420 um.")

 ;Rule TW265    ( 265a1 REMOVED IN V1200 KIT)
   errtw265 = geomOutside( drc( ndiff_in_pi    nw_pi   sep < 0.420 ) nw_pi )
   errorLayer( errtw265 "GRTW265: (RX(not over BP) over PI) to adjacent (NW touching PI) >= 0.420 um." )

 );END OF NOT DSRAM

   drc( ndiff_indg_tpi nw_pi   sep < 0.560 "GRTW265a: ((RX(not over BP) touch DG) over PI) to adjacent (NW touching PI) >= 0.560 um.")
;  drc( ndiff_in_pi nwpi_pd sep < 1.00 "GRTW265a1:(RX(not BP) over PI) to (NW touch (RX over BP) touch PI) >= 1.00 um.")

 ;Rule TW266
   sxc_not_pi = geomAndNot( sxcont pi )
   drc( sxc_not_pi nw_pi sep < 0.16    "GRTW266: (RX(over BP) not over PI) to (NW touching PI) space >= 0.160 um.")


;ZEROVT NFET RULES
 ;Rule 1
   diff_zvt     = geomButtOrOver( diff zerovt )
   diff_zvt_dg  = geomAnd( geomButtOrOver( diff zerovt ) dg )
   err1a        = geomAnd( drc( diff_zvt sep < 0.70 ) zerovt )
   err1b        = geomAnd( drc( diff_zvt_dg sep < 0.80 ) zerovt )
   errorLayer( err1a                      "GR1a: (Gate over ZEROVT) width >= 0.70 um.")
   errorLayer( err1b                      "GR1b: ((Gate over ZEROVT) over DG) width >= 0.80 um.")

 ;Rule 10
   ngate_zvt        = geomButtOrOver( ngate zerovt )
   pc_near_gt_zvt   = geomButtOrOver( pc_near_gt ngate_zvt )
   zvtgt_width_fail = drc( pc_near_gt_zvt sep < 3.00 opposite parallel)
   err10a           = geomAnd( ngate_zvt zvtgt_width_fail )
   errorLayer( err10a                     "GR10a: ((RX under PC) touching ZEROVT) width >= 3.00 um.")

 ;Rule 122a
   err122a = geomGetPolygon( geomAnd( gate zerovt ) )
   errorLayer( err122a                     "GR122a: Polygonal (PC over RX) (bent gates) over ZEROVT found!")

 ;Rule 280
   err280a = geomGetAngledEdge( zerovt 0 < keep < 90 fig )
   drc( zerovt width < 2.40                "GR280: ZEROVT width >= 2.40 um.")
   errorLayer( err280a                    "GR280a: Non-orthagonal ZEROVT shapes found!")

 ;Rule 282
   drc( zerovt   sep < 1.88                "GR282: ZEROVT space >= 1.88 um.")
   drc( zerovt notch < 1.88                "GR282: ZEROVT notch >= 1.88 um.")

 ;Rule 283
   err283 = geomButtOrOver( zerovt rx keep > 1 )
   errorLayer( err283                     "GR283: ZEROVT touching more than one RX shape found!")

 ;Rule 284
   zvt_not_rx = geomAndNot( zerovt rx )
   err284_gt  = geomAndNot( geomSize( geomButtOrOver( rx zerovt ) -0.30 ) zerovt )
   drc( rx zerovt enc < 0.30               "GR284: ZEROVT must be within RX == 0.30 um. (error <)")
   errorLayer( err284_gt                  "GR284: ZEROVT must be within RX == 0.30 um. (error >)")
   errorLayer( zvt_not_rx                 "GR284: ZEROVT not within RX found!")


 ;Rule 286 (BB IS COVERED BY 289a BELOW)
   err286 = geomButtOrOver( bp zerovt )
   err286bis = drc( bp zerovt sep < 0.01 withSingularPoint )
   errorLayer( geomOr( err286 err286bis )                     "GR286: BP touching ZEROVT found!")


 ;Rule 288
   drc( zerovt rx 0 < sep < 1.30           "GR288: ZEROVT to adjacent RX >= 1.30 um.")


 ;Rule 289
   err289  = geomButtOrOver( zerovt nw )
   err289a = geomButtOrOver( zerovt bb )
   err289abis = drc( bb zerovt sep < 0.01 withSingularPoint )
   drc( zerovt nw  0 < sep < 1.66          "GR289: ZEROVT to NW space >= 1.66 um.")
   errorLayer( err289                     "GR289: ZEROVT touching NW found!")
   drc( zerovt bb  0 < sep < 1.90          "GR289a: ZEROVT to BB space >= 1.90 um.")
   errorLayer( geomOr( err289a err289abis )                    "GR289a: ZEROVT touching BB found!")


 ;Rule ZT1
   drc( zerovt gate enc < 0.92             "GRZT1: ZEROVT overlap past (PC over RX) >= 0.92 um.")

 ;Rule ZT2
   ;zvt_edge_out   = geomSize( geomGetEdge( zerovt over bkgnd ) 0.01 )
   ;zvt_halo_out   = geomAndNot( geomSize( zerovt 0.01 ) zerovt )
   ;zvt_corner_out = geomAndNot( zvt_halo_out zvt_edge_out )
   ;errzt2         = geomOverlap( zerovt geomSize( geomAnd( zvt_corner_out ngate_zvt ) 0.01 ) )
   ;errorLayer( errzt2                     "GRZT2: ZEROVT vertices over (PC over RX) found!")

   zvt_edge_out   = geomSize( zerovt 0.01 edges )
   zvt_halo_out   = geomAndNot( geomSize( zerovt 0.01 ) zerovt )
   zvt_corner_out = geomAndNot( zvt_halo_out zvt_edge_out )
   zvt_edge_in    = geomSize( zerovt -0.01 edges )
   zvt_halo_in    = geomAndNot( zerovt geomSize( zerovt -0.01 ) )
   zvt_corner_in  = geomAndNot( zvt_halo_in zvt_edge_in )
   zvt_corner_err = geomOverlap( zerovt geomAnd( geomSize( geomOr( zvt_corner_out zvt_corner_in ) 0.01 ) ngate_zvt ) )
   errorLayer( zvt_corner_err             "GRZT2: ZEROVT vertices over (PC over RX) found!")


 ;Rule ZT3
   drc( zerovt dg sep < 1.20               "GRZT3: ZEROVT to adjacent DG >= 1.20 um.")

 ;Rule ZT4
   drc( zerovt pc_under_op sep < 1.32      "GRZT4: ZEROVT to adjacent (PC under OP) >= 1.32 um.")

 ;Rule ZT5
   errzt5_jd = geomButtOrOver( zerovt jd )
   errzt5_rp = geomButtOrOver( zerovt rp )
   errzt5_rr = geomButtOrOver( zerovt rr )
   drc( zerovt jd  0 < sep < 1.66          "GRZT5: ZEROVT to JD space >= 1.66 um.")
   drc( zerovt rp  0 < sep < 1.66          "GRZT5: ZEROVT to RP space >= 1.66 um.")
   drc( zerovt rr  0 < sep < 1.66          "GRZT5: ZEROVT to RR space >= 1.66 um.")
   errorLayer( errzt5_jd                  "GRZT5: ZEROVT touching JD found!")
   errorLayer( errzt5_rp                  "GRZT5: ZEROVT touching RP found!")
   errorLayer( errzt5_rr                  "GRZT5: ZEROVT touching RR found!")

 ;Rule ZT6
   errzt6 = geomButtOrOver( zerovt pi )
   drc( zerovt pi  0 < sep < 3.00          "GRZT6: ZEROVT to PI space >= 3.00 um.")
   errorLayer( errzt6                     "GRZT6: ZEROVT touching PI found!")

 ;Rule ZT9
   errzt9 = geomOr( geomButtOrOver( zerovt op )  geomOverlap( zerovt geomAnd( geomSize( op 0.01 ) zerovt )))
   ;errzt9_1 = geomOverlap( zerovt geomAnd( geomSize( op 0.01 ) zerovt ))
   errorLayer( errzt9                       "GRZT9: ZEROVT touching OP found!")
   ;errorLayer( errzt9_1                     "GRZT9: ZEROVT touching OP found!")


;BFMOAT RULES
 ;Rule 790
   drc( bfmoat width < 10.0                "GR790: BFMOAT width >= 10.000 um.")

 ;Rule 792
   drc( bb     bfmoat 0 < sep < 10.0       "GR792: BB to adjacent BFMOAT space >= 10.000 um.")
   drc( bfmoat        0 < sep < 10.0       "GR792: BFMOAT space >= 10.000 um.")
   drc( bfmoat          notch < 10.0       "GR792: BFMOAT notch >= 10.000 um.")

 ;Rule 793
   drc( bfmoat nw     0 < sep < 2.0        "GR793: BFMOAT to adjacent NW space >= 2.000 um.")

 ;Rule 795
   drc( bfmoat rx     0 < sep < 1.0        "GR795: BFMOAT to adjacent RX space >= 1.000 um.")

 ;Rule 796
   drc( bfmoat zerovt     0 < sep < 2.0        "GR796: BFMOAT to adjacent ZEROVT space >= 2.000 um.")


 ;Rule 799
   err799bb  = geomButtOrOver( bb bfmoat )
   err799nw  = geomButtOrOver( nw bfmoat )
   err799pc  = geomButtOrOver( pc bfmoat )
   err799rx  = geomButtOrOver( rx bfmoat )
   err799ns  = geomButtOrOver( ns bfmoat )
   err799nr  = geomButtOrOver( nr bfmoat )
   err799pr  = geomButtOrOver( pr bfmoat )
   err799pi  = geomButtOrOver( pi bfmoat )
   errorLayer( err799bb                   "GR799: BB touching BFMOAT found!")
   errorLayer( err799nw                   "GR799: NW touching BFMOAT found!")
   errorLayer( err799pc                   "GR799: PC touching BFMOAT found!")
   errorLayer( err799rx                   "GR799: RX touching BFMOAT found!")
   errorLayer( err799ns                   "GR799: NS touching BFMOAT found!")
   errorLayer( err799nr                   "GR799: NR touching BFMOAT found!")
   errorLayer( err799pr                   "GR799: PR touching BFMOAT found!")
   errorLayer( err799pi                   "GR799: PI touching BFMOAT found!")

 ;Rule 799R
  if( avSwitch( "CHECK_RECOMMENDED" ) then
   err799r1 = geomOr( rx pc ind_filt qt nw k1 )
   err799r2 = geomAndNot( bb geomButtOrOver( bb err799r1 keep >= 1 ) )
   errorLayer( err799r2        "GR799R: BB must touch at least one shape of (RX,PC,IND_FILT,QT,NW or K1)")
  ); END OF RECOMMENDED

;CA, METAL, VIA LAYOUT RULES
   am_out_logo = geomAvoiding( am logobnd )
   m1_out_logo = geomAvoiding( m1 logobnd )
   m2_out_logo = geomAvoiding( m2 logobnd )
   m3_out_logo = geomAvoiding( m3 logobnd )
   m4_out_logo = geomAvoiding( m4 logobnd )
   m5_out_logo = geomAvoiding( m5 logobnd )
   mt_out_logo = geomAvoiding( mt logobnd )

 if( !avSwitch( "DSRAM" ) then
 ;Rule 500
   err500b = geomWidth( m1 keep > 35.00 )
   drc( m1 width < 0.24 withCornerTouch   "GR500: M1 width (min) >= 0.240 um.")
   errorLayer( err500b                    "GR500b: M1 width (max) <= 35.000 um.")
 );END OF NOT DSRAM

 ;Rule 501
   m1_enclosure = geomAndNot( geomHoles( m1_not_ring ) m1_not_ring )
   drc( m1           area < 0.172          "GR501a: M1 area >= 0.172 sq.um.")
   drc( m1_enclosure area < 0.705          "GR501b: M1 enclosed area >= 0.705 sq. um.")

 if( !avSwitch( "DSRAM" ) then
 ;Rule 502
   drc( m1   sep < 0.20                    "GR502: M1 space >= 0.200 um.")
   drc( m1 notch < 0.20                    "GR502: M1 notch >= 0.200 um.")

 );END OF NOT DSRAM

;===== IDENTIFY WIDE METAL AREAS =====
  drcTable( m1_out_logo
     ( width > 1.60   widthOutput( m1_gt_160 ) )
      );End of drcTable - M1 fat gen
  drcTable( m2_out_logo
     ( width > 1.60   widthOutput( m2_gt_160 ) )
      );End of drcTable - M2 fat gen
  drcTable( m3_out_logo
     ( width > 1.60   widthOutput( m3_gt_160 ) )
      );End of drcTable - M3 fat gen
  drcTable( m4_out_logo
     ( width > 1.60   widthOutput( m4_gt_160 ) )
      );End of drcTable - M4 fat gen
  drcTable( m5_out_logo
     ( width > 1.60   widthOutput( m5_gt_160 ) )
     );End of drcTable - M5 fat gen
  drcTable( mt_out_logo
     ( width > 1.60   widthOutput( mt_gt_160 ) )
     );End of drcTable - MT fat gen

 ;Rule 504xx
   m1_out_grlogic = geomAndNot( m1 grlogic )
   err504       = geomAnd(m1 geomWidth( m1 keep > 1.48 truncate 0.74 ))
   err504aTN    = geomAnd(m1 geomWidth( m1 keep > 1.60 truncate 0.80 ))
   err504b      = geomAnd(m1 geomWidth( m1 keep > 4.00 truncate 2.00 ))

   drc( err504     m1 sep <  0.32   shielded "GR504:   M1(>1.48) to M1 (run >0) space >= 0.32 um.")
   drc( err504b    m1 sep <  0.60   shielded "GR504b:  M1(>4.00) to M1 (run >0) space >= 0.60 um.")
   out2 = drc( err504aTN  m1 sep <  0.36   shielded )
   errorLayer( geomAndNot( out2 grlogic ) "GR504a:  M1(>1.60) to M1 (run >0) space >= 0.36 um.")


 if( avSwitch( "CHECK_RECOMMENDED") then
   drcTable( m1_out_logo
       ( width >  1.40 sepNotch < 0.60 withSingularPoint shielded  sepError( out3  "GR504R:  M1(>1.40) to M1 (run >0) space >= 0.60 um.") )
       ( width >  8.00 sepNotch < 1.12 withSingularPoint shielded  sepError( out5  "GR504cR: M1(>8.00) to M1 (run >0) space >= 1.12 um.") )
       ( width > 25.00 sepNotch < 1.92 withSingularPoint shielded  sepError( out6  "GR504dR: M1(>25.0) to M1 (run >0) space >= 1.92 um.") )
    );End of drcTable - M1
  )
   ca_no_m1  = geomAndNot( ca    m1 )
   cab_no_m1 = geomAndNot( cabar m1 )
 if( !avSwitch( "DSRAM" ) then
 ;Rule 505
   drc( m1 ca    enc < 0.02                "GR505a: CA must be within M1 >= 0.020 um.")
   errorLayer( ca_no_m1                    "GR505a: CA not within M1 found!")
 );END OF NOT DSRAM

   drc( m1 cabar enc < 0.04                "GR505b: CABAR must be within M1 >= 0.040 um.")
   errorLayer( cab_no_m1                   "GR505b: CABAR not within M1 found!")

 ;Rule 550
   drc( v1 width < 0.28 withCornerTouch  "GR550: V1 width and length == 0.280 um. (error <)")
   drc( v2 width < 0.28 withCornerTouch  "GR550: V2 width and length == 0.280 um. (error <)")
   drc( v3 width < 0.28 withCornerTouch  "GR550: V3 width and length == 0.280 um. (error <)")
   drc( v4 width < 0.28 withCornerTouch  "GR550: V4 width and length == 0.280 um. (error <)")
   drc( v5 width < 0.28 withCornerTouch  "GR550: V5 width and length == 0.280 um. (error <)")

   drc( v1  area > 0.0784                "GR550: V1 width and length == 0.280 um. (error >)")
   drc( v2  area > 0.0784                "GR550: V2 width and length == 0.280 um. (error >)")
   drc( v3  area > 0.0784                "GR550: V3 width and length == 0.280 um. (error >)")
   drc( v4  area > 0.0784                "GR550: V4 width and length == 0.280 um. (error >)")
   drc( v5  area > 0.0784                "GR550: V5 width and length == 0.280 um. (error >)")

 ;Rule 553
   drc( v1 sep < 0.28 withSingularPoint  "GR553a: V1 to V1 space >= 0.280 um.")
   drc( v2 sep < 0.28 withSingularPoint  "GR553a: V2 to V2 space >= 0.280 um.")
   drc( v3 sep < 0.28 withSingularPoint  "GR553a: V3 to V3 space >= 0.280 um.")
   drc( v4 sep < 0.28 withSingularPoint  "GR553a: V4 to V4 space >= 0.280 um.")
   drc( v5 sep < 0.28 withSingularPoint  "GR553a: V5 to V5 space >= 0.280 um.")

 ;Rule 557
  foreach( level '( v1 v2 v3 v4 v5 )
    let(( errMsg0 errMsg1 )
        err557_0 = strcat( level "_polygon" )
        err557_1 = strcat( level "_45" )
        err557_0 = geomGetPolygon( eval( level ))
        err557_1 = geomGetAngledEdge( eval(level) keep == 45 fig)
        sprintf( errMsg0    "GR557: Non-rectangular %s found!" upperCase(level))
        sprintf( errMsg1    "GR557: 45 degree %s found!" upperCase(level))
        errorLayer( err557_0  errMsg0 )
        errorLayer( err557_1  errMsg1 )
    );End errMsg
  );End foreach

 if( avSwitch( "GUARDEDGE_PRESENT" ) then
   ;Rule 558
    foreach( level '( v1bar v2bar v3bar v4bar v5bar )
      let(( errMsg )
         err558v1b = strcat( "err558" level)
         err558v5b = geomOutside( eval(level) grdr_or_crk )
         sprintf( errMsg    "GR558: %s outside of (GUARDRNG or CRACKSTOP) found! " upperCase(level))
         errorLayer( err558v5b errMsg )
      );End errMsg
    );End foreach

   ;Rule 560 (VxBAR width over GUARDRNG or CRACKSTOP is covered by 990e)
     err560_V1 = geomWidth( v1b_not_ecm keep > 0.28 )
     drc( v1b_not_ecm width < 0.28  "GR560: V1BAR width == 0.20 um. (error <)")
     errorLayer( err560_V1          "GR560: V1BAR width == 0.20 um. (error >)")

     err560_V2 = geomWidth( v2b_not_ecm keep > 0.28 )
     drc( v2b_not_ecm width < 0.28  "GR560: V2BAR width == 0.20 um. (error <)")
     errorLayer( err560_V2          "GR560: V2BAR width == 0.20 um. (error >)")

     err560_V3 = geomWidth( v3b_not_ecm keep > 0.28 )
     drc( v3b_not_ecm width < 0.28  "GR560: V3BAR width == 0.20 um. (error <)")
     errorLayer( err560_V3          "GR560: V3BAR width == 0.20 um. (error >)")

     err560_V4 = geomWidth( v4b_not_ecm keep > 0.28 )
     drc( v4b_not_ecm width < 0.28  "GR560: V4BAR width == 0.20 um. (error <)")
     errorLayer( err560_V4          "GR560: V4BAR width == 0.20 um. (error >)")

     err560_V5 = geomWidth( v5b_not_ecm keep > 0.28 )
     drc( v5b_not_ecm width < 0.28  "GR560: V5BAR width == 0.20 um. (error <)")
     errorLayer( err560_V5          "GR560: V5BAR width == 0.20 um. (error >)")

 );End GUARDEDGE_PRESENT=YES

 if( !avSwitch( "GUARDEDGE_PRESENT" ) then
   ;Rule LEG_558
    foreach( level '( v1bar v2bar v3bar v4bar v5bar )
      let(( errMsg )
         err558v1b = strcat( "err558" level)
         err558v5b = geomOutside( eval(level) chipring )
         sprintf( errMsg    "GRLEG_558: %s outside of Chipring found! " upperCase(level))
         errorLayer( err558v5b errMsg )
      );End errMsg
    );End foreach

   ;Rule 560 (VxBAR width over Chipring is covered by 990e)
     err560_V1 = geomWidth( v1b_not_ring keep > 0.28 )
     drc( v1b_not_ring width < 0.28  "GR560: V1BAR width == 0.20 um. (error <)")
     errorLayer( err560_V1           "GR560: V1BAR width == 0.20 um. (error >)")

     err560_V2 = geomWidth( v2b_not_ring keep > 0.28 )
     drc( v2b_not_ring width < 0.28  "GR560: V2BAR width == 0.20 um. (error <)")
     errorLayer( err560_V2           "GR560: V2BAR width == 0.20 um. (error >)")

     err560_V3 = geomWidth( v3b_not_ring keep > 0.28 )
     drc( v3b_not_ring width < 0.28  "GR560: V3BAR width == 0.20 um. (error <)")
     errorLayer( err560_V3           "GR560: V3BAR width == 0.20 um. (error >)")

     err560_V4 = geomWidth( v4b_not_ring keep > 0.28 )
     drc( v4b_not_ring width < 0.28  "GR560: V4BAR width == 0.20 um. (error <)")
     errorLayer( err560_V4           "GR560: V4BAR width == 0.20 um. (error >)")

     err560_V5 = geomWidth( v5b_not_ring keep > 0.28 )
     drc( v5b_not_ring width < 0.28  "GR560: V5BAR width == 0.20 um. (error <)")
     errorLayer( err560_V5           "GR560: V5BAR width == 0.20 um. (error >)")

 );End GUARDEDGE_PRESENT=NO


 ;Rule 566
   v1_v1bar = geomOverlap( v1 v1bar )
   v2_v2bar = geomOverlap( v2 v2bar )
   v3_v3bar = geomOverlap( v3 v3bar )
   v4_v4bar = geomOverlap( v4 v4bar )
   v5_v5bar = geomOverlap( v5 v5bar )
   drc( v1bar v1 sep < 0.56               "GR566: V1BAR to V1 space >= 0.560 um.")
   drc( v2bar v2 sep < 0.56               "GR566: V2BAR to V2 space >= 0.560 um.")
   drc( v3bar v3 sep < 0.56               "GR566: V3BAR to V3 space >= 0.560 um.")
   drc( v4bar v4 sep < 0.56               "GR566: V4BAR to V4 space >= 0.560 um.")
   drc( v5bar v5 sep < 0.56               "GR566: V5BAR to V5 space >= 0.560 um.")
   errorLayer( v1_v1bar                   "GR566: V1 overlapping V1BAR found!")
   errorLayer( v2_v2bar                   "GR566: V2 overlapping V2BAR found!")
   errorLayer( v3_v3bar                   "GR566: V3 overlapping V3BAR found!")
   errorLayer( v4_v4bar                   "GR566: V4 overlapping V4BAR found!")
   errorLayer( v5_v5bar                   "GR566: V5 overlapping V5BAR found!")

  ;Rule 567
    drc( v1bar   sep < 3.60               "GR567: V1BAR to adjacent V1BAR >= 3.60 um.")
    drc( v2bar   sep < 3.60               "GR567: V2BAR to adjacent V2BAR >= 3.60 um.")
    drc( v3bar   sep < 3.60               "GR567: V3BAR to adjacent V3BAR >= 3.60 um.")
    drc( v4bar   sep < 3.60               "GR567: V4BAR to adjacent V4BAR >= 3.60 um.")
    drc( v5bar   sep < 3.60               "GR567: V5BAR to adjacent V5BAR >= 3.60 um.")
    drc( v1bar notch < 1.80               "GR567b: V1BAR notch >= 1.80 um.")
    drc( v2bar notch < 1.80               "GR567b: V2BAR notch >= 1.80 um.")
    drc( v3bar notch < 1.80               "GR567b: V3BAR notch >= 1.80 um.")
    drc( v4bar notch < 1.80               "GR567b: V4BAR notch >= 1.80 um.")
    drc( v5bar notch < 1.80               "GR567b: V5BAR notch >= 1.80 um.")

 ;Rule 570
   v1_no_m1x002 = geomAndNot( geomAndNot( v1 k1 )  geomSize( m1 0.02 ) )
   errorLayer( v1_no_m1x002               "GR570: V1(not over K1) must be within M1 >= -0.020 um.")


   if( avSwitch( "GUARDEDGE_PRESENT" ) then

     drc( m1 v1b_not_ecm enc < 0.08           "GR570c: V1BAR must be within M1 >= 0.08 um.")
     errorLayer( geomAndNot( v1b_not_ecm m1 ) "GR570c: V1BAR not within M1 found!")

   );End of GUARDEDGE_PRESENT=YES

   if( !avSwitch( "GUARDEDGE_PRESENT" ) then

     drc( m1 v1b_not_ring enc < 0.08           "GR570c: V1BAR must be within M1 >= 0.08 um.")
     errorLayer( geomAndNot( v1b_not_ring m1 ) "GR570c: V1BAR not within M1 found!")

   );End of GUARDEDGE_PRESENT=NO


 ;Rule 575
   v1_no_m2 = geomAnd( geomAndNot( v1 m2 ) LM2_5 )
   v1_no_mt = geomAnd( geomAndNot( v1 mt ) LM1 )
   errorLayer( v1_no_m2                   "GR575a: V1 not within M2 found!")
   errorLayer( v1_no_mt                   "GR575a1: V1 not within MT found!")


   if( avSwitch( "GUARDEDGE_PRESENT" ) then

     err575ab = geomAnd( geomAndNot( v1b_not_ecm m2 ) LM2_5 )
     drc( m2 v1b_not_ecm enc < 0.40       "GR575ab: V1BAR must be within M2 >= 0.40 um.")
     errorLayer( err575ab                 "GR575ab: V1BAR not within M2 found!")

     v1b_LM1  = geomAnd( v1b_not_ecm LM1 ) 
     drc( mt v1b_LM1 enc < 0.40           "GR575a2: V1BAR must be within MT >= 0.40 um.")
     errorLayer( geomAndNot( v1b_LM1 m2 ) "GR575a2: V1BAR not within MT found!")

   );End of GUARDEDGE_PRESENT=YES

   if( !avSwitch( "GUARDEDGE_PRESENT" ) then

     err575ab = geomAnd( geomAndNot( v1b_not_ring m2 ) LM2_5 )
     drc( m2 v1b_not_ring enc < 0.40      "GR575ab: V1BAR must be within M2 >= 0.40 um.")
     errorLayer( err575ab                 "GR575ab: V1BAR not within M2 found!")

     v1b_LM1  = geomAnd( v1b_not_ring LM1 ) 
     drc( mt v1b_LM1 enc < 0.40           "GR575a2: V1BAR must be within MT >= 0.40 um.")
     errorLayer( geomAndNot( v1b_LM1 m2 ) "GR575a2: V1BAR not within MT found!")

   );End of GUARDEDGE_PRESENT=NO


;METAL, VIA LAYOUT RULES
;Rule 604
  foreach( level '( m2 m3 m4 m5 )
    mx_ring     = strcat(  level     "_ring"     )
    mx_not_ring = strcat(  level     "_not_ring" )
    mxHole      = strcat(  level     "Hole"      )
    err601b_mx  = strcat( "err601b_"  level      )

    sprintf( cmd1 "%s = geomAndNot( %s %s )" mx_not_ring level mx_ring )
    evalstring( cmd1 )
    sprintf( cmd2 "%s = geomAndNot( geomHoles( %s ) %s )" mxHole mx_not_ring mx_not_ring )
    evalstring( cmd2 )
    sprintf( cmd3  "%s = drc( %s area < 0.705 )" err601b_mx mxHole )
    evalstring( cmd3 )

    sprintf( errMsg600   "GR600:   %s width >= 0.28 um." upperCase(level) )
    sprintf( errMsg601a  "GR601a:  %s area >= 0.3136 sq.um." upperCase(level) )
    sprintf( errMsg601b  "GR601b:  %s enclosed area >= 0.705 sq.um." upperCase(level) )
    sprintf( errMsg602   "GR602:   %s space >= 0.28 um." upperCase(level)  )

    err600  = drc( eval(level) width < 0.28 withCornerTouch )
    err601a = drc( eval(level) area < 0.3136 )
    sprintf( cmd5 "errorLayer( %s  errMsg601b )" err601b_mx )
    evalstring( cmd5 )
    err602  = drc( eval(level) sepNotch < 0.28 withSingularPoint )

    errorLayer( err600   errMsg600  )
    errorLayer( err601a  errMsg601a )
    errorLayer( err602   errMsg602  )


    mx_gtt_160    = strcat(  level     "_gtt_160"   )
    mx_gtt_500    = strcat(  level     "_gtt_500"   )
    mx_gtt_800    = strcat(  level     "_gtt_800"   )
    mx_gtt_2500   = strcat(  level     "_gtt_2500"  )

    sprintf( cmd1 "%s = geomAnd( %s geomWidth( %s keep >  1.60 truncate  0.80 ))" mx_gtt_160 level level )
    evalstring( cmd1 )

    sprintf( cmd2 "%s = geomAnd( %s geomWidth( %s keep >  5.00 truncate  2.50 ))" mx_gtt_500 level level )
    evalstring( cmd2 )

    sprintf( cmd3 "%s = geomAnd( %s geomWidth( %s keep >  8.00 truncate  4.00 ))" mx_gtt_800 level level )
    evalstring( cmd3 )

    sprintf( cmd4 "%s = geomAnd( %s geomWidth( %s keep > 25.00 truncate 12.50 ))" mx_gtt_2500 level level )
    evalstring( cmd4 )

    err604_mx    = strcat( "err604_"   level      )
    err604R_mx   = strcat( "err604R_"  level      )
    err604a_mx   = strcat( "err604a_"  level      )
    err604cR_mx  = strcat( "err604cR_" level      )
    err604dR_mx  = strcat( "err604dR_" level      )

    sprintf( errMsg604    "GR604: %s(>1.60) to %s(>1.60) space >= 0.40 um." upperCase(level) upperCase(level) )
    sprintf( errMsg604a   "GR604a: %s(>5.00) to %s space  >= 0.60 um." upperCase(level) upperCase(level) )

    sprintf( cmd5  "%s = drc( %s 0 < sepNotch < 0.40 shielded )" err604_mx  mx_gtt_160 )
    evalstring( cmd5 )

    sprintf( cmd6  "%s = drc( %s %s 0 < sep < 0.40  shielded )" err604R_mx  mx_gtt_160 level )
    evalstring( cmd6 )

    sprintf( cmd7  "%s = drc( %s %s 0 < sep < 0.60  shielded )" err604a_mx  mx_gtt_500 level )
    evalstring( cmd7 )

    sprintf( cmd8  "%s = drc( %s %s 0 < sep < 1.12  shielded )" err604cR_mx mx_gtt_800 level )
    evalstring( cmd8 )

    sprintf( cmd9  "%s = drc( %s %s 0 < sep < 1.92  shielded )" err604dR_mx mx_gtt_2500 level )
    evalstring( cmd9 )

    sprintf( cmd10 "errorLayer( geomAndNot( %s %s )  errMsg604 )"   err604_mx level )   ; Eliminates false errors when more than one
    evalstring( cmd10 )                                                                 ; region of single polygon is identified as fat
    sprintf( cmd11 "errorLayer( %s  errMsg604a )" err604a_mx )
    evalstring( cmd11 )

 ) ;End foreach


 ;Rule 610
   errorLayer( geomAndNot( v2 m2 )                     "GR610: V2 not within M2 found!")
   errorLayer( geomAndNot( v3 m3 )                     "GR610: V3 not within M3 found!")
   errorLayer( geomAndNot( v4 m4 )                     "GR610: V4 not within M4 found!")
   errorLayer( geomAndNot( v5 m5 )                     "GR610: V5 not within M5 found!")

   if( avSwitch( "GUARDEDGE_PRESENT" ) then

     drc( m2 v2b_not_ecm enc  < 0.40 withSingularPoint "GR610c: V2BAR must be within M2 >= 0.40 um.")
     errorLayer( geomAndNot( v2b_not_ecm  m2 )         "GR610c: V2BAR not within M2 found!")

     drc( m3 v3b_not_ecm enc  < 0.40 withSingularPoint "GR610c: V3BAR must be within M3 >= 0.40 um.")
     errorLayer( geomAndNot( v3b_not_ecm  m3 )         "GR610c: V3BAR not within M3 found!")

     drc( m4 v4b_not_ecm enc  < 0.40 withSingularPoint "GR610c: V4BAR must be within M4 >= 0.40 um.")
     errorLayer( geomAndNot( v4b_not_ecm  m4 )         "GR610c: V4BAR not within M4 found!")

     drc( m5 v5b_not_ecm enc  < 0.40 withSingularPoint "GR610c: V5BAR must be within M5 >= 0.40 um.")
     errorLayer( geomAndNot( v5b_not_ecm  m5 )         "GR610c: V5BAR not within M5 found!")

   );End of GUARDEDGE_PRESENT=YES

   if( !avSwitch( "GUARDEDGE_PRESENT" ) then

     drc( m2 v2b_not_ring enc < 0.40 withSingularPoint "GR610c: V2BAR must be within M2 >= 0.40 um.")
     errorLayer( geomAndNot( v2b_not_ring m2 )         "GR610c: V2BAR not within M2 found!")

     drc( m3 v3b_not_ring enc < 0.40 withSingularPoint "GR610c: V3BAR must be within M3 >= 0.40 um.")
     errorLayer( geomAndNot( v3b_not_ring m3 )         "GR610c: V3BAR not within M3 found!")

     drc( m4 v4b_not_ring enc < 0.40 withSingularPoint "GR610c: V4BAR must be within M4 >= 0.40 um.")
     errorLayer( geomAndNot( v4b_not_ring m4 )         "GR610c: V4BAR not within M4 found!")

     drc( m5 v5b_not_ring enc < 0.40 withSingularPoint "GR610c: V5BAR must be within M5 >= 0.40 um.")
     errorLayer( geomAndNot( v5b_not_ring m5 )         "GR610c: V5BAR not within M5 found!")

   );End of GUARDEDGE_PRESENT=NO


 ;Rule 611
   v2_not_m3 = geomAnd( geomAndNot( v2 m3 ) LM3_5 )
   v2_not_mt = geomAnd( geomAndNot( v2 mt ) LM2   )
   v3_not_m4 = geomAnd( geomAndNot( v3 m4 ) LM4_5 )
   v3_not_mt = geomAnd( geomAndNot( v3 mt ) LM3   )
   v4_not_m5 = geomAnd( geomAndNot( v4 m5 ) LM5   )
   v4_not_mt = geomAnd( geomAndNot( v4 mt ) LM4   )
   v5_not_mt = geomAnd( geomAndNot( v5 mt ) LM5   )
   errorLayer( v2_not_m3                      "GR611: V2 not within M3 found!")
   errorLayer( v2_not_mt                      "GR611: V2 not within MT found!")
   errorLayer( v3_not_m4                      "GR611: V3 not within M4 found!")
   errorLayer( v3_not_mt                      "GR611: V3 not within MT found!")
   errorLayer( v4_not_m5                      "GR611: V4 not within M5 found!")
   errorLayer( v4_not_mt                      "GR611: V4 not within MT found!")
   errorLayer( v5_not_mt                      "GR611: V5 not within MT found!")


   if( avSwitch( "GUARDEDGE_PRESENT" ) then

     err611c_V2 = geomAnd( geomAndNot( v2b_not_ecm m3 ) LM3_5 )
     drc( m3 v2b_not_ecm enc < 0.40             "GR611a: V2BAR must be within M3 >= 0.40 um.")
     errorLayer( err611c_V2                     "GR611a: V2BAR not within M3 found!")

     v2b_LM2    = geomAnd( v2b_not_ecm LM2 ) 
     drc( mt v2b_LM2 enc < 0.40                 "GR611a: V2BAR must be within MT >= 0.40 um.")
     errorLayer( geomAndNot( v2b_LM2 mt )       "GR611a: V2BAR not within MT found!")


     err611c_V3 = geomAnd( geomAndNot( v3b_not_ecm m4 ) LM4_5 )
     drc( m4 v3b_not_ecm enc < 0.40             "GR611a: V3BAR must be within M4 >= 0.40 um.")
     errorLayer( err611c_V3                     "GR611a: V3BAR not within M4 found!")

     v3b_LM3    = geomAnd( v3b_not_ecm LM3 ) 
     drc( mt v3b_LM3 enc < 0.40                 "GR611a: V3BAR must be within MT >= 0.40 um.")
     errorLayer( geomAndNot( v3b_LM3 mt )       "GR611a: V3BAR not within MT found!")


     err611c_V4 = geomAnd( geomAndNot( v4b_not_ecm m5 ) LM5 )
     drc( m5 v4b_not_ecm enc < 0.40             "GR611a: V4BAR must be within M5 >= 0.40 um.")
     errorLayer( err611c_V4                     "GR611a: V4BAR not within M5 found!")

     v4b_LM4    = geomAnd( v4b_not_ecm LM4 ) 
     drc( mt v4b_LM4 enc < 0.40                 "GR611a: V4BAR must be within MT >= 0.40 um.")
     errorLayer( geomAndNot( v4b_LM4 mt )       "GR611a: V4BAR not within MT found!")


     drc( mt v5b_not_ecm enc < 0.40             "GR611a: V5BAR must be within MT >= 0.40 um.")
     errorLayer( geomAndNot( v5b_not_ecm mt )   "GR611a: V5BAR not within MT found!")

   );End of GUARDEDGE_PRESENT=YES

   if( !avSwitch( "GUARDEDGE_PRESENT" ) then

     err611c_V2 = geomAnd( geomAndNot( v2b_not_ring m3 ) LM3_5 )
     drc( m3 v2b_not_ring enc < 0.40            "GR611a: V2BAR must be within M3 >= 0.40 um.")
     errorLayer( err611c_V2                     "GR611a: V2BAR not within M3 found!")

     v2b_LM2    = geomAnd( v2b_not_ring LM2 ) 
     drc( mt v2b_LM2 enc < 0.40                 "GR611a: V2BAR must be within MT >= 0.40 um.")
     errorLayer( geomAndNot( v2b_LM2 mt )       "GR611a: V2BAR not within MT found!")


     err611c_V3 = geomAnd( geomAndNot( v3b_not_ring m4 ) LM4_5 )
     drc( m4 v3b_not_ring enc < 0.40            "GR611a: V3BAR must be within M4 >= 0.40 um.")
     errorLayer( err611c_V3                     "GR611a: V3BAR not within M4 found!")

     v3b_LM3    = geomAnd( v3b_not_ring LM3 ) 
     drc( mt v3b_LM3 enc < 0.40                 "GR611a: V3BAR must be within MT >= 0.40 um.")
     errorLayer( geomAndNot( v3b_LM3 mt )       "GR611a: V3BAR not within MT found!")


     err611c_V4 = geomAnd( geomAndNot( v4b_not_ring m5 ) LM5 )
     drc( m5 v4b_not_ring enc < 0.40            "GR611a: V4BAR must be within M5 >= 0.40 um.")
     errorLayer( err611c_V4                     "GR611a: V4BAR not within M5 found!")

     v4b_LM4    = geomAnd( v4b_not_ring LM4 ) 
     drc( mt v4b_LM4 enc < 0.40                 "GR611a: V4BAR must be within MT >= 0.40 um.")
     errorLayer( geomAndNot( v4b_LM4 mt )       "GR611a: V4BAR not within MT found!")


     drc( mt v5b_not_ring enc < 0.40            "GR611a: V5BAR must be within MT >= 0.40 um.")
     errorLayer( geomAndNot( v5b_not_ring mt )  "GR611a: V5BAR not within MT found!")

   );End of GUARDEDGE_PRESENT=NO


 ;Rule 612

   m1m2_612 = geomAnd( geomButtOrOver( geomAnd( m1 m2) geomOr( geomAnd( m1_gt_160 m2 ) geomAnd( m1 m2_gt_160 ) ) ) LM2_5 )
   m1mt_612 = geomAnd( geomButtOrOver( geomAnd( m1 mt) geomOr( geomAnd( m1_gt_160 mt ) geomAnd( m1 mt_gt_160 ) ) ) LM1 )

   m1m2_612_b = geomAnd( geomOr( geomAnd( m1_gt_160 m2 ) geomAnd( m1 m2_gt_160 ) ) LM2_5 )
   m1mt_612_b = geomAnd( geomOr( geomAnd( m1_gt_160 mt ) geomAnd( m1 mt_gt_160 ) ) LM1 )

   m1m2_one_v1  = geomAnd( geomButtOrOver( m1m2_612 v1 keep == 1 ) LM2_5 )
   m1mt_one_v1  = geomAnd( geomButtOrOver( m1mt_612 v1 keep == 1 ) LM1 )

   m1m2_one_v1_b  = geomAnd( geomButtOrOver( m1m2_612_b v1 keep == 1 ) LM2_5 )
   m1mt_one_v1_b  = geomAnd( geomButtOrOver( m1mt_612_b v1 keep == 1 ) LM1 )

   m1m2_one_v1 = geomAnd( m1m2_one_v1 m1m2_one_v1_b)
   m1mt_one_v1 = geomAnd( m1mt_one_v1 m1mt_one_v1_b)

   errorLayer( m1m2_one_v1                "GR612: M1/M2 intersection only enclosing one V1 shape found!")
   errorLayer( m1mt_one_v1                "GR612: M1/MT intersection only enclosing one V1 shape found!")

 ;Rule 640
   drc( mt  width < 0.28                   "GR640: MT width >= 0.280 um.")

 ;Rule 641
   mt_enclosure = geomAndNot( geomHoles( mt_not_ring ) mt_not_ring )
   drc( mt area < 0.548                    "GR641a: MT area > 0.548 sq.um.")
   drc( mt_enclosure area < 0.705          "GR641b: MT enclosed area >= 0.705 sq.um.")

 ;Rule 642
   drc( mt    sep < 0.28                   "GR642: MT space >= 0.280 um.")
   drc( mt  notch < 0.28                   "GR642: MT notch >= 0.280 um.")

 ;Rule 642R
; if( avSwitch ( "CHECK_RECOMMENDED") then
;   drc( mt    sep < 0.46                   "GR642R: MT space >= 0.460 um.")
;   drc( mt  notch < 0.46                   "GR642R: MT notch >= 0.460 um.")
; );END RECOMMENDED


 ;Rule 644
   err644       = geomAnd( mt geomWidth( mt keep >  1.60 truncate  0.80 ))
   err644a      = geomAnd( mt geomWidth( mt keep >  5.00 truncate  2.50 ))
   err644b      = geomAnd( mt geomWidth( mt keep > 35.00 truncate 17.50 ))

   drc( err644     mt sep <  0.40   shielded "GR644:   MT(>1.60) to MT space >= 0.40 um.")
   drc( err644a    mt sep <  0.60   shielded "GR644a:  MT(>5.00) to MT space >= 0.60 um.")
   drc( err644b    mt sep <  2.00   shielded "GR644b:  MT(>35.00) to MT space >= 2.00 um.")


 ;Rule 650
   dv_ovr_ecm   = geomAnd(    dv crk_tch_grde )
   dv_not_ecm   = geomAndNot( dv crk_tch_grde )
   lv_ovr_ecm   = geomAnd(    lv crk_tch_grde )
   lv_not_ecm   = geomAndNot( lv crk_tch_grde )

   drc( lv_not_ecm width < 14.00 withCornerTouch  "GR650a1: (LV not over (CRACKSTOP touching GUARDEDGE)) width >= 14.000 um.")
   drc( lv_ovr_ecm width <  9.00 withCornerTouch  "GR650a2: (LV over (CRACKSTOP touching GUARDEDGE)) width >= 9.000 um.")
   drc( dv_not_ecm width < 14.00 withCornerTouch  "GR650b1: (DV not over (CRACKSTOP touching GUARDEDGE)) width >= 14.000 um.")
   drc( dv_ovr_ecm width <  9.00 withCornerTouch  "GR650b2: (DV over (CRACKSTOP touching GUARDEDGE)) width >= 9.000 um.")

 ;Rule 651
   drc( lv  area < 550.0                          "GR651a: LV area >= 550.000 sq.um.")
   drc( dv  area < 480.0                          "GR651b: DV area >= 480.000 sq.um.")

 ;Rule 653
   drc( dv sepNotch < 11.0 withSingularPoint      "GR653b: DV space >= 11.000 um.")
   drc( lv sepNotch < 29.0 withSingularPoint      "GR653c: LV space >= 29.000 um.")

   tv_in_padf  = geomInside( tv padfiltr )
   tv_out_padf = geomOr( geomOutside( tv padfiltr ) geomStraddle( tv padfiltr )) ;Straddling shape should be checked with not covered

   tv_ovr_pfOrCrk = geomAnd(    tv geomOr( padfiltr crackstop ) )
   tv_not_pfOrCrk = geomAndNot( tv geomOr( padfiltr crackstop ) )

 ;Rule 655
   drc( tv_ovr_pfOrCrk width <  4.20 withCornerTouch "GR655b: (TV covered by (PADFILTR,CRACKSTOP)) width >= 4.20 um.")
   drc( tv_not_pfOrCrk width < 14.00 withCornerTouch "GR655c: (TV not covered by (PADFILTR,CRACKSTOP)) width >= 14.00 um.")

 ;Rule 656
   drc( tv_in_padf  area < 103.0                     "GR656b: (TV covered by PADFILTR) area >= 103.000 um2.")
   drc( tv_out_padf area < 480.0                     "GR656c: (TV not covered by PADFILTR) area >= 480.000 um2.")

 ;Rule 657
   drc( tv_in_padf  sepNotch < 6.00 withSingularPoint "GR657b: (TV covered by PADFILTR) space >= 6.000 um.")
   drc( tv_out_padf sepNotch < 8.00 withSingularPoint "GR657c: (TV not covered by PADFILTR) space >= 8.000 um.")

 ;Rule 658
   ChipEdge = geomOr( guardedge geomAvoiding( chipedge guardedge ) ) ;the edge of the chip for ECM & Legacy designs

   drc( ChipEdge tv enc < 12.0 withSingularPoint "GR658ab: TV within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 12.000 um.")
   drc( ChipEdge dv enc < 20.0 withSingularPoint "GR658c: DV within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 20.000 um.")
   drc( ChipEdge dv enc < 11.0 withSingularPoint "GR658c1: DV within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 11.000 um.")
   drc( ChipEdge lv enc < 29.0 withSingularPoint "GR658d: LV within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 29.000 um.")
   drc( ChipEdge lv enc < 11.0 withSingularPoint "GR658d1: LV within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 11.000 um.")


  if( avSwitch( "C4_4on8" ) || avSwitch( "C4_4on9" ) || avSwitch( "C4_5on10" ) || avSwitch( "C4_CuPillar" ) then
   ;RULE BEOL1
     errbeol1 = geomEnclose( bkgnd dv )
     errorLayer( errbeol1    "GRBEOL1: DV found in C4 design!")
  );End 

 ;RULE BEOL2
   errbeol2 = geomButtOrOver( geomButtOrOver( mpw_edge dv ) lv )
   errorLayer( errbeol2  "GRBEOL2: (MPW_EDGE touching DV) touching LV is prohibited!")


;METAL LAYOUT RULES FOR CHEESE EXCLUDE REGIONS
   m1_chex = geomAnd( m1 m1chexcl )

 ;Rule A500
   erra500b = geomWidth( m1_chex keep > 14.0 )
   errorLayer( erra500b                   "GRA500b: M1(over M1CHEXCL) width (max) <= 14.000 um.")

 ;Rule A504
   m1_fata  = geomAnd( geomWidth(  m1_chex keep >  2.40 truncate  1.20 ) m1_chex )
   m1_fatb  = geomAnd( geomWidth(  m1_chex keep >  5.30 truncate  2.65 ) m1_chex )
   m1_fatc  = geomAnd( geomWidth(  m1_chex keep >  8.40 truncate  4.20 ) m1_chex )
   m1_fatd  = geomAnd( geomWidth(  m1_chex keep > 11.50 truncate  5.75 ) m1_chex )

   m1_fata_err  = drc( m1_fata m1_chex   sep < 0.70   shielded )
   m1_fatb_err  = drc( m1_fatb m1_chex   sep < 1.60   shielded )
   m1_fatc_err  = drc( m1_fatc m1_chex   sep < 2.50   shielded )
   m1_fatd_err  = drc( m1_fatd m1_chex   sep < 3.50   shielded )

   ; The following code eliminates duplicate error reporting.  Only the worse error is reported if two or more errors are identical in this group
   errorLayer( geomOr( geomOutside( m1_fata_err m1_fatb_err ) geomStraddle( m1_fata_err m1_fatb_err ) ) "GRA504a: M1(over M1CHEXCL) (>2.40 and <=5.30) space >= 0.700 um.")
   errorLayer( geomOr( geomOutside( m1_fatb_err m1_fatc_err ) geomStraddle( m1_fatb_err m1_fatc_err ) ) "GRA504b: M1(over M1CHEXCL) (>5.30 and <=8.40) space >= 1.600 um.")
   errorLayer( geomOr( geomOutside( m1_fatc_err m1_fatd_err ) geomStraddle( m1_fatc_err m1_fatd_err ) ) "GRA504c: M1(over M1CHEXCL) (>8.40 and <=11.50) space >= 2.500 um.")
   errorLayer( m1_fatd_err  "GRA504d: M1(over M1CHEXCL) (>11.50 wide) space >= 3.500 um.")


;JD (HA) and MOS VARACTOR LAYOUT RULES
 ;Rule JD1
   drc( jd width < 1.00                     "GRJD1: JD width >= 1.000 um.")

 ;Rule JD2
   drc( jd   sep < 1.00                     "GRJD2: JD space >= 1.000 um.")
   drc( jd notch < 1.00                     "GRJD2: JD notch >= 1.000 um.")

 ;Rule JD3
   rx_strad_jd = geomStraddle( rx jd )
   drc( jd rx enc < 0.32                    "GRJD3: RX within JD >= 0.320 um.")
   errorLayer( rx_strad_jd                 "GRJD3: RX straddling JD found!")

 ;Rule JD4
   drc( jd pc 0 < sep < 1.04                "GRJD4: JD to PC space >= 1.040 um.")
   drc( jd rx     sep < 0.58                "GRJD4a: JD to RX space >= 0.580 um.")

 ;Rule JD5
   errjd5op = geomButtOrOver( jd op )
   errjd5pc = geomButtOrOver( jd pc )
   errjd5rn = geomButtOrOver( jd rn )
   errjd5rp = geomButtOrOver( jd rp )
   errjd5rr = geomButtOrOver( jd rr )
   errorLayer( errjd5op                    "GRJD5: JD touching OP found!")
   errorLayer( errjd5pc                    "GRJD5: JD touching PC found!")
   errorLayer( errjd5rn                    "GRJD5: JD touching RN found!")
   errorLayer( errjd5rp                    "GRJD5: JD touching RP found!")
   errorLayer( errjd5rr                    "GRJD5: JD touching RR found!")

 ;Rule JD6
   errjd6 = geomButtOrOver( jd geomOutside( rx ns ) )
   errorLayer( errjd6                      "GRJD6: JD touching (RX not touching NS) found!")

 ;Rule MOSVAR1
   drc( mosvar width < 0.44                 "GRMOSVAR1: MOSVAR width >= 0.440 um.")

 ;Rule MOSVAR2
   drc( mosvar   sep < 0.44                 "GRMOSVAR2: MOSVAR space >= 0.440 um.")
   drc( mosvar notch < 0.44                 "GRMOSVAR2: MOSVAR notch >= 0.440 um.")

 ;Rule MOSVAR3
   zvt_072       = geomSize( zerovt 0.72 )
  ;errmosvar3_bp = geomButtOrOver( mosvar bp )
   errmosvar3_dg = geomButtOrOver( mosvar dg )
   errmosvar3_ns = geomButtOrOver( mosvar ns )
   errmosvar3_rp = geomButtOrOver( mosvar rp )
   errmosvar3_rr = geomButtOrOver( mosvar rr )
   errmosvar3_zvt= geomButtOrOver( mosvar zvt_072 )
 ; errorLayer( errmosvar3_bp               "GRMOSVAR3: MOSVAR touching BP found!")
   errorLayer( errmosvar3_dg               "GRMOSVAR3: MOSVAR touching DG found!")
   errorLayer( errmosvar3_ns               "GRMOSVAR3: MOSVAR touching NS found!")
   errorLayer( errmosvar3_rp               "GRMOSVAR3: MOSVAR touching RP found!")
   errorLayer( errmosvar3_rr               "GRMOSVAR3: MOSVAR touching RR found!")
   errorLayer( errmosvar3_zvt              "GRMOSVAR3: MOSVAR touching (ZEROVT sized by +0.72) found!")

 ;Rule MOSVAR3a
  errmosvar3a_bp = geomButtOrOver( geomAnd( mosvar nw)  bp )
  errorLayer( errmosvar3a_bp               "GRMOSVAR3a: (MOSVAR over NW) touching BP found!")

 ;Rule MOSVAR4
   drc( mosvar bb 0 < sep < 0.44            "GRMOSVAR4: MOSVAR to BB space >= 0.440 um.")
   drc( mosvar dg     sep < 0.44            "GRMOSVAR4: MOSVAR to DG space >= 0.440 um.")
   drc( mosvar nw 0 < sep < 0.44            "GRMOSVAR4: MOSVAR to NW space >= 0.440 um.")
   drc( mosvar zvt_072  sep < 0.44          "GRMOSVAR4: MOSVAR to (ZEROVT sized by +0.72) space >= 0.440 um.")

 ;Rule MOSVAR5
   drc( mosvar rx     sep < 0.34            "GRMOSVAR5: MOSVAR to RX space >= 0.340 um.")
   drc( mosvar gate   sep < 0.50            "GRMOSVAR5a: MOSVAR to (PC over RX) space >= 0.500 um.")

 ;Rule MOSVAR6
   rx_mosvar      = geomButtOrOver( geomAndNot( rx bipolar) mosvar )
   nw_pi_over_mosvar = geomAnd( geomOr( nw pi) mosvar )
   errmosvar6     = geomAndNot( rx_mosvar nw_pi_over_mosvar )
   drc( nw_pi_over_mosvar rx_mosvar enc < 0.42 "GRMOSVAR6: ((RX not over BIPOLAR) touch MOSVAR) must be within ((NW OR PI) over MOSVAR) >= 0.420 um.")
   errorLayer( errmosvar6                  "GRMOSVAR6: ((RX not over BIPOLAR) touch MOSVAR) not within ((NW or PI)over MOSVAR) found!")

 ;Rule MOSVAR6
   rx_mosvar6a      = geomButtOrOver( geomAnd( rx bipolar) mosvar )
   errmosvar6a     = geomAndNot( rx_mosvar6a nw_pi_over_mosvar )
   drc( nw_pi_over_mosvar rx_mosvar6a enc < 0.34 "GRMOSVAR6a: ((RX over BIPOLAR)touch MOSVAR) must be within ((NW OR PI) over MOSVAR) >= 0.340 um.")
   errorLayer( errmosvar6a                  "GRMOSVAR6a: ((RX over BIPOLAR)touch MOSVAR) not within ((NW or PI)over MOSVAR) found!")

 ;Rule MOSVAR8
   errmosvar8 = geomButtOrOver( geomAnd( mosvar pi ) geomSize( tg 0.001 ) )
   errorLayer( errmosvar8 "GRMOSVAR8: (MOSVAR over PI) touching TG prohibited" )


 ;Rule NCAP1
   err_ncap1 = geomButtOrOver( geomButtOrOver( nw geomAndNot( gate bp ) ) geomSize( geomAnd( bp rx ) 0.001 ) )
   errorLayer( err_ncap1 "GRNCAP1: { NW touching [ (PC over RX) NOT over BP ]  } cannot touch ( BP over RX )" )

 ;Rule PCAP1
   pc_rx_pcap1 = geomAnd( pc rx )
   drc( bp pc_rx_pcap1 enc < 0.36   "GRPCAP1: (PC over RX) must be within BP >= 0.360 um.")
   pc_rx_pcap1_bp = geomOverlap( pc_rx_pcap1 bp )
   errpcap1       = geomAndNot( pc_rx_pcap1_bp bp )
   errorLayer( errpcap1             "GRPCAP1: (PC over RX ) within BP >= 0.360 um.")

 ;Rule PCAP2
   err_pcap1 = geomButtOrOver( geomButtOrOver( geomAndNot( pi nw ) geomAnd( gate bp ) ) geomAndNot( rx bp ) )
   errorLayer( err_pcap1 "GRPCAP2: { ( PI  NOT over NW ) touching ( (PC over RX)  over BP ) } cannot touch ( RX  NOT over BP )" )


;VERTICAL LATERAL PNP (VLPNP) LAYOUT RULES
 ;Rule VLPNP01
   errvlpnp01 = geomButtOrOver( bipolar geomSize( grlogic 0.001 ) )
   errorLayer( errvlpnp01 "GRVLNPN01: BIPOLAR cannot touch GRLOGIC" )

 ;Rule VLPNP02
   lay_vlpnp02 = geomButtOrOver( gate geomSize( bipolar 0.001 ) )
   errvlpnp02  = geomAndNot( geomSize( lay_vlpnp02 0.50 ) mosvar )
   errorLayer( errvlpnp02 "GRVLNPN02: (((PC over RX) touching BIPOLAR) must be within MOSVAR >= 0.50 um." )

 ;Rule VLPNP03
   lay_vlpnp03 = geomAnd( mosvar geomAndNot( geomAnd( gate pi ) bp ) )
   errvlpnp03  = geomAvoiding( bipolar lay_vlpnp03 )
   errorLayer( errvlpnp03 "GRVLNPN03: BIPOLAR must touch (MOSVAR over (((PC over RX) over PI) not over BP))" )

 ;Rule VLPNP04
   pi_not_nw  = geomAndNot( pi nw )
   pi_not_nw_siz = geomSize( geomEnclose( pi_not_nw bipolar) -0.56)
   errvlpnp04 = geomAndNot( pi_not_nw_siz bipolar)
   drc( pi_not_nw bipolar enc < 0.56        "GRVLNPN04: BIPOLAR within (PI not over NW) == 0.56 um (error <)." )
   errorLayer( errvlpnp04                   "GRVLNPN04: BIPOLAR within (PI not over NW) == 0.56 um." )

 ;Rule VLPNP04b
   nwpi_bipolar = geomButtOrOver( geomOr( nw pi) bipolar)
   nwpi_bipolar_siz = geomSize( nwpi_bipolar -2.68)
   errvlpnp04b = geomAndNot( nwpi_bipolar_siz bipolar)
   drc( nwpi_bipolar bipolar enc < 2.68              "GRVLNPN04b: (Union( NW,PI) touching BIPOLAR) overlap past BIPOLAR == 2.680 um (error<).")
   errorLayer( errvlpnp04b                           "GRVLNPN04b: (Union( NW,PI) touching BIPOLAR) overlap past BIPOLAR == 2.680 um (error>).")

 ;Rule VLPNP05
   pc_under_bipo  = geomAnd( geomAnd( pc rx) bipolar )
   pc_under_bipo_sup = geomSize( geomSize( pc_under_bipo -0.09) 0.09)
   drc( pc_under_bipo width < 0.18           "GRVLNPN05: (PC over RX) width under BIPOLAR == 0.18um (error <)." )
   errorLayer( pc_under_bipo_sup             "GRVLNPN05: (PC over RX) width under BIPOLAR == 0.18um (error >)." )

 ;Rule VLPNP06
   rx_bp_06         = geomAnd( rx_not_ring  bp_not_ring )
   vlnpn_dev        = geomButtOrOver( geomOr( nw pi ) bipolar )
   bp_ring1         = geomButting( rx_bp_06  geomHoles( rx_bp_06  innermost ) )
   bp_ring2         = geomButting( rx_bp_06  geomHoles( rx_bp_06  ) )
   vlnpn_guard_ring = geomButtOrOver( bp_ring2 bperi )

   vlnpn_valid_ring = geomHoles( vlnpn_guard_ring )
   err_vlnpn6a      = geomAndNot( vlnpn_dev vlnpn_valid_ring )
   errorLayer( err_vlnpn6a  "GRVLNPN06: ((NW or PI) touching BIPOLAR) must be contained within a (P+ ring touching BPERI).")

   err_vlnpn6b = geomAvoiding( geomSize( geomStretch( geomGetEdge( vlnpn_dev ) -0.01 ) 0.84 ) vlnpn_guard_ring )
   errorLayer( err_vlnpn6b  "GRVLNPN06: ((NW or PI) touching BIPOLAR) to a (P+ ring touching BPERI) must be =< 0.84um")

;JFET RULES
   ;Rule JC1
   drc( jc   sep < 0.900                   "GRJC1: JC space >= 0.900 um.")
   drc( jc notch < 0.900                   "GRJC1: JC notch >= 0.900 um.")

   ;Rule JC2
   drc( jc width < 1.38                    "GRJC2: JC width >= 1.380 um.")
   drc( jc area < 6.00                     "GRJC2a: JC minimum area >= 6.000 um.")

   ;Rule JC3
   errjc3 = geomAndNot( jc pi )
   drc( pi jc enc < 1.94                   "GRJC3: JC must be within PI >= 1.940 um.")
   errorLayer( errjc3                     "GRJC3: JC not within PI found!")

   ;Rule JC4
   drc( jc nw  sep < 0.940                 "GRJC4: JC to NW space >= 0.940 um.")

   ;Rule JC5
   rx_notover_bp = geomAndNot( rx bp)
   drc( jc rx_notover_bp enc < 0.500          "GRJC5: (RX not over BP) must be within JC >= 0.500 um.")

   ;Rule JC6
   jc6_lay = geomOr( as dg jd rr rp rn bb  nr pr pd op pc zerovt mosvar schky bipolar)
   drc( jc jc6_lay  sep < 1.000            "GRJC6: JC to (AS DG JD RR RP RN BB  NR PR PD OP PC ZEROVT MOSVAR SCHKY BIPOLAR) space >= 1.00 um.")
   err_jc6 = geomButtOrOver( jc jc6_lay)
   errorLayer( err_jc6                     "GRJC6: JC touch (AS DG JD RR RP RN BB  NR PR PD OP PC ZEROVT MOSVAR SCHKY BIPOLAR) found !")

   ;Rule JC7
   jc_no_rxbp = geomAndNot( jc geomAnd( rx bp))
   rxnotbp_jc = geomButtOrOver( rx_notover_bp jc_no_rxbp )
   err_jc7_tp    = geomAnd( rxnotbp_jc geomButtOrOver( m1 rxnotbp_jc keep > 1 ) )
   err_jc7       = geomButtOrOver( jc_no_rxbp  geomAndNot( rx_notover_bp err_jc7_tp ) keep > 1 )
   errorLayer( err_jc7                     "GRJC7: ((JC not over (RX over BP)) touching more than one (RX not over BP) shape is prohibited.")

   ;Rule JC12
   errjc8_edges = geomGetEdge( jc outside geomAnd( rx bp) )
   errorLayer( errjc8_edges               "GRJC12: All JC Edges must abut or be covered by (RX over BP).")

   ;Rule JC8
   jfet_channel = geomAnd( geomAnd( rx bp) jc)
   drc( jfet_channel width < 0.40           "GRJC8: (RX over BP) over JC) minimum  width >= 0.400 um.")

   ;Rule JC9
    jfet_chann_ed = geomGetEdge(jfet_channel inside jc )
    jfet_chann_ed_size = geomSize( jfet_chann_ed -0.25)
    err_jc10 = geomAndNot( jfet_channel jfet_chann_ed_size )
    errorLayer( err_jc10                   "GRJC9: (RX over BP) over JC) maximum  width >= 0.500 um.")

   ;Rule JC10
    rxnotoverbp_jc = geomAnd( rx_notover_bp jc )
    errjc11_less = drc( rxnotoverbp_jc jfet_channel  sep < 0.280  app > 0.0)
    errjc11_sup = geomAvoiding( geomSize( jfet_chann_ed 0.28) rxnotoverbp_jc)
    errorLayer( errjc11_less               "GRJC10: ((RX not over BP) to (RX over BP)) over JC  for commom runlength > 0.0 == 0.28.(error < )")
    errorLayer( errjc11_sup                "GRJC10: ((RX not over BP) to (RX over BP)) over JC  for commom runlength > 0.0 == 0.28.(error > )")

   ;Rule JC11
    rxoverbp = geomAnd( rx bp)
   drc( rxoverbp jc enc < 0.500          "GRJC11: (RX over BP) overlap past JC >= 0.500 um.")

   ;Rule JC13
   jc_polygon = geomGetPolygon( jc )
   errorLayer( jc_polygon                 "GRJC13: Non-rectangular JC found!")
   jc_45 = geomGetAngledEdge( jc keep == 45 fig)
   errorLayer( jc_45                      "GRJC13: 45 degree JC found!")

   ;Rule JC14
   jcchan_polygon = geomGetPolygon( jfet_channel )
   errorLayer( jcchan_polygon             "GRJC14: Non-rectangular ((RX over BP) over JC) found!")
   jcchan_45 = geomGetAngledEdge( jfet_channel keep == 45 fig)
   errorLayer( jcchan_45                  "GRJC14: 45 degree ((RX over BP) over JC) found!")

   ;Rule JC15
   err_jc15 = geomOverlap( geomOverlap( geomAndNot( pi nw) geomSize( jc 0.01)) geomSize( geomOr( op pc jd ) 0.01))
   errorLayer( err_jc15                   "GRJC15: ((PI not over NW) touching JC) touching (OP,PC,JD) is prohibited!")

   ;Rule JC16
     pinotnw_jc = geomOverlap( geomAndNot( pi nw) geomSize( jc 0.01))
     err_jc16 = geomButtOrOver( pinotnw_jc jc keep > 1)
     errorLayer( err_jc16                   "GRJC16: ((PI not over NW) touching JC) cannot touch more than JC shape!")

   ;Rule JC942
   drc( dvpad jc  sep < 3.000             "GRJC942: DV terminal Pad to JC space >= 3.000 um.")
   drc( tvpad jc  sep < 3.000             "GRJC942: TV terminal Pad to JC space >= 3.000 um.")

   ;Rule JC951
   errjc951    = geomOverlap( dvpad geomSize( jc 0.01) )
   errjc951_tv = geomOverlap( tvpad geomSize( jc 0.01) )
   errorLayer( errjc951                   "GRJC951: DV terminal Pad touching JC found!")
   errorLayer( errjc951_tv                "GRJC951: LV terminal Pad touching JC found!")

  ;Rule JC990
   errjc990 = geomOverlap( bp_ring geomSize( jc 0.01) )
   errorLayer( errjc990                   "GRJC990: BP in chip guard ring touching JC found!")

  ;Rule JC999a
  ; errjc999a = geomAnd( geomOr( geomOutside( jc chipedge )  geomStraddle( jc chipedge ) ) chipedge_exists )
  ; errorLayer( errjc999a          "GRJC999a: JC outside CHIPEDGE found!")
  ; drc( chipedge jc enc < 11.02    "GRJC999a: JC must be within CHIPEDGE >= 11.06 um.")

  ;RULE JCPN001
    errorLayer( geomStraddle( jc logobnd ) "GRJCPN001: JC shape straddling LOGOBND not allowed")

;SBD Rules
   ;Rule BP2ND1
    err_bp2nd  = geomGetEdge( bp2nd outside geomAnd( bb pi))
    errorLayer( err_bp2nd                  "GRBP2ND1: All BP2ND edges must abut (BB over PI).")

   ;Rule BP2ND2
   bp2nd2_lay = geomOr( as dg jd rr rp rn ns nw tg nr pr op pc zerovt schky grlogic)
   drc( bp2nd bp2nd2_lay  sep < 1.000            "GRBP2ND2: BP2ND to (AS NS NW DG TG JD RR RP RN NR PR OP PC ZEROVT GRLOGIC SCHKY) space >= 1.00 um.")
   err_bp2nd2 = geomButtOrOver( bp2nd bp2nd2_lay)
   errorLayer( err_bp2nd2                    "GRBP2ND2: BP2ND touch (AS NS NW DG TG JD RR RP RN NR PR OP PC ZEROVT GRLOGIC SCHKY) found !")

   ;Rule BP2ND3
    rxnopd_bp2nd = geomButtOrOver( geomAndNot( rx pd ) bp2nd )
   drc( rxnopd_bp2nd width < 1.00           "GRBP2ND3: (RX not over PD) touching BP2ND width (min) >= 1.000 um.")

   ;Rule BP2ND350
   drc( bp2nd width < 0.34                  "GRBP2ND350: BP2ND width (min) >= 0.340 um.")

   ;Rule BP2ND351a
   drc( bp2nd           area < 0.387        "GRBP2ND351a: BP2ND minimum area >= 0.387 sq.um." )

   ;Rule BP2ND351B
   bp2nd_encl = geomAndNot( geomHoles( bp2nd ) bp2nd )
   drc( bp2nd_encl      area < 0.387        "GRBP2ND351b: BP2ND enclosed area >= 0.387 sq.um.")

   ;Rule BP2ND352a
   drc( bp2nd   sep < 0.340                 "GRBP2ND352a: BP2ND space >= 0.340 um.")
   drc( bp2nd notch < 0.340                 "GRBP2ND352a: BP2ND notch >= 0.340 um.")

   ;Rule BP2ND352b
   err_bp2nd352b = geomButtOrOver( bp2nd bp)
   drc( bp2nd bp  sep < 0.340               "GRBP2ND352b: BP2ND to BP space >= 0.340 um.")
   errorLayer( err_bp2nd352b               "GRBP2ND352b: BP2ND touching BP is prohibited.")

;7RF_LV

;E1 (METAL) RULES
 ;Rule E1a
   erre1aa = geomWidth( geomAndNot( e1 ind_filt ) keep > 25.00 )
   erre1ab = geomWidth( geomAnd( e1 geomSize( ind_filt 25.0 ) ) keep > 30.00 )
   drc( e1_not_ring width < 1.50           "GRE1a: E1 width (min) >= 1.500 um.")
   errorLayer( erre1aa                    "GRE1aa: E1(not under IND_FLT) width (max) <= 25.000 um.")
   errorLayer( erre1ab                    "GRE1ab: E1(under (IND_FLT sized by 25 per edge)) width (max) <= 30.000 um.")

 ;Rule E1b
  ;HAVE TO USE A SMALLER VALUE BECAUSE OF THE SPIRAL INDUCTORS.
   e1b_not_ind = geomAndNot( e1 ind_filt )
   e1b_ind = geomAnd( e1 ind_filt )
   drc( e1b_not_ind   sepNotch < 2.000                  "GRE1b: E1 (not IND) space >= 2.000 um.")
   drc( e1b_ind       sepNotch < 1.992                  "GRE1b: E1 (IND) space >= 2.000 um.")
   drc( e1b_ind e1b_not_ind  0 < sep < 2.000  shielded  "GRE1b: E1 (IND) to E1 (not IND) space >= 2.000 um.")

 ;Rule E1e
   erre1e = geomAnd( geomAndNot( ft e1 ) LM0MA )
   drc( e1 ft enc < 1.00                  "GRE1e: FT must be within E1 >= 1.000 um.")
   errorLayer( erre1e                     "GRE1e: FT not within E1 found!")

 ;Rule E1f
   erre1f = geomAnd( geomAndNot( ftb_not_ring e1 ) LM0MA )
   drc( e1 ftb_not_ring enc < 1.00         "GRE1f: FTBAR must be within E1 >= 1.000 um.")
   errorLayer( erre1f                     "GRE1f: FTBAR not within E1 found!")

 ;Rule E1g
   drc( e1 area < 9.00                     "GRE1g: E1 area >= 9.000 sq.um.")

 ;Rule E1Sx
   e1s1 = geomAnd( e1 geomWidth( e1 keep >  8.00 truncate  4.00 ))
   e1s2 = geomAnd( e1 geomWidth( e1 keep > 11.50 truncate  5.75 ))

   e1s1_45 = geomGetNon90( e1s1 fig )
   e1s1_90 = geomAndNot( e1s1 e1s1_45 )
   e1s2_45 = geomGetNon90( e1s2 fig )
   e1s2_90 = geomAndNot( e1s2 e1s2_45 )

   e1s1_tmp1 = drc( e1s1_90 e1   sep   <  2.50          shielded )
   e1s1_tmp2 = drc( e1s1_45 e1   sep   <  2.50 - tolLeg shielded )
   e1s1_err  = geomOr( e1s1_tmp1 e1s1_tmp2 )
   e1s2_tmp1 = drc( e1s2_90 e1   sep   <  3.50          shielded )
   e1s2_tmp2 = drc( e1s2_45 e1   sep   <  3.50 - tolLeg shielded )
   e1s2_err  = geomOr( e1s2_tmp1 e1s2_tmp2 )

   ;Suppression of possible duplicate errors
   errorLayer( geomOr( geomOutside( e1s1_err e1s2_err ) geomStraddle( e1s1_err e1s2_err ) ) "GRE1S1: E1(> 8.00 and <=11.50) space >=  2.50 um.")
   errorLayer( e1s2_err                                                                     "GRE1S2: E1(>11.50) space >=  3.50 um.")

 ;Rule E1Ax
     e1a1 = geomAnd( e1 geomWidth( e1 keep >  8.00 truncate  4.00 ))
   e1a2 = geomAnd( e1 geomWidth( e1 keep > 11.50 truncate  5.75 ))
   e1a3 = geomAnd( e1 geomWidth( e1 keep > 14.00 truncate  7.00 ))
   e1a4 = geomAnd( e1 geomWidth( e1 keep > 17.50 truncate  8.75 ))
   e1a5 = geomAnd( e1 geomWidth( e1 keep > 21.00 truncate 10.50 ))
   e1a6 = geomAnd( e1 geomWidth( e1 keep > 24.50 truncate 12.25 ))
   e1a7 = geomAnd( e1 geomWidth( e1 keep > 28.00 truncate 14.00 ))
   e1at = geomAnd( e1 geomWidth( e1 keep > 30.00 truncate 15.00 ))

   e1_hole     = geomAndNot( geomHoles( e1_not_ring ) e1_not_ring )
   e1_a01_hole = geomButtOrOver( e1_hole e1a1 )
   e1_a02_hole = geomButtOrOver( e1_hole e1a2 )
   e1_a03_hole = geomButtOrOver( e1_hole e1a3 )
   e1_a04_hole = geomButtOrOver( e1_hole e1a4 )
   e1_a05_hole = geomButtOrOver( e1_hole e1a5 )
   e1_a06_hole = geomButtOrOver( e1_hole e1a6 )
   e1_a07_hole = geomButtOrOver( e1_hole geomAvoiding( e1a7 e1at ) )


   e1a1_err = drc( e1_a01_hole  area <  19.00 )
   e1a2_err = drc( e1_a02_hole  area <  37.00 )
   e1a3_err = drc( e1_a03_hole  area <  61.00 )
   e1a4_err = drc( e1_a04_hole  area <  91.00 )
   e1a5_err = drc( e1_a05_hole  area < 127.00 )
   e1a6_err = drc( e1_a06_hole  area < 169.00 )
   e1a7_err = drc( e1_a07_hole  area < 217.00 )


   errorLayer( geomOutside( e1a1_err e1a2_err ) "GRE1A1: E1 enclosed area touching (E1 with width >  8.00 <= 11.50) >=  19.00 sq.um.")
   errorLayer( geomOutside( e1a2_err e1a3_err ) "GRE1A2: E1 enclosed area touching (E1 with width > 11.50 <= 14.00) >=  37.00 sq.um.")
   errorLayer( geomOutside( e1a3_err e1a4_err ) "GRE1A3: E1 enclosed area touching (E1 with width > 14.00 <= 17.50) >=  61.00 sq.um.")
   errorLayer( geomOutside( e1a4_err e1a5_err ) "GRE1A4: E1 enclosed area touching (E1 with width > 17.50 <= 21.00) >=  91.00 sq.um.")
   errorLayer( geomOutside( e1a5_err e1a6_err ) "GRE1A5: E1 enclosed area touching (E1 with width > 21.00 <= 24.50) >= 127.00 sq.um.")
   errorLayer( geomOutside( e1a6_err e1a7_err ) "GRE1A6: E1 enclosed area touching (E1 with width > 24.50 <= 28.00) >= 169.00 sq.um.")
   errorLayer( e1a7_err "GRE1A7: E1 enclosed area touching (E1 with width > 28.00 <= 30.00) >= 217.00 sq.um.")


;E2 (VIA E1->MA) RULES
 ;Rule E2a
   drc( e2_not_ring width < 1.991          "GRE2a: E2 width (min) >= 2.000 um.")

 ;Rule E2b
  ;HAVE TO USE A SMALLER VALUE BECAUSE OF THE SPIRAL INDUCTORS.
   drc( e2   sep < 1.992                   "GRE2b: E2 space >= 2.000 um.")
   drc( e2 notch < 1.992                   "GRE2b: E2 notch >= 2.000 um.")

 ;Rule E2c
   drc( e2  area < 4.00                    "GRE2c: E2 area (min) >= 4.000 sq.um.")

 ;Rule E2d
   erre2d = geomAndNot( e2_not_ring e1 )
   drc( e1 e2_not_ring enc < 0.60          "GRE2d: E2 must be within E1 >= 0.600 um.")
   errorLayer( erre2d                      "GRE2d: E2 not within E1 found!")

 ;Rule E2e
   if( avSwitch( "GUARDEDGE_PRESENT" ) then
     erre2e     = geomAndNot( e2_not_ecm ma )
     e2_not_ind = geomAndNot( e2_not_ecm ind_filt )
     e2_ind     = geomAnd(    e2_not_ecm ind_filt )
     drc( ma e2_not_ind enc < 1.76           "GRE2e: E2(not under IND) must be within MA >= 1.760 um.")
     drc( ma e2_ind     enc < 1.76-tolLeg    "GRE2e: E2(under IND) must be within MA >= 1.760 um.")
     errorLayer( erre2e                      "GRE2e: E2 not within MA found!")
   );End GUARDEDGE_PRESENT=YES

   if( !avSwitch( "GUARDEDGE_PRESENT" ) then
     erre2e     = geomAndNot( e2_not_ring ma )
     e2_not_ind = geomAndNot( e2_not_ring ind_filt )
     e2_ind     = geomAnd(    e2_not_ring ind_filt )
     drc( ma e2_not_ind enc < 1.76           "GRE2e: E2(not under IND) must be within MA >= 1.760 um.")
     drc( ma e2_ind     enc < 1.76-tolLeg    "GRE2e: E2(under IND) must be within MA >= 1.760 um.")
     errorLayer( erre2e                      "GRE2e: E2 not within MA found!")
   );End GUARDEDGE_PRESENT=NO

 ;Rule E2f
   ma_not_ring = geomAndNot( ma ma_ring )
   e2_small    = drc( e2_not_ring area < 10.00 )
   e2_large    = geomAndNot( e2_not_ring e2_small )
   e1ma_e2     = geomOverlap( geomAnd( e1_not_ring ma_not_ring ) e2 )
   e1ma_e2sm   = geomAndNot( e1ma_e2 geomOverlap( e1ma_e2 e2_large ) )
   e1ma_one_e2 = geomButtOrOver( e1ma_e2sm e2 keep == 1 )
   e1ma_two_e2 = geomButtOrOver( e1ma_e2sm e2 keep == 2 )
   errptch_e2  = geomOverlap( e1ma_e2sm geomSize( geomInside( e2_not_ring e1ma_two_e2 ) 1.00 ) keep > 1 )
   errorLayer( e1ma_one_e2                 "GRE2f: E1/MA intersection only enclosing one small E2 shape found!")
   errorLayer( errptch_e2                  "GRE2f: E1/MA intersection with two small E2's not at minimum pitch found!")


;FT (VIA - MT->E1) RULES
 ;Rule FT1
   drc( ft  width < 1.2391                      "GRFT1: FT width == 1.24 um.(error <)")
   drc( ft   area > 1.54                        "GRFT1: FT width == 1.24 um.(error >)")

 ;Rule FT2
   drc( ft sep < 1.992                          "GRFT2: FT space >= 2.000 um.")

 ;Rule FT3
   ftb_ind      = geomAnd( ftb_not_ring ind_filt )
   ftb_out_ind  = geomOutside( ftb_not_ring ind_filt )
   errft3_noind = geomSize( geomSize( ftb_out_ind -0.62  ) 0.62  )
   errft3ind    = geomSize( geomSize( ftb_ind     -0.629 ) 0.629 )
   drc( ftb_out_ind  width < 1.24               "GRFT3: FTBAR(outside IND_FLT) width == 1.24 um.(error <)")
   errorLayer( errft3_noind                     "GRFT3: FTBAR(outside IND_FLT) width == 1.24 um.(error >)")
   drc( ftb_ind      width < 1.222              "GRFT3: FTBAR(over IND_FLT) width == 1.24 um.(error <)")
   errorLayer( errft3ind                        "GRFT3: FTBAR(over IND_FLT) width == 1.24 um.(error >)")

 ;Rule FT4
   drc( ftb_not_ring area < 1.56                "GRFT4: FTBAR length (min) <= 1.260 um.")

 if( avSwitch( "GUARDEDGE_PRESENT" ) then
   ;Rule FT5
     errft5 = geomContactCheck( ftb_not_ecm  length <= 20.00 width < 1.30 ignore )
     errorLayer( errft5                           "GRFT5: FTBAR not over (GUARDRNG or CRACKSTOP) length (max) <= 20.00 um.")
 );End GUARDEDGE_PRESENT=YES

 if( !avSwitch( "GUARDEDGE_PRESENT" ) then
   ;Rule LEG_FT5
     drc( ftb_not_ring width < 1.30 length > 20.0 "GRLEG_FT5: FTBAR length (max) <= 20.000 um.")
 );End GUARDEDGE_PRESENT=NO

 ;Rule FT6
   errft6 = geomButtOrOver( ft ftbar )
   drc(ft ftbar 0 < sep < 2.00                  "GRFT6: FT to FTBAR space >= 2.000 um.")
   errorLayer( errft6                           "GRFT6: FT touching FTBAR found!")

 ;Rule FT7
   drc( ftbar sep < 2.00                        "GRFT7: FTBAR space (run length <= 5.0) >= 2.000 um.")

 ;Rule FT8
   drc( ftbar sep < 4.00  5.00 < app            "GRFT8: FTBAR space (run length > 5.0) >= 4.000 um.")

 ;Rule FT9
   errft9 = geomAndNot( ft mt )
   drc( mt_not_ring ft enc < 1.00               "GRFT9: FT must be within MT >= 1.000 um.")
   errorLayer( errft9                           "GRFT9: FT not within MT found!")

 ;Rule FT10
   errft10 = geomAndNot( ftbar mt )
   drc( mt_not_ring ftb_not_ring enc < 1.00     "GRFT10: FTBAR must be within MT >= 1.000 um.")
   errorLayer( errft10                          "GRFT10: FTBAR not within MT found!")

 if( avSwitch( "GUARDEDGE_PRESENT" ) then
   ;Rule FT11
     errorLayer( geomGetPolygon( ft )           "GRFT11: Non-retangular FT found!")
     errorLayer( geomGetPolygon( ftb_not_ecm )  "GRFT11: Non-retangular (FTBAR not over (GUARDRNG or CRACKSTOP)) found!")

   ;Rule FT12
     errft12_ft  = geomGetAngledEdge( ft          44.5 <= keep <= 45.5 fig )
     errft12_ftb = geomGetAngledEdge( ftb_not_ecm 44.5 <= keep <= 45.5 fig )
     errorLayer(errft12_ft                      "GRFT12: 45 degree FT found!")
     errorLayer(errft12_ftb                     "GRFT12: 45 degree TBAR not over (GUARDRNG or CRACKSTOP) found!")
 );End GUARDEDGE_PRESENT=YES

 if( !avSwitch( "GUARDEDGE_PRESENT" ) then
   ;Rule LEG_FT11
     errorLayer( geomGetPolygon( ft )           "GRLEG_FT11: Non-retangular FT found!")
     errorLayer( geomGetPolygon( ftb_not_ring ) "GRLEG_FT11: Non-retangular FTBAR found!")

   ;Rule LEG_FT12
     errft12_ft  = geomGetAngledEdge( ft           44.5 <= keep <= 45.5 fig )
     errft12_ftb = geomGetAngledEdge( ftb_not_ring 44.5 <= keep <= 45.5 fig )
     errorLayer(errft12_ft                      "GRLEG_FT12: 45 degree FT found!")
     errorLayer(errft12_ftb                     "GRLEG_FT12: 45 degree FTBAR found!")
 );End GUARDEDGE_PRESENT=NO


;ANALOG METAL/VIA RULES
 ;Rule AM1
   am_not_ring = geomAnd( geomAndNot( am am_ring ) LM0AM )
   drc( am_not_ring width < 2.000-tolLeg  withCornerTouch "GRAM1: AM width >= 2.000 um.")
   drc( geomAnd( am LM0AM) area < 10.00 "GRAM1a: AM area >= 10.000 sq.um.")

 ;Rule AM2 specifications :
 ; AM spacing values for spiral inductors are calculated as following method
 ; ie for the 5.00 um GRAM2a spacing.
 ;      real value is 5 - (90% * stepgrid ) = 5 - 0.9 * 0.01 = 4.991 um
 ;      NOTE THAT THIS VALUE MUST BE CHANGED IF MINIMUM TECHNOLOGY STEP CHANGE !!

 ;Rule AM2
  ;HAVE TO USE A SMALLER VALUE BECAUSE OF THE SPIRAL INDUCTORS.
   ft_all  = geomOr( ft ftbar )
   drc( am sepNotch < 2.800-tolGrid2 withSingularPoint "GRAM2: AM to AM space >= 2.800 um.")

 ;Rule AM2a
   ft_no_low_ind     = geomSize( geomAndNot( ft_all geomOr( lowcrnt ind_filt ) ) 8.0 )
   am_ft_not_low_ind = geomAnd( am ft_no_low_ind )
   am_to_check       = geomGetEdge( am coincident am_ft_not_low_ind )
   erram2a1          = geomAnd( drc( am_to_check am  0 < sep < 5.000-tolGrid2 ) ft_no_low_ind )
   erram2a           = geomAnd( am geomSize( geomButting( erram2a1 am keep > 1 )  0.01 ) )
   drc( erram2a  sep < 5.000-tolGrid2   "GRAM2a: AM space for AM edges over the same (((FT, FTBAR) not over (LOWCRNT, IND_FILT)) + 8.0um )")

 ;Rule AM2aa
   ft_ind_no_low     = geomSize( geomAndNot( geomAnd( ft_all ind_filt ) lowcrnt ) 6.0 )
   am_ft_ind_not_low = geomAnd( am ft_ind_no_low )
   am_edge_ind       = geomGetEdge( am coincident am_ft_ind_not_low )
   erram2aa1         = geomAnd( drc( am_edge_ind am  0 < sep < 5.000-tolGrid2 ) ft_ind_no_low )
   erram2aa          = geomAnd( am geomSize( geomButting( erram2aa1 am keep > 1 ) 0.01 ) )
   drc( erram2aa  sep < 5.000-tolGrid2   "GRAM2aa: AM space for AM edges (within ((FT,FTBAR) over IND_FILT) not over LOWCRNT +6.0 um.) >= 5.000 um." )

;Rule AM2x
   am_not_ind  = geomAndNot( am ind_filt )

   indf_x2500  = geomSize( ind_filt 25.00 )
   indf_x5000  = geomSize( ind_filt 50.00 )

    am2b        = geomAnd( am geomWidth( am_not_ind keep > 10.006  truncate  5.003 ))
    am2ba       = geomAnd( am geomWidth( am keep > 10.006  truncate  5.003 ))
    am2b2       = geomAnd( am geomWidth( am keep > 25.006  truncate 12.503 ))
    am2c        = geomAnd( am geomWidth( am keep > 50.00  truncate 25.00 ))


    erram2b_45  = geomGetNon90( am2b fig )
    erram2b_90  = geomAndNot( am2b erram2b_45 )
    erram2ba_45 = geomGetNon90( am2ba fig )
    erram2ba_90 = geomAndNot( am2ba erram2ba_45 )
    erram2b2_45 = geomGetNon90( am2b2 fig )
    erram2b2_90 = geomAndNot( am2b2 erram2b2_45 )
    erram2c_45  = geomGetNon90( am2c fig )
    erram2c_90  = geomAndNot( am2c erram2c_45 )

    erram2b_1  = drc( erram2b_90 am_not_ind     sep < 4.00            shielded(am) )
    erram2b_2  = drc( erram2b_45 am_not_ind     sep < 4.00 - tolGrid2 shielded(am) )
    erram2b    = geomOr( erram2b_1 erram2b_2 )

    erram2ba_1 = drc( erram2ba_90 am    sep < 3.00            shielded(am) )
    erram2ba_2 = drc( erram2ba_45 am    sep < 3.00 - tolGrid2 shielded(am) )
    erram2ba   = geomAnd( geomOr( erram2ba_1 erram2ba_2 ) indf_x2500 ) ; Eliminates false errors from the interaction of expanded ind polygons and AM

    erram2b2_1 = drc( erram2b2_90 am    sep < 4.00            shielded(am) )
    erram2b2_2 = drc( erram2b2_45 am    sep < 4.00 - tolGrid2 shielded(am) )
    erram2b2   = geomAnd( geomOr( erram2b2_1 erram2b2_2 ) indf_x5000 ) ; Eliminates false errors from the interaction of expanded ind polygons and AM

    erram2c_1  = drc( erram2c_90 am     sep < 5.00            shielded(am) )
    erram2c_2  = drc( erram2c_45 am     sep < 5.00 - tolGrid2 shielded(am) )
    erram2c    = geomOr( erram2c_1 erram2c_2 )

    errorLayer( erram2b "GRAM2b: (AM not over IND_FILT)(>10.00) to AM space >= 4.00 um.")
    ;Suppression of possible duplicate errors
    errorLayer( geomOr( geomOutside( erram2ba erram2b2 ) geomStraddle( erram2ba erram2b2 ) ) "GRAM2ba: AM over (IND_FILT +25.0)(>10.00 and <=25) to AM space >= 3.00 um.")
    errorLayer( geomOr( geomOutside( erram2b2 erram2c ) geomStraddle( erram2b2 erram2c ) ) "GRAM2b2: AM over (IND_FILT +50.0)(>25.00) to AM space >= 4.00 um.")
    errorLayer( erram2c  "GRAM2c:  AM(>50.00) to AM space >= 5.00 um.")

 ;Rule AM3
   erram3ft  = geomAnd( geomAndNot( ft am ) LM0AM )
   erram3ftb = geomAnd( geomAndNot( ftb_not_ring am ) LM0AM )
   drc( am ft           enc < 1.00-tolGrid2  "GRAM3: FT must be within AM >= 1.000 um.")
   drc( am ftb_not_ring enc < 1.00-tolGrid2  "GRAM3: FTBAR must be within AM >= 1.000 um.")
   errorLayer( erram3ft                      "GRAM3: FT not within AM found!")
   errorLayer( erram3ftb                     "GRAM3: FTBAR not within AM found!")

 ;Rule AM4
   erram4dv = geomAnd( geomAndNot( geomInside( dv ChipEdge ) am ) LM0AM )
   erram4lv = geomAnd( geomAndNot( geomInside( lv ChipEdge ) am ) LM0AM )
   errorLayer( erram4dv                    "GRAM4: DV(within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)}) not within AM found!")
   errorLayer( erram4lv                    "GRAM4: LV(within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)}) not within AM found!")


 ;Rule MA1
   drc( ma_not_ring width < 2.000-tolLeg     "GRMA1: MA width >= 2.000 um.")

 ;Rule MA1a
   drc( ma           area < 10.00            "GRMA1a: MA minimum area >= 10.00 sq.um." )

 ;Rule MA2
  ;HAVE TO USE A SMALLER VALUE BECAUSE OF THE SPIRAL INDUCTORS.
   drc( ma  sepNotch < 2.800-tolGrid2 withSingularPoint   "GRMA2: MA space >= 2.800 um.")

 ;Rule MA2a
   e2_not_indLct  = geomSize( geomAndNot( e2 geomOr( lowcrnt ind_filt ) ) 8.0 )
   ma_e2_not_ind  = geomAnd( ma e2_not_indLct )
   ma_e2_to_check = geomGetEdge( ma coincident ma_e2_not_ind )
   errma2a1       = geomAnd( drc( ma_e2_to_check ma  0 < sep < 5.000-tolGrid2 ) e2_not_indLct )
   errma2a        = geomAnd( ma geomSize( geomButting( errma2a1  ma keep > 1 ) 0.01 ) )
   drc( errma2a  sep < 5.000-tolGrid2  "GRMA2a: MA space (within (E2 not over (LOWCRNT, IND_FILT)) +8.0 um.) >= 5.000 um.")

 ;Rule MA2aa
   e2_ind_ntlow    = geomSize( geomAndNot( geomAnd( e2 ind_filt ) lowcrnt ) 6.0 )
   ma_e2_ind_ntlow = geomAnd( ma e2_ind_ntlow )
   ma_coin_edge    = geomGetEdge( ma coincident ma_e2_ind_ntlow )
   errma2aa1       = geomAnd( drc( ma_coin_edge ma  0 < sep < 5.000-tolGrid2 ) e2_ind_ntlow )
   errma2aa        = geomAnd( ma geomSize( geomButting( errma2aa1 ma keep > 1 ) 0.01 ) )
   drc( errma2aa  sep < 5.000-tolGrid2 "GRMA2aa: MA space for MA edges (within (e2 over IND_FILT) not over LOWCRNT  +6.0 um.) >= 5.000 um.")

 ;Rule MA2xx
    ma_not_ind  = geomAnd( geomAndNot( ma ind_filt ) LM0MA )
    ft_ovr_indf = geomAnd(    ft ind_filt )

    indf_x2500  = geomSize( ind_filt 25.00 )
    indf_x5000  = geomSize( ind_filt 50.00 )

    ma_4_ma2ba  = geomAnd( geomAnd( ma indf_x2500 ) LM0MA )
    ma_4_ma2b2  = geomAnd( geomAnd( ma indf_x5000 ) LM0MA )

    ma2b        = geomAnd( ma_not_ind geomWidth( ma_not_ind keep > 10.006 truncate  5.003 ))
    ma2ba       = geomAnd( ma geomWidth( ma keep > 10.006 truncate  5.003 ))
    ma2b2       = geomAnd( ma geomWidth( ma keep > 25.006 truncate 12.503 ))
    ma2c        = geomAnd( ma geomWidth( ma keep > 50.00 truncate 25.00 ))

    errma2b_45  = geomGetNon90( ma2b fig )
    errma2b_90  = geomAndNot( ma2b errma2b_45 )
    errma2ba_45 = geomGetNon90( ma2ba fig )
    errma2ba_90 = geomAndNot( ma2ba errma2ba_45 )
    errma2b2_45 = geomGetNon90( ma2b2 fig )
    errma2b2_90 = geomAndNot( ma2b2 errma2b2_45 )
    errma2c_45  = geomGetNon90( ma2c fig )
    errma2c_90  = geomAndNot( ma2c errma2c_45 )

    errma2b_1  = drc( errma2b_90 ma_not_ind     sep < 4.00            shielded(ma) )
    errma2b_2  = drc( errma2b_45 ma_not_ind     sep < 4.00 - tolGrid2 shielded(ma) )
    errma2b    = geomOr( errma2b_1 errma2b_2 )

    errma2ba_1 = drc( errma2ba_90 ma    sep < 3.00            shielded(ma) )
    errma2ba_2 = drc( errma2ba_45 ma    sep < 3.00 - tolGrid2 shielded(ma) )
    errma2ba   = geomAnd( geomOr( errma2ba_1 errma2ba_2 ) indf_x2500 ) ; Eliminates false errors from the interaction of expanded ind polygons and MA

    errma2b2_1 = drc( errma2b2_90 ma    sep < 4.00            shielded(ma) )
    errma2b2_2 = drc( errma2b2_45 ma    sep < 4.00 - tolGrid2 shielded(ma) )
    errma2b2   = geomAnd( geomOr( errma2b2_1 errma2b2_2 ) indf_x5000 ) ; Eliminates false errors from the interaction of expanded ind polygons and MA

    errma2c_1  = drc( errma2c_90 ma     sep < 5.00            shielded(ma) )
    errma2c_2  = drc( errma2c_45 ma     sep < 5.00 - tolGrid2 shielded(ma) )
    errma2c    = geomOr( errma2c_1 errma2c_2 )

    errorLayer( errma2b "GRMA2b: (MA not over IND_FILT)(>10.00) to MA space >= 4.00 um.")
    ;Suppression of possible duplicate errors
    errorLayer( geomOr( geomOutside( errma2ba errma2b2 ) geomStraddle( errma2ba errma2b2 ) ) "GRMA2ba: MA over (IND_FILT +25.0)(>10.00 and <=25) to MA space >= 3.00 um.")
    errorLayer( geomOr( geomOutside( errma2b2 errma2c ) geomStraddle( errma2b2 errma2c ) ) "GRMA2b2: MA over (IND_FILT +50.0)(>25.00 and <=50) to MA space >= 4.00 um.")
    errorLayer( errma2c  "GRMA2c:  MA(>50.00) to MA space >= 5.00 um.")

 ;Rule MA4
   errma4dv = geomAnd( geomAndNot( geomInside( dv ChipEdge ) ma ) LM0MA )
   errma4lv = geomAnd( geomAndNot( geomInside( lv ChipEdge ) ma ) LM0MA )
   errorLayer( errma4dv                   "GRMA4: DV(within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)}) not within MA found!")
   errorLayer( errma4lv                   "GRMA4: LV(within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)}) not within MA found!")


 ;Rule ML1
   ml_not_ring = geomAnd( geomAndNot( ml ml_ring ) LM0ML )
   drc( ml_not_ring width < 2.400-tolLeg withCornerTouch "GRML1: ML width >= 2.400 um.")

 ;Rule ML2
  ;HAVE TO USE A SMALLER VALUE BECAUSE OF THE SPIRAL INDUCTORS.
   drc( ml sepNotch < 2.400-tolLeg withSingularPoint     "GRML2: ML space >= 2.400 um.")

 ;Rule ML3
   errml3ft  = geomAnd( geomAndNot( ft           ml ) LM0ML )
   errml3ftb = geomAnd( geomAndNot( ftb_not_ring ml ) LM0ML )
   drc( ml ft           enc < 0.60-tolLeg                "GRML3: FT must be within ML >= 0.600 um.")
   drc( ml ftb_not_ring enc < 0.60-tolLeg                "GRML3: FTBAR must be within ML >= 0.600 um.")
   errorLayer( errml3ft                                   "GRML3: FT not within ML found!")
   errorLayer( errml3ftb                                  "GRML3: FTBAR not within ML found!")

 ;Rule ML4
   errml4dv = geomAnd( geomAndNot( geomInside( dv ChipEdge ) ml ) LM0ML )
   errml4lv = geomAnd( geomAndNot( geomInside( lv ChipEdge ) ml ) LM0ML )
   errorLayer( errml4dv                   "GRML4: DV(within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)}) not within ML found!")
   errorLayer( errml4lv                   "GRML4: LV(within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)}) not within ML found!")


 ;Rule MZ1
   errmz1 = geomAnd( drc( mz_not_ring width < 2.00-tolLeg withCornerTouch ) LM0MZ )
   errorLayer( errmz1  "GRMZ1: MZ width >= 2.00 um.")
   errmz1a = geomAnd( drc( mz area < 10.0 ) LM0MZ )
   errorLayer( errmz1a "GRMZ1a: MZ area >= 10.00 um.")
   errmz2 = geomAnd( drc( mz sepNotch < 2.80-tolLeg withSingularPoint ) LM0MZ )
   errorLayer( errmz2  "GRMZ2: MZ space >= 2.80 um.")

 ;Rule MZ2a
   mz_ft_not_low_ind  = geomAnd( mz ft_no_low_ind )
   mz_to_check        = geomGetEdge( mz coincident mz_ft_not_low_ind )
   errmz2a1           = geomAnd( drc( mz_to_check mz  0 < sep < 5.000-tolGrid2 ) ft_no_low_ind )
   errmz2a            = geomAnd( mz geomSize( geomButting( errmz2a1 mz keep > 1 )  0.01 ) )
   errmz2a_f          = geomAnd( drc( errmz2a  sep < 5.000-tolGrid2 withSingularPoint ) LM0MZ )
   errorLayer( errmz2a_f  "GRMZ2a: MZ space for MZ edges within ((FT,FTBAR) not over (LOWCRNT, IND_FILT) +8.0 um.) >= 5.000 um." )

;Rule MZ2aa
   mz_ft_ind_not_low  = geomAnd( mz ft_ind_no_low )
   mz_edge_ind        = geomGetEdge( mz coincident mz_ft_ind_not_low )
   errmz2aa1          = geomAnd( drc( mz_edge_ind mz  0 < sep < 5.000-tolGrid2 ) ft_ind_no_low )
   errmz2aa           = geomAnd( mz geomSize( geomButting( errmz2aa1 mz keep > 1 ) 0.01 ) )
   errmz2aa_f         = geomAnd( drc( errmz2aa  sep < 5.000-tolGrid2 withSingularPoint ) LM0MZ )
   errorLayer( errmz2aa_f   "GRMZ2aa: mz space for mz edges within ((((FT,FTBAR) over IND_FILT) not over LOWCRNT) +6.0 um.) >= 5.000 um.")

;Rule MZ2xx
   mz_not_ind  = geomAnd( geomAndNot( mz ind_filt )  LM0MZ )
   ft_ovr_indf = geomAnd( geomAnd(    ft ind_filt )  LM0MZ )

   mz_4_mz2ba  = geomAnd( geomAnd( mz indf_x2500 )  LM0MZ )
   mz_4_mz2b2  = geomAnd( geomAnd( mz indf_x5000 )  LM0MZ )

   mz_out_logo = geomAvoiding( mz logobnd )

   mz2b        = geomAnd( mz_not_ind geomWidth( mz_not_ind keep > 10.006 truncate  5.003 ))
   mz2ba       = geomAnd( mz geomWidth( mz keep > 10.006 truncate  5.003 ))
   mz2b2       = geomAnd( mz geomWidth( mz keep > 25.006 truncate 12.503 ))
   mz2c        = geomAnd( mz geomWidth( mz keep > 50.00 truncate 25.00 ))

   errmz2b_45  = geomGetNon90( mz2b fig )
   errmz2b_90  = geomAndNot( mz2b errmz2b_45 )
   errmz2ba_45 = geomGetNon90( mz2ba fig )
   errmz2ba_90 = geomAndNot( mz2ba errmz2ba_45 )
   errmz2b2_45 = geomGetNon90( mz2b2 fig )
   errmz2b2_90 = geomAndNot( mz2b2 errmz2b2_45 )
   errmz2c_45  = geomGetNon90( mz2c fig )
   errmz2c_90  = geomAndNot( mz2c errmz2c_45 )

   errmz2b_1  = drc( errmz2b_90 mz_not_ind     sep < 4.00            shielded(mz) )
   errmz2b_2  = drc( errmz2b_45 mz_not_ind     sep < 4.00 - tolGrid2 shielded(mz) )
   errmz2b    = geomOr( errmz2b_1 errmz2b_2 )

   errmz2ba_1 = drc( errmz2ba_90 mz    sep < 3.00            shielded(mz) )
   errmz2ba_2 = drc( errmz2ba_45 mz    sep < 3.00 - tolGrid2 shielded(mz) )
   errmz2ba   = geomAnd( geomOr( errmz2ba_1 errmz2ba_2 ) indf_x2500 ) ; Eliminates false errors from the interaction of expanded ind polygons and mz

   errmz2b2_1 = drc( errmz2b2_90 mz    sep < 4.00            shielded(mz) )
   errmz2b2_2 = drc( errmz2b2_45 mz    sep < 4.00 - tolGrid2 shielded(mz) )
   errmz2b2   = geomAnd( geomOr( errmz2b2_1 errmz2b2_2 ) indf_x5000 ) ; Eliminates false errors from the interaction of expanded ind polygons and mz

   errmz2c_1  = drc( errmz2c_90 mz     sep < 5.00            shielded(mz) )
   errmz2c_2  = drc( errmz2c_45 mz     sep < 5.00 - tolGrid2 shielded(mz) )
   errmz2c    = geomOr( errmz2c_1 errmz2c_2 )

   errorLayer( errmz2b "GRMZ2b: (MZ not over IND_FILT)(>10.00) to MZ space >= 4.00 um.")
   ;Suppression of possible duplicate errors
   errorLayer( geomOr( geomOutside( errmz2ba errmz2b2 ) geomStraddle( errmz2ba errmz2b2 ) ) "GRMZ2ba: MA over (IND_FILT +25.0)(>10.00 and <=25) to MZ space >= 3.00 um.")
   errorLayer( geomOr( geomOutside( errmz2b2 errmz2c ) geomStraddle( errmz2b2 errmz2c ) ) "GRMZ2b2: MA over (IND_FILT +50.0)(>25.00 and <=50) to MZ space >= 4.00 um.")
   errorLayer( errmz2c  "GRMZ2c:  MZ(>50.00) to MZ space >= 5.00 um.")

 ;Rule MZ3
   errmz3ft  = geomAnd( geomAndNot( ft mz ) LM0MZ )
   errmz3ftb = geomAnd( geomAndNot( ftb_not_ring mz ) LM0MZ )
   drc( mz ft           enc < 1.00-tolGrid2  "GRMZ3: FT must be within MZ >= 1.000 um.")
   drc( mz ftb_not_ring enc < 1.00-tolGrid2  "GRMZ3: FTBAR must be within MZ >= 1.000 um.")
   errorLayer( errmz3ft                       "GRMZ3: FT not within MZ found!")
   errorLayer( errmz3ftb                      "GRMZ3: FTBAR not within MZ found!")

 ;Rule MZ4
   errmz4 =  geomAnd( geomAndNot( geomInside( tv ChipEdge ) mz ) LM0MZ )
   errorLayer( errmz4                      "GRMZ4: (TV within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} ) not within MZ found!")

 ;Rule MZ5
   errmz5 =  geomAnd( geomButtOrOver( mz geomButtOrOver( chipedge dv)) LM0MZ )
   errorLayer( errmz5                       "GRMZ5: MZ touching (CHIPEDGE touching DV) is not allowed found!")


;MIM CAPACITOR RULES
 ;Rule QCAP1
  ;QCAP1c CANNOT BE CHECKED IN THIS DRC DECK - CHECKED IN PATTERN DENSITY.
   errqcap1dqt = geomSize( geomSize( qt  -500.00 ) 500.00 )
   errqcap1dht = geomSize( geomSize( ht  -500.00 ) 500.00 )
   drc( qt width < 4.00                    "GRQCAP1: QT width >= 4.000 um.")
   drc( ht width < 4.0                     "GRQCAP1a: HT width >= 4.000 um.")
   drc( qt  area > 100000.0                "GRQCAP1b: QT area (max per shape) <= 100,000.0 sq.um.")
   drc( ht  area > 100000.0                "GRQCAP1b: HT area (max per shape) <= 100,000.0 sq.um.")
   errorLayer( errqcap1dqt                "GRQCAP1d: QT width (max) <= 1,000.0 um.")
   errorLayer( errqcap1dht                "GRQCAP1d: HT width (max) <= 1,000.0 um.")

 ;Rule QCAP2
   errqcap2a_qt = geomGetPolygon( qt )
   errqcap2a_ht = geomGetPolygon( ht )
   errqcap2b_qt = geomOverlap( qt geomSize( geomLineEnd( qt 1000.0 4.0 legs( 3.0001 relative ) ) -0.02 ) )
   errqcap2b_ht = geomOverlap( ht geomSize( geomLineEnd( ht 1000.0 4.0 legs( 3.0001 relative ) ) -0.02 ) )
   drc( qt   sep < 2.2                     "GRQCAP2: QT space >= 2.200 um.")
   drc( ht   sep < 3.6                     "GRQCAP2a1: HT space >= 3.600 um.")
   errorLayer( errqcap2a_qt               "GRQCAP2a: Non-rectangular QT shapes found!")
   errorLayer( errqcap2a_ht               "GRQCAP2a: Non-rectangular HT shapes found!")
   errorLayer( errqcap2b_qt               "GRQCAP2b: QT MIM aspect ratio > 3.0 found!")
   errorLayer( errqcap2b_ht               "GRQCAP2b: HT MIM aspect ratio > 3.0 found!")

 ;Rule QCAP3
   errqcap3  = geomAndNot( qt mt )
   errqcap3a = geomAndNot( ht qt )
   drc( mt qt enc < 0.7                    "GRQCAP3: QT must be within MT >= 0.700 um.")
   errorLayer( errqcap3                   "GRQCAP3: QT not within MT found!")
   drc( qt ht enc < 0.7                    "GRQCAP3a: HT must be within QT >= 0.700 um.")
   errorLayer( errqcap3a                  "GRQCAP3a: HT not within QT found!")

 ;Rule QCAP4
   qt_encl_ht  = geomEnclose( qt ht )
   ft_out_ht   = geomOutside( geomButtOrOver( ft qt ) ht )
   errqcap4    = geomOutside( qt_encl_ht ft_out_ht )
   ft_strad_qt = geomStraddle( ft qt )
   ft_strad_ht = geomStraddle( ft ht )
   errqcap4av1 = geomAnd( geomEnclose( geomButtOrOver( mt_not_ring qt ) v1 ) geomOr( LM1AM LM1MA LM1ML ) )
   errqcap4av2 = geomAnd( geomEnclose( geomButtOrOver( mt_not_ring qt ) v2 ) geomOr( LM2AM LM2MA LM2ML ) )
   errqcap4av3 = geomAnd( geomEnclose( geomButtOrOver( mt_not_ring qt ) v3 ) geomOr( LM3AM LM3MA LM3ML ) )
   errqcap4av4 = geomAnd( geomEnclose( geomButtOrOver( mt_not_ring qt ) v4 ) geomOr( LM4AM LM4MA LM4ML ) )
   errqcap4av5 = geomAnd( geomEnclose( geomButtOrOver( mt_not_ring qt ) v5 ) geomOr( LM5AM LM5MA LM5ML LM5MZ ) )
   drc( qt ft enc < 1.2                   "GRQCAP4: FT within QT >= 1.200 um.")
   errorLayer( ft_strad_qt                "GRQCAP4: FT straddling QT found!")
   errorLayer( errqcap4                   "GRQCAP4: QT(touching HT) not touching FT(outside of HT) found!")
   errorLayer( errqcap4av1                "GRQCAP4a: (MT touching QT) touching V1 found!")
   errorLayer( errqcap4av2                "GRQCAP4a: (MT touching QT) touching V2 found!")
   errorLayer( errqcap4av3                "GRQCAP4a: (MT touching QT) touching V3 found!")
   errorLayer( errqcap4av4                "GRQCAP4a: (MT touching QT) touching V4 found!")
   errorLayer( errqcap4av5                "GRQCAP4a: (MT touching QT) touching V5 found!")
   drc( ht ft     enc < 1.2               "GRQCAP4b: FT within HT >= 1.200 um.")
   errorLayer( ft_strad_ht                "GRQCAP4b: FT straddling HT found!")
   drc( ft    ht sep < 1.0                 "GRQCAP4c: FT to HT space >= 1.000 um.")

 ;Rule QCAP5
   drc( ft    qt     sep < 1.0             "GRQCAP5: FT to adjacent QT >= 1.000 um.")
   drc( ftbar qt 0 < sep < 1.0             "GRQCAP5: FTBAR to adjacent QT >= 1.000 um.")

 ;Rule QCAP6
   errqcap6 = geomButtOrOver( ftbar qt )
   errorLayer( errqcap6                   "GRQCAP6: FTBAR touching QT found!")

 ;Rule QCAP8
   pc_or_di_or_pi    = geomOr( pc di pi mosvar)
   bb_out_pcdipi = geomAvoiding( bb pc_or_di_or_pi )
   nw_out_pcdipi = geomAvoiding( nw pc_or_di_or_pi )
   errqcap8_bb = geomStraddle( qt bb_out_pcdipi )
   errqcap8_nw = geomStraddle( qt nw_out_pcdipi )
   drc( bb_out_pcdipi qt enc < 4.00          "GRQCAP8b: QT within BB(not touching (PC or DI or PI or MOSVAR)) >= 4.000 um.")
   drc( nw_out_pcdipi qt enc < 4.00          "GRQCAP8b: QT within NW(not touching (PC or DI or PI or MOSVAR)) >= 4.000 um.")
   errorLayer( errqcap8_bb                "GRQCAP8b: QT straddling BB(not touching (PC or DI or PI or MOSVAR)) found!")
   errorLayer( errqcap8_nw                "GRQCAP8b: QT straddling NW(not touching (PC or DI or PI or MOSVAR)) found!")

 ;Rule QCAP10
   mt_touching_qt       = geomAndNot( mt geomAvoiding( mt qt ) )
   mt_notch             = drc( mt_touching_qt     notch < 0.80 )
   errqcap10            = geomAndNot( drc( mt_touching_qt mt sep < 0.80 )  mt_notch )
   errorLayer( errqcap10                       "GRQCAP10: (MT touching QT) to MT space >= 0.800!")

 ;Rule QCAP12
   qt_over_nw = geomInside( qt nw )
   drc( nw    qt_over_nw  enc < 4.00       "GRQCAP12b: QT(covered by NW) within NW >= 4.000 um.")

 ;Rule QCAP16
   qt_qcap16 = geomAvoiding( qt geomOr( nw pc rx ) )
   qt_qcap16_1 = geomAvoiding( qt geomOr( pc rx ) )
   drc( ns qt_qcap16_1 sep < 4.60            "GRQCAP16: NS to adjacent QT(not touching {PC,RX}) >= 4.600 um.")
   drc( nw qt_qcap16 sep < 4.60            "GRQCAP16b: NW to adjacent QT(not touching {NW,PC,RX}) >= 4.600 um.")

 ;Rule QCAP17R
    qt_x070 = geomAvoiding( geomSize( qt 0.70 ) geomOr( rx pc ) )
 ;  drc( qt_x070 rx sep < 2.80             "GRQCAP17R: ((QT expanded by 0.70)) to RX space >= 2.800 um.")

 ;Rule QCAP21
   qt_touch_mimhk=geomOverlap( qt  geomAnd( geomSize( mimhk 0.01) qt))
   qt_touch_mimhk_exist=geomEnclose( bkgnd qt_touch_mimhk)
   errqcap21 = geomAnd( geomAndNot(qt mimhk) qt_touch_mimhk_exist)
   errorLayer( errqcap21 "GRQCAP21: QT shapes must be covered by MIM_HK (if at least one QT touch MIM_HK).")

 ;Rule QCAP22
   ht_exist    = geomEnclose( bkgnd ht )
   mimhk_exist = geomEnclose( bkgnd mimhk )
   errqcap22   = geomAnd( geomOr(ht mimhk) geomAnd(ht_exist mimhk_exist))
   errorLayer( errqcap22 "GRQCAP22: HT and MIM_HK cannot exist in the same design !!!")

 ;Rule QCAP22a
   mim_hk_good=geomOverlap( mimhk  geomAnd( geomSize( qt 0.01) mimhk))
   errqcap22a=geomAndNot( mimhk mim_hk_good)
   errorLayer( errqcap22a "GRQCAP22a: (MIM_HK not touching QT) found!")

 ;Rule QCAP23a
;   errqcap23a    = drcAntenna(qt gate( qt ) antenna( ft_qt ) keep > 0.100 )
;   errorLayer( errqcap23a "GRQCAP23a: (Ratio of (FT over (QT touching MIMHK or MIM_HD)) area to QT area) > 10% found !" )

    errqcap23a = drcAntenna(qt_hk gate( qt_hk ) antenna( ft_qt_hk ) keep > 0.100 )
    errorLayer( errqcap23a "GRQCAP23a: (Ratio of (FT over (QT touching MIMHK or MIMHD)) area to QT area) > 10.0% found !")

    errqcap23b = drcAntenna(ht_hd gate( ht_hd ) antenna( ft_ht_hd ) keep > 0.100 )
    errorLayer( errqcap23b "GRQCAP23b: (Ratio of (FT over HT) area to HT area) > 10.0% found !")

 ;Rule QCAP30
   mimhd_exist = geomEnclose( bkgnd mimhd )
   mimht_exist = geomEnclose( bkgnd ht )
   qt_touch_mimhd=geomOverlap( qt  geomAnd( geomSize( mimhd 0.01) qt))
   qt_touch_mimhd_exist=geomEnclose( bkgnd qt_touch_mimhd)
   errqcap30 = geomAnd( geomAndNot(qt mimhd) qt_touch_mimhd_exist)
   errqcap30_bis = geomAnd( mimhd geomAnd(  mimhd_exist mimht_exist ))
   errorLayer( errqcap30       "GRQCAP30: QT shapes must be covered by MIM_HD (if at least one QT touch MIM_HD).")
   errorLayer( errqcap30_bis   "GRQCAP30: MIM_HD and HT can not exist in same design")

 ;Rule QCAP30a
   mim_hd_good=geomOverlap( mimhd  geomAnd( geomSize( qt 0.01) mimhd))
   errqcap30a=geomAndNot( mimhd mim_hd_good)
   errorLayer( errqcap30a "GRQCAP30a: (MIM_HD not covering QT) found!")
   errqcap30a_2 = geomButtOrOver( mimhd  geomAndNot(qt_touch_mimhd mimhd))
   errorLayer( errqcap30a_2 "GRQCAP30a: (MIM_HD partly covering QT) found!")

 ;Rule QCAP33
   errqcap33a= geomOverlap( mimhd  geomAnd( geomSize( mimhk 0.01 ) mimhd ) )
   errqcap33b=geomButtOrOver( mimhd mimhk)
   errqcap33=geomOr( errqcap33a errqcap33b)
   errorLayer( errqcap33  "GRQCAP33: MIM_HD touching MIM_HK found !!!")

 ;Rule QCAP34
   mimhd_exist = geomEnclose( bkgnd mimhd )
   errqcap34   = geomAnd( geomOr( mimhd mimhk ) geomAnd(mimhd_exist mimhk_exist))
   errorLayer( errqcap34 "GRQCAP34: MIM_HD MIM_HK cannot exist in the same design !!!")


;INDUCTOR RULES
 ;Rule IND10 (THIS RULE DEFINES THE INDUCTOR FOR CHECKING PURPOSES)
   am_ind =  geomAnd( am ind_filt )
   e1_ind =  geomAnd( e1 ind_filt )
   ma_ind =  geomAnd( ma ind_filt )
   ml_ind =  geomAnd( ml ind_filt )

 if( avSwitch( "HIRESSUB") then
 ;Rule IND8_HR
   errind8hr_am = geomAnd( am_ind nohr )
   errind8hr_e1 = geomAnd( e1_ind nohr )
   errind8hr_ma = geomAnd( ma_ind nohr )
   errind8hr_ml = geomAnd( ml_ind nohr )
   drc( am_ind nohr sep < 25.0 shielded withSingularPoint   "GRIND8_HR: ( AM over IND_FILT ) to NOHR >=25.00um.")
   drc( ma_ind nohr sep < 25.0 shielded withSingularPoint   "GRIND8_HR: ( MA over IND_FILT ) to NOHR >=25.00um.")
   drc( e1_ind nohr sep < 25.0 shielded withSingularPoint   "GRIND8_HR: ( E1 over IND_FILT ) to NOHR >=25.00um.")
   drc( ml_ind nohr sep < 25.0 shielded withSingularPoint   "GRIND8_HR: ( ML over IND_FILT ) to NOHR >=25.00um.")
   errorLayer( errind8hr_am "GRIND8_HR: ( AM over IND_FILT ) touching NOHR found!!")
   errorLayer( errind8hr_e1 "GRIND8_HR: ( E1 over IND_FILT ) touching NOHR found!!")
   errorLayer( errind8hr_ma "GRIND8_HR: ( MA over IND_FILT ) touching NOHR found!!")
   errorLayer( errind8hr_ml "GRIND8_HR: ( ML over IND_FILT ) touching NOHR found!!")
 )
 ;Rule IND10b
  errind10b = geomAnd( geomOverlap( ind_filt geomSize( geomButtOrOver( chipedge mz ) 0.01 ) ) LM0MZ )
  errorLayer( errind10b   "GRIND10b: IND_FILT touching ( CHIPEDGE touching MZ )  found!!")

 ;Rule IND11
   bn_ind11     = geomAnd( bn ind_filt )
   bp_ind11     = geomAnd( bp ind_filt )
   cabar_ind11  = geomAnd( cabar ind_filt )
   lv_ind11     = geomAnd( lv ind_filt )
   lvd_ind11    = geomAnd( lvdummy ind_filt )
   m1_not_M1_MT = geomAndNot( m1 geomOr( LM1AM LM1ML LM1MA) )
   m1_strad     = geomStraddle( m1_not_M1_MT ind_filt )
   m2_ind11     = geomOutside( geomAnd( m2 ind_filt ) geomOr( v1 v2 ) )
   m3_ind11     = geomOutside( geomAnd( m3 ind_filt ) geomOr( v2 v3 ) )
   m4_ind11     = geomOutside( geomAnd( m4 ind_filt ) geomOr( v3 v4 ) )
   m5_ind11     = geomOutside( geomAnd( m5 ind_filt ) geomOr( v4 v5 ) )
   ns_ind11     = geomAnd( ns ind_filt )
   nw_ind11     = geomAnd( nw ind_filt )
   op_ind11     = geomAnd( op ind_filt )
   qt_ind11     = geomAnd( qt ind_filt )
   rn_ind11     = geomAnd( rn ind_filt )
   rx_ind11     = geomOverlap( geomButtOrOver( rx ind_filt ) geomAndNot( ca pc ) )
   rx_strad     = geomStraddle( rx ind_filt )
   ftall_u_ind  = geomAnd( ft_all ind_filt)
   v1_u_ind     = geomAnd( v1 ind_filt)
   v1_ind_M1_MT = geomAnd( v1_u_ind geomOr( LM1AM LM1ML LM1MA) )
   mt_ind11     = geomOutside( geomAnd( mt ind_filt ) geomOr( ftall_u_ind v1_ind_M1_MT) )

 if( avSwitch( "Merge_GRIND11" ) then
   mind11a     = geomOr( bn_ind11 bp_ind11 cabar_ind11 lv_ind11 lvd_ind11 m1_strad m2_ind11 m3_ind11 m4_ind11 m5_ind11 )
   mind11b     = geomOr( mt_ind11 ns_ind11 nw_ind11 op_ind11 qt_ind11 rn_ind11 rx_ind11 rx_strad )
   merge_ind11 = geomButtOrOver( ind_filt geomOr( mind11a mind11b ) )
   errorLayer( merge_ind11                     "GRIND11: Invalid layer under IND_FLT found!")

 else
   errorLayer( bn_ind11                        "GRIND11: Invalid layer under IND_FLT found! (BN)")
   errorLayer( bp_ind11                        "GRIND11: Invalid layer under IND_FLT found! (BP)")
   errorLayer( cabar_ind11                     "GRIND11: Invalid layer under IND_FLT found! (CABAR)")
   errorLayer( lv_ind11                        "GRIND11: Invalid layer under IND_FLT found! (LV)")
   errorLayer( lvd_ind11                       "GRIND11: Invalid layer under IND_FLT found! (LVDUMMY)")
   errorLayer( m1_strad                        "GRIND11: M1 straddling IND_FLT found!")
   errorLayer( m2_ind11                        "GRIND11: Invalid layer under IND_FLT found! (M2)")
   errorLayer( m3_ind11                        "GRIND11: Invalid layer under IND_FLT found! (M3)")
   errorLayer( m4_ind11                        "GRIND11: Invalid layer under IND_FLT found! (M4)")
   errorLayer( m5_ind11                        "GRIND11: Invalid layer under IND_FLT found! (M5)")
   errorLayer( mt_ind11                        "GRIND11: Invalid layer under IND_FLT found! (MT)")
   errorLayer( ns_ind11                        "GRIND11: Invalid layer under IND_FLT found! (NS)")
   errorLayer( nw_ind11                        "GRIND11: Invalid layer under IND_FLT found! (NW)")
   errorLayer( op_ind11                        "GRIND11: Invalid layer under IND_FLT found! (OP)")
   errorLayer( qt_ind11                        "GRIND11: Invalid layer under IND_FLT found! (QT)")
   errorLayer( rn_ind11                        "GRIND11: Invalid layer under IND_FLT found! (RN)")
   errorLayer( rx_ind11                        "GRIND11: Invalid layer under IND_FLT found! (RX)")
   errorLayer( rx_strad                        "GRIND11: RX straddling IND_FLT found!")

);END of IND11 RULES

 ;Rule IND12
  ;NS(over IND) COVERED UNDER IND11
   drc( ns ind_filt sep < 4.60                       "GRIND12: NS to IND_FILT space >= 4.600 um.")
if( !avSwitch("HIRESSUB") then
 ;Rule IND13
   errind13_am = geomAndNot( am_ind bb )
   errind13_e1 = geomAndNot( e1_ind bb )
   errind13_ma = geomAndNot( ma_ind bb )
   errind13_ml = geomAndNot( ml_ind bb )
   errorLayer( errind13_am                     "GRIND13: AM(over IND_FLT) not covered by BB found!")
   errorLayer( errind13_e1                     "GRIND13: E1(over IND_FLT) not covered by BB found!")
   errorLayer( errind13_ma                     "GRIND13: MA(over IND_FLT) not covered by BB found!")
   errorLayer( errind13_ml                     "GRIND13: ML(over IND_FLT) not covered by BB found!")
)
 ;Rule IND16
   errind16bp  = geomButtOrOver( bb_ind bp )
   errind16pc  = geomButtOrOver( bb_ind geomOutside( pc ind_filt ) )
   errind16rx  = geomButtOrOver( bb_ind geomOutside( rx ind_filt ) )
   errorLayer( errind16bp                      "GRIND16: (BB touch IND_FLT) touching BP found!")
   errorLayer( errind16pc                      "GRIND16: (BB touch IND_FLT) touching (PC not touching IND_FLT) found!")
   errorLayer( errind16rx                      "GRIND16: (BB touch IND_FLT) touching (RX not touching IND_FLT) found!")

 ;Rule IND23
   inductor = geomOr( am_ind ma_ind ml_ind )
   errshort = geomAndNot( inductor geomOr( tline_am tline_ma tline_ml ) )
   errorLayer( errshort                        "GRIND23: SHORTED INDUCTOR COILS FOUND!")

 ;Rule IND23a
   e1_coil_ind =geomAnd( e1_coil ind_filt )
   errind23a = geomXor( e1_coil_ind e1_ind )
   errorLayer( errind23a                       "GRIND23a: E1 over IND_FILT must match exactly E1_COIL!")

 ;Rule IND23b
   m3_ind = geomAnd( m3 ind_filt )
   m4_ind = geomAnd( m4 ind_filt )
   m5_ind = geomAnd( m5 ind_filt )
   mt_ind = geomAnd( mt ind_filt )
   m3_coil_ind = geomAnd( m3_coil ind_filt )
   m4_coil_ind = geomAnd( m4_coil ind_filt )
   m5_coil_ind = geomAnd( m5_coil ind_filt )
   mt_coil_ind = geomAnd( mt_coil ind_filt )
   errind23bm3 = geomXor( m3_coil_ind m3_ind )
   errind23bm4 = geomXor( m4_coil_ind m4_ind )
   errind23bm5 = geomXor( m5_coil_ind m5_ind )
   errind23bmt = geomXor( mt_coil_ind mt_ind )
   errorLayer( errind23bm3                     "GRIND23b: M3 over IND_FILT must match exactly M3_COIL!")
   errorLayer( errind23bm4                     "GRIND23b: M4 over IND_FILT must match exactly M4_COIL!")
   errorLayer( errind23bm5                     "GRIND23b: M5 over IND_FILT must match exactly M5_COIL!")
   errorLayer( errind23bmt                     "GRIND23b: MT over IND_FILT must match exactly MT_COIL!")

;TRANSMISSION LINE RULES
 ;Rule TL1
   am_tline   = geomAnd( am tline )
   ma_tline   = geomAnd( ma tline )
   ml_tline   = geomAnd( ml tline )
   e1_tline   = geomAnd( e1 tline_ma )
   errtl1b_am = geomSize( geomSize( am_tline -12.50 ) 12.50 )
   errtl1b_ma = geomSize( geomSize( ma_tline -12.50 ) 12.50 )
   errtl1b_ml = geomSize( geomSize( ml_tline -12.50 ) 12.50 )
   errorLayer( errtl1b_am                   "GRTL1b: (AM over TLINE) width (max) <= 25.00 um.")
   errorLayer( errtl1b_ma                   "GRTL1b: (MA over TLINE) width (max) <= 25.00 um.")
   errorLayer( errtl1b_ml                   "GRTL1b: (ML over TLINE) width (max) <= 25.00 um.")

 ;Rule TL2a
   drc( tline am    enc < 20.0               "GRTL2a: TLINE overlap past AM >= 20.00 um.")
   drc( tline ma    enc < 20.0               "GRTL2a: TLINE overlap past MA >= 20.00 um.")
   drc( tline ml    enc < 20.0               "GRTL2a: TLINE overlap past ML >= 20.00 um.")
   drc( am    tline enc <  1.0               "GRTL2b: AM overlap past TLINE >= 1.00 um")
   drc( ma    tline enc <  1.0               "GRTL2b: MA overlap past TLINE >= 1.00 um")
   drc( ml    tline enc <  1.0               "GRTL2b: ML overlap past TLINE >= 1.00 um")

 ;Rule TL3
   amtl_length      = geomGetLength( am_tline 3.98 < keep < 25.02 )
   matl_length      = geomGetLength( ma_tline 3.98 < keep < 25.02 )
   mltl_length      = geomGetLength( ml_tline 3.98 < keep < 25.02 )
   amtl_length_fail = geomGetAdjacentEdge( am_tline amtl_length )
   matl_length_fail = geomGetAdjacentEdge( ma_tline matl_length )
   mltl_length_fail = geomGetAdjacentEdge( ml_tline mltl_length )
   amtl_length_err  = geomEnclose( am_tline geomSize( geomGetLength( amtl_length_fail keep < 100.00 ) -0.02 ) )
   matl_length_err  = geomEnclose( ma_tline geomSize( geomGetLength( matl_length_fail keep < 100.00 ) -0.02 ) )
   mltl_length_err  = geomEnclose( ml_tline geomSize( geomGetLength( mltl_length_fail keep < 100.00 ) -0.02 ) )


   drc( am_tline area < 400.0                "GRTL3a: (AM over TLINE) area (min) >= 400.00 sq.um.")
   drc( ma_tline area < 400.0                "GRTL3a: (MA over TLINE) area (min) >= 400.00 sq.um.")
   drc( ml_tline area < 400.0                "GRTL3a: (ML over TLINE) area (min) >= 400.00 sq.um.")
   errorLayer( amtl_length_err              "GRTL3b: (AM over TLINE) length (min) >= 100.00 um.")
   errorLayer( matl_length_err              "GRTL3b: (MA over TLINE) length (min) >= 100.00 um.")
   errorLayer( mltl_length_err              "GRTL3b: (ML over TLINE) length (min) >= 100.00 um.")

 ;Rule TL4
   errtl4b_am = geomEnclose( am_tline geomAnd( geomSize( geomGetEdge( tline over am ) -750.0 ) am_tline ) keep > 1 )
   errtl4b_ma = geomEnclose( ma_tline geomAnd( geomSize( geomGetEdge( tline over ma ) -750.0 ) ma_tline ) keep > 1 )
   errtl4b_ml = geomEnclose( ml_tline geomAnd( geomSize( geomGetEdge( tline over ml ) -750.0 ) ml_tline ) keep > 1 )
   drc( am_tline area > 37500.0              "GRTL4a: (AM over TLINE) area (max) >= 37,500.00 sq.um.")
   drc( ma_tline area > 37500.0              "GRTL4a: (MA over TLINE) area (max) >= 37,500.00 sq.um.")
   drc( ml_tline area > 37500.0              "GRTL4a: (ML over TLINE) area (max) >= 37,500.00 sq.um.")
   errorLayer( errtl4b_am                   "GRTL4b: (AM over TLINE) length (max) >= 1500.00 um.")
   errorLayer( errtl4b_ma                   "GRTL4b: (MA over TLINE) length (max) >= 1500.00 um.")
   errorLayer( errtl4b_ml                   "GRTL4b: (ML over TLINE) length (max) >= 1500.00 um.")

 ;Rule TL5
  if( avSwitch("HIRESSUB") then
   errtl5hr_am = geomAnd( am_tline nohr )
   errtl5hr_ma = geomAnd( ma_tline nohr )
   errtl5hr_ml = geomAnd( ml_tline nohr )
   errtl5hr_e1 = geomAnd( e1_tline nohr )
   drc( nohr am_tline sep < 4.0 withSingularPoint  "GRTL5_HR: (AM over TLINE) must be within NOHR >= 4.00 um.")
   drc( nohr ma_tline sep < 4.0 withSingularPoint  "GRTL5_HR: (MA over TLINE) must be within NOHR >= 4.00 um.")
   drc( nohr ml_tline sep < 4.0 withSingularPoint  "GRTL5_HR: (ML over TLINE) must be within NOHR >= 4.00 um.")
   drc( nohr e1_tline sep < 4.0 withSingularPoint  "GRTL5_HR: (E1 over TLINE) must be within NOHR >= 4.00 um.")
   errorLayer( errtl5hr_am      "GRTL5_HR: (AM over TLINE) touching NOHR found!")
   errorLayer( errtl5hr_ml      "GRTL5_HR: (ML over TLINE) touching NOHR found!")
   errorLayer( errtl5hr_ma      "GRTL5_HR: (MA over TLINE) touching NOHR found!")
   errorLayer( errtl5hr_e1      "GRTL5_HR: (E1 over TLINE) touching NOHR found!")
  else
   errtl5_am = geomAndNot( am_tline bb )
   errtl5_ma = geomAndNot( ma_tline bb )
   errtl5_ml = geomAndNot( ml_tline bb )
   drc( bb am_tline enc < 4.0 withSingularPoint  "GRTL5: (AM over TLINE) must be within BB >= 4.00 um.")
   drc( bb ma_tline enc < 4.0 withSingularPoint  "GRTL5: (AM over TLINE) must be within BB >= 4.00 um.")
   drc( bb ml_tline enc < 4.0 withSingularPoint  "GRTL5: (AM over TLINE) must be within BB >= 4.00 um.")
   errorLayer( errtl5_am "GRTL5: (AM over TLINE) not within BB found!")
   errorLayer( errtl5_ma "GRTL5: (MA over TLINE) not within BB found!")
   errorLayer( errtl5_ml "GRTL5: (ML over TLINE) not within BB found!")
  )

 ;Rule TL6
   m1_tl6a = geomButtOrOver( m1 tline )
   m2_tl6a = geomButtOrOver( m2 tline )
   m3_tl6a = geomButtOrOver( m3 tline )
   m4_tl6a = geomButtOrOver( m4 tline )
   m5_tl6a = geomButtOrOver( m5 tline )
   mt_tl6a = geomButtOrOver( mt tline )
   ns_tl6a = geomButtOrOver( ns tline )
   nw_tl6a = geomButtOrOver( nw tline )
   pc_tl6a = geomButtOrOver( pc tline )
   rx_outca= geomAvoiding( rx ca_all )
   rx_tl6a = geomButtOrOver( rx_outca tline )
   errorLayer( m1_tl6a                      "GRTL6a: Invalid layer under TLINE found! (M1)")
   errorLayer( m2_tl6a                      "GRTL6a: Invalid layer under TLINE found! (M2)")
   errorLayer( m3_tl6a                      "GRTL6a: Invalid layer under TLINE found! (M3)")
   errorLayer( m4_tl6a                      "GRTL6a: Invalid layer under TLINE found! (M4)")
   errorLayer( m5_tl6a                      "GRTL6a: Invalid layer under TLINE found! (M5)")
   errorLayer( mt_tl6a                      "GRTL6a: Invalid layer under TLINE found! (MT)")
   errorLayer( ns_tl6a                      "GRTL6a: Invalid layer under TLINE found! (NS)")
   errorLayer( nw_tl6a                      "GRTL6a: Invalid layer under TLINE found! (NW)")
   errorLayer( pc_tl6a                      "GRTL6a: Invalid layer under TLINE found! (PC)")
   errorLayer( rx_tl6a                      "GRTL6a: Invalid layer under TLINE found! (RX)")
   drc( am_tline sep < 40.0                  "GRTL6b: (AM over TLINE) space >= 40.00 um.")
   drc( ma_tline sep < 40.0                  "GRTL6b: (MA over TLINE) space >= 40.00 um.")
   drc( ml_tline sep < 40.0                  "GRTL6b: (ML over TLINE) space >= 40.00 um.")

 ;Rule TL9
   errtl9_am = geomAnd( geomGetPolygon( am_tline ) LM0AM )
   errtl9_ma = geomAnd( geomGetPolygon( ma_tline ) LM0MA )
   errtl9_ml = geomAnd( geomGetPolygon( ml_tline ) LM0ML )
   errorLayer( errtl9_am                    "GRTL9: Non-rectangular (AM over TLINE) found!")
   errorLayer( errtl9_ma                    "GRTL9: Non-rectangular (MA over TLINE) found!")
   errorLayer( errtl9_ml                    "GRTL9: Non-rectangular (ML over TLINE) found!")

 ;Rule TL10
   err_tl10_am = geomButtOrOver( am_tline geomOr( lv dv tv))
   err_tl10_ma = geomButtOrOver( ma_tline geomOr( lv dv tv))
   err_tl10_ml = geomButtOrOver( ml_tline geomOr( lv dv tv))
   drc( am_tline geomOr( lv dv tv) sep < 4.0   "GRTL10: (AM over TLINE) to (LV,DV,TV) space >= 4.00 um.")
   drc( ma_tline geomOr( lv dv tv) sep < 4.0   "GRTL10: (MA over TLINE) to (LV,DV,TV) space >= 4.00 um.")
   drc( ml_tline geomOr( lv dv tv) sep < 4.0   "GRTL10: (ML over TLINE) to (LV,DV,TV) space >= 4.00 um.")
   errorLayer( err_tl10_am                  "GRTL10: (AM over TLINE) touching (LV,DV,TV) found!")
   errorLayer( err_tl10_ma                  "GRTL10: (MA over TLINE) touching (LV,DV,TV) found!")
   errorLayer( err_tl10_ml                  "GRTL10: (ML over TLINE) touching (LV,DV,TV) found!")

 ;Rule TL11
   ;err_tl11_am = geomAnd( geomOverlap( am_tline geomSize( geomButtOrOver( chipedge mz ) 0.01 ) ) LM0MZ )
   ;err_tl11_ma = geomAnd( geomOverlap( ma_tline geomSize( geomButtOrOver( chipedge mz ) 0.01 ) ) LM0MZ )
   ;err_tl11_ml = geomAnd( geomOverlap( ml_tline geomSize( geomButtOrOver( chipedge mz ) 0.01 ) ) LM0MZ )
   ;errorLayer( err_tl11_am                  "GRTL11: (AM over TLINE) touching (CHIPEDGE touching MZ) found!")
   ;errorLayer( err_tl11_ma                  "GRTL11: (MA over TLINE) touching (CHIPEDGE touching MZ) found!")
   ;errorLayer( err_tl11_ml                  "GRTL11: (ML over TLINE) touching (CHIPEDGE touching MZ) found!")


;PCING RULES
 ;Rule 780
   pcing_wide = geomSize( geomSize( pcing -0.08 ) 0.08 )
   drc( pcing width < 0.16                "GR780: PCING width == 0.160 um.(error < )")
   errorLayer( pcing_wide                 "GR780: PCING width == 0.160 um.(error > )")

 ;Rule 781b
   errorLayer( geomAvoiding( ipci pcing ) "GR781b: Cells named with 'IPCI' other than those containing PCING found!")

 ;Rule 782
   drc( pcing bondpad  0 < sep < 0.42     "GR782: PCING to BONDPAD space >= 0.420 um.")
   drc( pcing ind_filt      0 < sep < 0.42     "GR782: PCING to IND_FILT space >= 0.420 um.")
   drc( pcing       0 < sep < 0.42        "GR782: PCING to PCING space >= 0.420 um.")
   drc( pcing pc    0 < sep < 0.42        "GR782: PCING to PC    space >= 0.420 um.")
   drc( pcing rx    0 < sep < 0.42        "GR782: PCING to RX    space >= 0.420 um.")
   drc( pcing ca    0 < sep < 0.42        "GR782: PCING to CA    space >= 0.420 um.")
   drc( pcing cabar 0 < sep < 0.42        "GR782: PCING to CABAR space >= 0.420 um.")

   gr782othrlevs = geomOr( pc rx ca_all  bondpad ind_filt )
   err782        = geomButtOrOver( pcing gr782othrlevs )
   errorLayer( err782                     "GR782: PCING touching (PC, RX, BONDPAD, IND_FILT or CA/CABAR) shapes found")

 ;Rule 783
   drc( pcing 0.14 < width < 0.18  length < 2.00
                                          "GR783: PCING arm length (from corner to end) >= 2.000 um.")
 ;Rule 784
   chipMpwCrk  = geomOr( chipedge mpw_edge crackstop )
   pcing_empty = geomOutside( chipMpwCrk pcing )
   chip6mmx    = geomButtOrOver( chipMpwCrk geomGrow( chipMpwCrk -3000 0 ) )
   chip6mmy    = geomButtOrOver( chipMpwCrk geomGrow( chipMpwCrk 0 -3000 ) )
   chip6mm     = geomOr( chip6mmx chip6mmy )
   err784_zero = geomButtOrOver( chip6mm pcing_empty )
   err784_lt40 = geomButtOrOver( chip6mm pcing keep < 40 )
   errorLayer( err784_zero                "GR784: Union(CHIPEDGE,MPW_EDGE,CRACKSTOP) not enclosing any PCI shapes found!")
   errorLayer( err784_lt40                "GR784: Union(CHIPEDGE,MPW_EDGE,CRACKSTOP) enclosing < 40 PCI shapes found!")


;DS_MATCH Design Rules
 ;Rule DM001
   drc( ds_match sepNotch < 0.10  withSingularPoint   "GRDM001: DS_MATCH minspace >= 0.100um.")

 ;Rule DM002
   foreach( level '( bb bfmoat ind_filt bondpad pcexclud rxexclud logobnd )
      errdm002 = geomOverlap( ds_match geomSize( eval(level) 0.01 ))
      sprintf( errMsg                           "GRDM002: %s touching CHIPEDGE found!" upperCase(level) )
      errorLayer( errdm002 errMsg )
   );End foreach

 ;Rule DM002bR
  if( avSwitch( "CHECK_RECOMMENDED") then
    foreach( level '(m1exclud m2exclud m3exclud m4exclud m5exclud mtexclud maexclud mlexclud mzexclud e1exclud )
       let(( errMsgdm002br errdm002br )
          errdm002br = strcat("errdm002br_" level )
          errdm002br = geomOverlap( eval(level) geomSize( chipedge 0.01 ))
          sprintf( errMsgdm002br   "GRDM002bR: %s touching CHIPEDE found!!" upperCase(level) )
          errorLayer( errdm002br errMsgdm002br )
       );End let
    );End foreach
  );End Recommended

 ;Rule DM003
   drc( ds_match  area > 400000.0                "GRDM003: DS_MATCH area (max per shape) <= 400,000.0 sq.um.")

 ;Rule DMPN001
   errorLayer( geomStraddle( ds_match logobnd )  "GRDMPN001: DS_MATCH straddling LOGOBND found!!.")

;E-FUSE (PC) LAYOUT RULES
 ;Rule EF01
   erref01 = geomSize( geomSize( pcfuse -0.09 ) 0.09 )
   drc( pcfuse width < 0.18                  "GREF01: PCFUSE width == 0.18 um.(error <)")
   errorLayer( erref01                      "GREF01: PCFUSE width == 0.18 um.(error >)")

 ;Rule EF02
   drc( pcfuse width < 0.36 length < 1.20    "GREF02: PCFUSE length == 1.20 um.(error <)")
   drc( pcfuse width < 0.36 length > 1.20    "GREF02: PCFUSE length == 1.20 um.(error >)")

 ;Rule EF03
   pc_fuse      = geomButtOrOver( pc pcfuse )
   pcf_polygon  = geomGetPolygon( pcfuse )
   pc_f_polygon = geomGetPolygon( pc_fuse )
   pcf_45       = geomGetAngledEdge( pcfuse 0 < keep < 90 fig )
   pc_f_45      = geomGetAngledEdge( pc_fuse 0 < keep < 90 fig )
   errorLayer( pcf_polygon                  "GREF03: Non-rectangular PCFUSE found!")
   errorLayer( pcf_45                       "GREF03: 45 degree PCFUSE found")
   errorLayer( pc_f_polygon                 "GREF03a: Non-rectangular (PC touching PCFUSE) found!")
   errorLayer( pc_f_45                      "GREF03a: 45 degree (PC touching PCFUSE) found")

 ;Rule EF04
   drc( pcfuse sep < 2.50                    "GREF04: PCFUSE space >= 2.50 um.")

 ;Rule EF05
   erref05_bb  = geomAnd( pcfuse bb )
   erref05_bfm = geomAnd( pcfuse bfmoat )
   erref05_ca  = geomAnd( pcfuse ca )
   erref05_dg  = geomAnd( pcfuse dg )
   erref05_k1  = geomAnd( pcfuse k1 )
   erref05_m1  = geomAnd( pcfuse m1 )
   erref05_m2  = geomAnd( pcfuse m2 )
   erref05_mt  = geomAnd( geomAnd( pcfuse mt ) LM1 )
   erref05_ns  = geomAnd( pcfuse ns )
   erref05_nw  = geomAnd( pcfuse nw )
   erref05_op  = geomAnd( pcfuse op )
   erref05_pc  = geomAnd( pcfuse pc )
   erref05_pi  = geomAnd( pcfuse pi )
   erref05_qt  = geomAnd( pcfuse qt )
   erref05_rp  = geomAnd( pcfuse rp )
   erref05_rr  = geomAnd( pcfuse rr )
   erref05_rx  = geomAnd( pcfuse rx )
   erref05_vncapm1  = geomAnd( pcfuse vncapm1 )
   erref05_vncapm2  = geomAnd( pcfuse vncapm2 )
   erref05_vncapm3  = geomAnd( pcfuse vncapm3 )
   erref05_vncapm4  = geomAnd( pcfuse vncapm4 )
   erref05_vncapm5  = geomAnd( pcfuse vncapm5 )
   erref05_vncapmt  = geomAnd( pcfuse vncapmt )
   erref05_jd  = geomAnd( pcfuse jd )

   errorLayer( erref05_jd                   "GREF05: PCFUSE over JD found!")
   errorLayer( erref05_bb                   "GREF05: PCFUSE over BB found!")
   errorLayer( erref05_bfm                  "GREF05: PCFUSE over BFMOAT found!")
   errorLayer( erref05_ca                   "GREF05: PCFUSE over CA found!")
   errorLayer( erref05_dg                   "GREF05: PCFUSE over DG found!")
   errorLayer( erref05_k1                   "GREF05: PCFUSE over K1 found!")
   errorLayer( erref05_m1                   "GREF05: PCFUSE over M1 found!")
   errorLayer( erref05_m2                   "GREF05: PCFUSE over M2 found!")
   errorLayer( erref05_mt                   "GREF05: PCFUSE over MT found!")
   errorLayer( erref05_ns                   "GREF05: PCFUSE over NS found!")
   errorLayer( erref05_nw                   "GREF05: PCFUSE over NW found!")
   errorLayer( erref05_op                   "GREF05: PCFUSE over OP found!")
   errorLayer( erref05_pc                   "GREF05: PCFUSE over PC found!")
   errorLayer( erref05_pi                   "GREF05: PCFUSE over PI found!")
   errorLayer( erref05_qt                   "GREF05: PCFUSE over QT found!")
   errorLayer( erref05_rp                   "GREF05: PCFUSE over RP found!")
   errorLayer( erref05_rr                   "GREF05: PCFUSE over RR found!")
   errorLayer( erref05_rx                   "GREF05: PCFUSE over RX found!")
   errorLayer( erref05_vncapm1             "GREF05: PCFUSE over VNCAP_M1 found!")
   errorLayer( erref05_vncapm2             "GREF05: PCFUSE over VNCAP_M2 found!")
   errorLayer( erref05_vncapm3             "GREF05: PCFUSE over VNCAP_M3 found!")
   errorLayer( erref05_vncapm4             "GREF05: PCFUSE over VNCAP_M4 found!")
   errorLayer( erref05_vncapm5             "GREF05: PCFUSE over VNCAP_M5 found!")
   errorLayer( erref05_vncapmt             "GREF05: PCFUSE over VNCAP_MT found!")

 ;Rule EF06
   mt_4lm = geomAnd( mt_not_ring LM1 )
   drc( pcfuse bb     sep < 2.50 withSingularPoint "GREF06: PCFUSE to BB space >= 2.50 um.")
   drc( pcfuse bfmoat sep < 2.50 withSingularPoint "GREF06: PCFUSE to BFMOAT space >= 2.50 um.")
   drc( pcfuse dg     sep < 2.50 withSingularPoint "GREF06: PCFUSE to DG space >= 2.50 um.")
   drc( pcfuse k1     sep < 2.50 withSingularPoint "GREF06: PCFUSE to K1 space >= 2.50 um.")
   drc( pcfuse m2     sep < 2.50 withSingularPoint "GREF06: PCFUSE to M2 space >= 2.50 um.")
   drc( pcfuse mt_4lm sep < 2.50 withSingularPoint "GREF06: PCFUSE to MT space >= 2.50 um.")
   drc( pcfuse ns     sep < 2.50 withSingularPoint "GREF06: PCFUSE to NS space >= 2.50 um.")
   drc( pcfuse nw     sep < 2.50 withSingularPoint "GREF06: PCFUSE to NW space >= 2.50 um.")
   drc( pcfuse op     sep < 2.50 withSingularPoint "GREF06: PCFUSE to OP space >= 2.50 um.")
   drc( pcfuse pi     sep < 2.50 withSingularPoint "GREF06: PCFUSE to PI space >= 2.50 um.")
   drc( pcfuse qt     sep < 2.50 withSingularPoint "GREF06: PCFUSE to QT space >= 2.50 um.")
   drc( pcfuse rp     sep < 2.50 withSingularPoint "GREF06: PCFUSE to RP space >= 2.50 um.")
   drc( pcfuse rr     sep < 2.50 withSingularPoint "GREF06: PCFUSE to RR space >= 2.50 um.")
   drc( pcfuse rx     sep < 2.50 withSingularPoint "GREF06: PCFUSE to RX space >= 2.50 um.")
   drc( pcfuse v1     sep < 2.50 withSingularPoint "GREF06: PCFUSE to V1 space >= 2.50 um.")
   drc( pcfuse vncapm1  sep < 2.50 withSingularPoint "GREF06: PCFUSE to VNCAP_M1 space >= 2.50 um.")
   drc( pcfuse vncapm2  sep < 2.50 withSingularPoint "GREF06: PCFUSE to VNCAP_M2 space >= 2.50 um.")
   drc( pcfuse vncapm3  sep < 2.50 withSingularPoint "GREF06: PCFUSE to VNCAP_M3 space >= 2.50 um.")
   drc( pcfuse vncapm4  sep < 2.50 withSingularPoint "GREF06: PCFUSE to VNCAP_M4 space >= 2.50 um.")
   drc( pcfuse vncapm5  sep < 2.50 withSingularPoint "GREF06: PCFUSE to VNCAP_M5 space >= 2.50 um.")
   drc( pcfuse vncapmt  sep < 2.50 withSingularPoint "GREF06: PCFUSE to VNCAP_MT space >= 2.50 um.")
   drc( pcfuse jd       sep < 2.50 withSingularPoint "GREF06: PCFUSE to JD space >= 2.50 um.")

 ;Rule EF07
   erref07_pcf = geomAndNot( pcfuse bp )
   erref07_pc  = geomAndNot( pc_fuse bp )
   drc( bp pcfuse  enc < 0.30                "GREF07a: PCFUSE must be within BP >= 0.30 um.")
   errorLayer( erref07_pcf                  "GREF07a: PCFUSE not within BP found!")
   drc( bp pc_fuse enc < 0.30                "GREF07b: (PC touching PCFUSE) must be within BP >= 0.30 um.")
   errorLayer( erref07_pc                   "GREF07b: (PC touching PCFUSE) not within BP found!")

 ;Rule EF08
   pcf_anode     = drc( pc_fuse area < 3.00 )
   pcf_cathode   = geomAndNot( pc_fuse pcf_anode )
   pcfuse_edge   = geomSize( geomGetEdge( pcfuse over bkgnd ) 0.02 )
   pcfuse_sm_end = drc( pcfuse_edge area < 0.01 )
   erref08_2a    = geomButting( pcfuse pcf_anode keep > 1 )
   erref08_2c    = geomButting( pcfuse pcf_cathode keep > 1 )
  ;erref08_2pc   = geomAndNot( pcfuse geomButting( pcfuse pc keep == 2 ) )
   erref08_end   = geomAndNot( pcfuse_sm_end geomOverlap( pcfuse_sm_end pc ) )
   pc_not_fuse   = geomAndNot( pc pc_fuse )
  ;errorLayer( erref08_2pc                  "GREF08: PCFUSE not abutting 2 PC shapes found!")
   errorLayer( erref08_end                  "GREF08: PCFUSE (small end) not abutting a PC shape found!")
   errorLayer( erref08_2a                   "GREF08a: PCFUSE abutting more than 1 anode found!")
   errorLayer( erref08_2c                   "GREF08a: PCFUSE abutting more than 1 cathode found!")
   drc( pcfuse pc_not_fuse  sep < 2.50       "GREF08b: PCFUSE to (PC not touching PCFUSE) space >= 2.50 um.")

 ;Rule EF09
   m1_out_fuse = geomOutside( m1 pc_fuse )
   drc( pcfuse m1_out_fuse  sep < 2.50       "GREF09: PCFUSE to (M1 not touching (PC touch PCFUSE)) space >= 2.50 um.")

 ;Rule EF10
   pc_fuse_no_ca   = geomOutside( pc_fuse ca )
   pc_fuse_less_ca = geomButtOrOver( pc_fuse ca keep < 4 )
   pc_fuse_more_ca = geomButtOrOver( pc_fuse ca keep > 4 )
   errorLayer( pc_fuse_no_ca                "GREF10: (PC touching PCFUSE) not touching any CA's found!")
   errorLayer( pc_fuse_less_ca              "GREF10: (PC touching PCFUSE) touching less than 4 CA's found!")
   errorLayer( pc_fuse_more_ca              "GREF10: (PC touching PCFUSE) touching more than 4 CA's found!")

 ;Rule EF11
   erref11a    = geomSize( geomSize( pcf_anode -0.59 ) 0.59 )
   drc( pcf_anode width < 1.18               "GREF11a: (PC touching PCFUSE) (anode) width == 1.18 um.(error <)")
   errorLayer(  erref11a                    "GREF11a: (PC touching PCFUSE) (anode) width == 1.18 um.(error >)")
   drc( pcf_anode 1.16 < width < 1.20  length < 1.74
                                             "GREF11b: (PC touching PCFUSE) (anode) length == 1.74 um.(error <)")
   drc( pcf_anode 1.16 < width < 1.20  length > 1.74
                                             "GREF11b: (PC touching PCFUSE) (anode) length == 1.74 um.(error >)")

 ;Rule EF12
   erref12b    = geomSize( geomSize( pcf_cathode -0.69 ) 0.69 )
   drc( pcf_cathode 1.36 < width < 1.40  length < 2.46
                                             "GREF12a: (PC touching PCFUSE) (cathode) width == 2.46 um.(error <)")
   drc( pcf_cathode 1.36 < width < 1.40  length > 2.46
                                             "GREF12a: (PC touching PCFUSE) (cathode) width == 2.46 um.(error >)")
   drc( pcf_cathode width < 1.38             "GREF12b: (PC touching PCFUSE) (cathode) length == 1.38 um.(error <)")
   errorLayer(  erref12b                    "GREF12b: (PC touching PCFUSE) (cathode) length == 1.38 um.(error >)")

 ;Rule EF13
   m1_fuse       = geomButtOrOver( m1 pc_fuse )
   m1f_edge      = geomSize( geomGetEdge( m1_fuse over bkgnd ) 0.02 )
   m1f_fuse_side = geomOverlap( m1f_edge drc( pcfuse m1_fuse sep < 1.26 opposite ) )
   m1f_fs_anode  = geomButtOrOver( m1f_fuse_side pcf_anode )
   drc( m1f_fs_anode 0.01 < width < 0.03  length > 1.20
                                             "GREF13: (M1 touching (PC touching PCFUSE)) (anode) width <= 1.20 um.")

 ;Rule EF14
   m1f_fs_cathode = geomButtOrOver( m1f_fuse_side pcf_cathode )
   drc( m1f_fs_cathode 0.01 < width < 0.03  length > 2.50
                                             "GREF14: (M1 touching (PC touching PCFUSE)) (cathode) width <= 2.50 um.")

 ;Rule EF15
   drc( pcfuse m1_fuse  sep < 1.00           "GREF15: PCFUSE to (M1 touching (PC touching PCFUSE)) space >= 1.00 um.")

 ;Rule EF16
   pcf_edge     = geomSize( geomGetEdge( pc_fuse over bkgnd ) 0.02 )
   pcf_halo     = geomAndNot( geomSize( pc_fuse 0.02 ) pc_fuse )
   pcf_corner   = geomAndNot( pcf_halo pcf_edge )
   fuse_edge    = geomOverlap( pcf_edge pcfuse )
   fuse_edge_a  = geomButting( fuse_edge pcf_anode )
   fuse_edge_c  = geomButting( fuse_edge pcf_cathode )
   fe_corner_a  = geomButting( pcf_corner fuse_edge_a )
   fe_corner_c  = geomButting( pcf_corner fuse_edge_c )
   pcfuse_end_a = geomAnd( pcfuse fuse_edge_a )
   pcfuse_end_c = geomAnd( pcfuse fuse_edge_c )
   erref16_a    = geomEnclose( pcfuse drc( pcfuse_end_a fe_corner_a sep < 0.50 opposite figa ) )
   erref16_c    = geomEnclose( pcfuse drc( pcfuse_end_c fe_corner_c sep < 1.14 opposite figa ) )
   errorLayer( erref16_a                    "GREF16: PCFUSE not centered on PC anode found!")
   errorLayer( erref16_c                    "GREF16: PCFUSE not centered on PC cathode found!")

 ;Rule EF18
   drc( bp_pcf width < 0.72                  "GREF18: (BP touching PCFUSE) width >= 0.720 um.")

 ;Rule EF19
   pcr_bhgen   = geomOr( phhole1 pcr_ext )
   erref19_bb  = geomButtOrOver( bp_pcf bb )
   erref19_dg  = geomButtOrOver( bp_pcf dg )
   erref19_msr = geomButtOrOver( bp_pcf mosvar )
   erref19_nw  = geomButtOrOver( bp_pcf nw )
   erref19_pcr = geomButtOrOver( bp_pcf pcr_bhgen )
   erref19_zvt = geomButtOrOver( bp_pcf zvt_x072 )
   drc( bp_pcf bb        0 < sep < 0.44      "GREF19: (BP touching PCFUSE) to BB space >= 0.44 um.")
   drc( bp_pcf dg        0 < sep < 0.44      "GREF19: (BP touching PCFUSE) to DG space >= 0.44 um.")
   drc( bp_pcf mosvar    0 < sep < 0.44      "GREF19: (BP touching PCFUSE) to MOSVAR space >= 0.44 um.")
   drc( bp_pcf nw        0 < sep < 0.44      "GREF19: (BP touching PCFUSE) to NW space >= 0.44 um.")
   drc( bp_pcf pcr_bhgen 0 < sep < 0.44      "GREF19: (BP touching PCFUSE) to (PC over OP)... space >= 0.44 um.")
   drc( bp_pcf zvt_x072  0 < sep < 0.44      "GREF19: (BP touching PCFUSE) to (ZEROVT + 0.72) space >= 0.44 um.")
   errorLayer( erref19_bb                   "GREF19: (BP touching PCFUSE) touching BB found!")
   errorLayer( erref19_dg                   "GREF19: (BP touching PCFUSE) touching DG found!")
   errorLayer( erref19_msr                  "GREF19: (BP touching PCFUSE) touching MOSVAR found!")
   errorLayer( erref19_nw                   "GREF19: (BP touching PCFUSE) touching NW found!")
   errorLayer( erref19_pcr                  "GREF19: (BP touching PCFUSE) touching (PC over OP)... found!")
   errorLayer( erref19_zvt                  "GREF19: (BP touching PCFUSE) touching (ZEROVT + 0.72) found!")

   ;Rule EF19a
   lay_ef19a = geomButtOrOver( bp geomSize( pcfuse 0.001 ) )
   drc( lay_ef19a tg sep < 0.30 "GREF19a: (BP touching PCFUSE) to TG, for minimum BH space >= 0.30 um." )

 ;Rule EF20
   erref20_op = geomButtOrOver( bp_pcf geomButtOrOver( bp op ) )
   erref20_pc = geomButtOrOver( bp_pcf geomButtOrOver( bp geomAvoiding( pc pcfuse ) ) )
   erref20_rx = geomButtOrOver( bp_pcf geomButtOrOver( bp rx ) )
   errorLayer( erref20_op                   "GREF20: (BP touching PCFUSE) touching (BP touching OP) found!")
   errorLayer( erref20_pc                   "GREF20: (BP touch PCFUSE) touch (BP touch (PC no touch PCFUSE)) found!")
   errorLayer( erref20_rx                   "GREF20: (BP touching PCFUSE) touching (BP touching RX) found!")

;VNCAP RULES

 ;RULES VNCAP1
   drc( vppcapm1 width < 1.00      "GRVNCAP1: VNCAPM1 minimum width >= 1.00 um !")
   drc( vppcapm2 width < 1.00      "GRVNCAP1: VNCAPM2 minimum width >= 1.00 um !")
   drc( vppcapm3 width < 1.00      "GRVNCAP1: VNCAPM3 minimum width >= 1.00 um !")
   drc( vppcapm4 width < 1.00      "GRVNCAP1: VNCAPM4 minimum width >= 1.00 um !")
   drc( vppcapm5 width < 1.00      "GRVNCAP1: VNCAPM5 minimum width >= 1.00 um !")
   drc( vppcapmt width < 1.00      "GRVNCAP1: VNCAPMT minimum width >= 1.00 um !")

 ;RULE VNCAP2
   vncap2_m1 = geomOr( vppcapm1 )
   vncap2_m2 = geomOr( vppcapm2 )
   vncap2_m3 = geomOr( vppcapm3 )
   vncap2_m4 = geomOr( vppcapm4 )
   vncap2_m5 = geomOr( vppcapm5 )
   vncap2_mt = geomOr( vppcapmt )
   drc( vncap2_m1 area > 100000      "GRVNCAP2: VNCAP_M1 area must be < 100,000 um2 (whole chip)")
   drc( vncap2_m2 area > 100000      "GRVNCAP2: VNCAP_M2 area must be < 100,000 um2 (whole chip)")
   drc( vncap2_m3 area > 100000      "GRVNCAP2: VNCAP_M3 area must be < 100,000 um2 (whole chip)")
   drc( vncap2_m4 area > 100000      "GRVNCAP2: VNCAP_M4 area must be < 100,000 um2 (whole chip)")
   drc( vncap2_m5 area > 100000      "GRVNCAP2: VNCAP_M5 area must be < 100,000 um2 (whole chip)")
   drc( vncap2_mt area > 100000      "GRVNCAP2: VNCAP_MT area must be < 100,000 um2 (whole chip)")

 ;RULE VNCAP3
   vppm1_thin = geomAndNot( m1_over_vppcapm1 geomSize( geomSize( m1_over_vppcapm1 -0.49 ) 0.49 ) )
   vppm2_thin = geomAndNot( m2_over_vppcapm2 geomSize( geomSize( m2_over_vppcapm2 -0.49 ) 0.49 ) )
   vppm3_thin = geomAndNot( m3_over_vppcapm3 geomSize( geomSize( m3_over_vppcapm3 -0.49 ) 0.49 ) )
   vppm4_thin = geomAndNot( m4_over_vppcapm4 geomSize( geomSize( m4_over_vppcapm4 -0.49 ) 0.49 ) )
   vppm5_thin = geomAndNot( m5_over_vppcapm5 geomSize( geomSize( m5_over_vppcapm5 -0.49 ) 0.49 ) )
   vppmt_thin = geomAndNot( mt_over_vppcapmt geomSize( geomSize( mt_over_vppcapmt -0.49 ) 0.49 ) )
   drc( m1_over_vppcapm1 width < 0.36       "GRVNCAP3: (M1 over VNCAP_M1) width == 0.36 um.(error <)")
   drc( m2_over_vppcapm2 width < 0.36       "GRVNCAP3: (M2 over VNCAP_M2) width == 0.36 um.(error <)")
   drc( m3_over_vppcapm3 width < 0.36       "GRVNCAP3: (M3 over VNCAP_M3) width == 0.36 um.(error <)")
   drc( m4_over_vppcapm4 width < 0.36       "GRVNCAP3: (M4 over VNCAP_M4) width == 0.36 um.(error <)")
   drc( m5_over_vppcapm5 width < 0.36       "GRVNCAP3: (M5 over VNCAP_M5) width == 0.36 um.(error <)")
   drc( mt_over_vppcapmt width < 0.36       "GRVNCAP3: (MT over VNCAP_MT) width == 0.36 um.(error <)")
   drc( vppm1_thin 0.36 < width < 1         "GRVNCAP3: (M1 over VNCAP_M1) width == 0.36 um.(error >)")
   drc( vppm2_thin 0.36 < width < 1         "GRVNCAP3: (M2 over VNCAP_M2) width == 0.36 um.(error >)")
   drc( vppm3_thin 0.36 < width < 1         "GRVNCAP3: (M3 over VNCAP_M3) width == 0.36 um.(error >)")
   drc( vppm4_thin 0.36 < width < 1         "GRVNCAP3: (M4 over VNCAP_M4) width == 0.36 um.(error >)")
   drc( vppm5_thin 0.36 < width < 1         "GRVNCAP3: (M5 over VNCAP_M5) width == 0.36 um.(error >)")
   drc( vppmt_thin 0.36 < width < 1         "GRVNCAP3: (MT over VNCAP_MT) width == 0.36 um.(error >)")

 ;RULE VNCAP3a
   errvpp3m1 = geomSize( geomSize( m1_over_vppcapm1 -0.5 ) 0.5 )
   errvpp3m2 = geomSize( geomSize( m2_over_vppcapm2 -0.5 ) 0.5 )
   errvpp3m3 = geomSize( geomSize( m3_over_vppcapm3 -0.5 ) 0.5 )
   errvpp3m4 = geomSize( geomSize( m4_over_vppcapm4 -0.5 ) 0.5 )
   errvpp3m5 = geomSize( geomSize( m5_over_vppcapm5 -0.5 ) 0.5 )
   errvpp3mt = geomSize( geomSize( mt_over_vppcapmt -0.5 ) 0.5 )
   vppm1_fat = geomAndNot( m1_over_vppcapm1 vppm1_thin )
   vppm2_fat = geomAndNot( m2_over_vppcapm2 vppm2_thin )
   vppm3_fat = geomAndNot( m3_over_vppcapm3 vppm3_thin )
   vppm4_fat = geomAndNot( m4_over_vppcapm4 vppm4_thin )
   vppm5_fat = geomAndNot( m5_over_vppcapm5 vppm5_thin )
   vppmt_fat = geomAndNot( mt_over_vppcapmt vppmt_thin )
   drc( vppm1_fat 0.36 < width < 1.0         "GRVNCAP3a: (M1 over VNCAP_M1) width == 1.0 um.(error <)")
   drc( vppm2_fat 0.36 < width < 1.0         "GRVNCAP3a: (M2 over VNCAP_M2) width == 1.0 um.(error <)")
   drc( vppm3_fat 0.36 < width < 1.0         "GRVNCAP3a: (M3 over VNCAP_M3) width == 1.0 um.(error <)")
   drc( vppm4_fat 0.36 < width < 1.0         "GRVNCAP3a: (M4 over VNCAP_M4) width == 1.0 um.(error <)")
   drc( vppm5_fat 0.36 < width < 1.0         "GRVNCAP3a: (M5 over VNCAP_M5) width == 1.0 um.(error <)")
   drc( vppmt_fat 0.36 < width < 1.0         "GRVNCAP3a: (MT over VNCAP_MT) width == 1.0 um.(error <)")
   errorLayer( errvpp3m1                   "GRVNCAP3a: (M1 over VNCAPM1) width == 1.0 um.(error >)")
   errorLayer( errvpp3m2                   "GRVNCAP3a: (M2 over VNCAPM2) width == 1.0 um.(error >)")
   errorLayer( errvpp3m3                   "GRVNCAP3a: (M3 over VNCAPM3) width == 1.0 um.(error >)")
   errorLayer( errvpp3m4                   "GRVNCAP3a: (M4 over VNCAPM4) width == 1.0 um.(error >)")
   errorLayer( errvpp3m5                   "GRVNCAP3a: (M5 over VNCAPM5) width == 1.0 um.(error >)")
   errorLayer( errvpp3mt                   "GRVNCAP3a: (MT over VNCAPMT) width == 1.0 um.(error >)")

 ;RULE VNCAP4
   errvpp4am1  = drc( vppm1_thin vppm1_fat 0 < sep < 0.40 app <= 0.36 )
   errvpp4am2  = drc( vppm2_thin vppm2_fat 0 < sep < 0.40 app <= 0.36 )
   errvpp4am3  = drc( vppm3_thin vppm3_fat 0 < sep < 0.40 app <= 0.36 )
   errvpp4am4  = drc( vppm4_thin vppm4_fat 0 < sep < 0.40 app <= 0.36 )
   errvpp4am5  = drc( vppm5_thin vppm5_fat 0 < sep < 0.40 app <= 0.36 )
   errvpp4amt  = drc( vppmt_thin vppmt_fat 0 < sep < 0.40 app <= 0.36 )

   errvpp4bm1  = drc( vppm1_thin  sep < 0.32 app > 0.36 )
   errvpp4bm2  = drc( vppm2_thin  sep < 0.32 app > 0.36 )
   errvpp4bm3  = drc( vppm3_thin  sep < 0.32 app > 0.36 )
   errvpp4bm4  = drc( vppm4_thin  sep < 0.32 app > 0.36 )
   errvpp4bm5  = drc( vppm4_thin  sep < 0.32 app > 0.36 )
   errvpp4bmt  = drc( vppmt_thin  sep < 0.32 app > 0.36 )

   all_err4am1 = geomSize( geomGetLength( vppm1_thin keep == 0.36 ) 0.405 )
   errvpp4am1a = geomAndNot( all_err4am1 geomStraddle( all_err4am1 vppcapm1 ) )
   errvpp4am1b = geomAndNot( errvpp4am1a geomOverlap( all_err4am1 vppm1_fat ) )
   errvpp4am1c = geomAndNot( errvpp4am1b geomOutside( all_err4am1 vppcapm1 ) )

   all_err4am2 = geomSize( geomGetLength( vppm2_thin keep == 0.36 ) 0.405 )
   errvpp4am2a = geomAndNot( all_err4am2 geomStraddle( all_err4am2 vppcapm2 ) )
   errvpp4am2b = geomAndNot( errvpp4am2a geomOverlap( all_err4am2 vppm2_fat ) )
   errvpp4am2c = geomAndNot( errvpp4am2b geomOutside( all_err4am2 vppcapm2 ) )

   all_err4am3 = geomSize( geomGetLength( vppm3_thin keep == 0.36 ) 0.405 )
   errvpp4am3a = geomAndNot( all_err4am3 geomStraddle( all_err4am3 vppcapm3 ) )
   errvpp4am3b = geomAndNot( errvpp4am3a geomOverlap( all_err4am3 vppm3_fat ) )
   errvpp4am3c = geomAndNot( errvpp4am3b geomOutside( all_err4am3 vppcapm3 ) )

   all_err4am4 = geomSize( geomGetLength( vppm4_thin keep == 0.36 ) 0.405 )
   errvpp4am4a = geomAndNot( all_err4am4 geomStraddle( all_err4am4 vppcapm4 ) )
   errvpp4am4b = geomAndNot( errvpp4am4a geomOverlap( all_err4am4 vppm4_fat ) )
   errvpp4am4c = geomAndNot( errvpp4am4b geomOutside( all_err4am4 vppcapm4 ) )

   all_err4am5 = geomSize( geomGetLength( vppm5_thin keep == 0.36 ) 0.405 )
   errvpp4am5a = geomAndNot( all_err4am5 geomStraddle( all_err4am5 vppcapm5 ) )
   errvpp4am5b = geomAndNot( errvpp4am5a geomOverlap( all_err4am5 vppm5_fat ) )
   errvpp4am5c = geomAndNot( errvpp4am5b geomOutside( all_err4am5 vppcapm5 ) )

   all_err4amt = geomSize( geomGetLength( vppmt_thin keep == 0.36 ) 0.405 )
   errvpp4amta = geomAndNot( all_err4amt geomStraddle( all_err4amt vppcapmt ) )
   errvpp4amtb = geomAndNot( errvpp4amta geomOverlap( all_err4amt vppmt_fat ) )
   errvpp4amtc = geomAndNot( errvpp4amtb geomOutside( all_err4amt vppcapmt ) )

   errvpp4bm1b = geomAnd( geomOutside( geomSize( geomGetLength( vppm1_thin keep > 0.36 ) 0.325 ) vppm1_thin ) vppcapm1 )
   errvpp4bm2b = geomAnd( geomOutside( geomSize( geomGetLength( vppm2_thin keep > 0.36 ) 0.325 ) vppm2_thin ) vppcapm2 )
   errvpp4bm3b = geomAnd( geomOutside( geomSize( geomGetLength( vppm3_thin keep > 0.36 ) 0.325 ) vppm3_thin ) vppcapm3 )
   errvpp4bm4b = geomAnd( geomOutside( geomSize( geomGetLength( vppm4_thin keep > 0.36 ) 0.325 ) vppm4_thin ) vppcapm4 )
   errvpp4bm5b = geomAnd( geomOutside( geomSize( geomGetLength( vppm5_thin keep > 0.36 ) 0.325 ) vppm5_thin ) vppcapm5 )
   errvpp4bmtb = geomAnd( geomOutside( geomSize( geomGetLength( vppmt_thin keep > 0.36 ) 0.325 ) vppmt_thin ) vppcapmt )

   errorLayer( errvpp4am1                  "GRVNCAP4a: M1 over VNCAPM1 space (for common run length <= 0.36) == 0.40um (error <)")
   errorLayer( errvpp4am2                  "GRVNCAP4a: M2 over VNCAPM2 space (for common run length <= 0.36) == 0.40um (error <)")
   errorLayer( errvpp4am3                  "GRVNCAP4a: M3 over VNCAPM3 space (for common run length <= 0.36) == 0.40um (error <)")
   errorLayer( errvpp4am4                  "GRVNCAP4a: M4 over VNCAPM4 space (for common run length <= 0.36) == 0.40um (error <)")
   errorLayer( errvpp4am5                  "GRVNCAP4a: M5 over VNCAPM5 space (for common run length <= 0.36) == 0.40um (error <)")
   errorLayer( errvpp4amt                  "GRVNCAP4a: MT over VNCAPMT space (for common run length <= 0.36) == 0.40um (error <)")

   errorLayer( errvpp4am1c                 "GRVNCAP4a: M1 over VNCAPM1 space (for common run length <= 0.36) == 0.40um (error >)")
   errorLayer( errvpp4am2c                 "GRVNCAP4a: M2 over VNCAPM2 space (for common run length <= 0.36) == 0.40um (error >)")
   errorLayer( errvpp4am3c                 "GRVNCAP4a: M3 over VNCAPM3 space (for common run length <= 0.36) == 0.40um (error >)")
   errorLayer( errvpp4am4c                 "GRVNCAP4a: M4 over VNCAPM4 space (for common run length <= 0.36) == 0.40um (error >)")
   errorLayer( errvpp4am5c                 "GRVNCAP4a: M5 over VNCAPM5 space (for common run length <= 0.36) == 0.40um (error >)")
   errorLayer( errvpp4amtc                 "GRVNCAP4a: MT over VNCAPMT space (for common run length <= 0.36) == 0.40um (error >)")

   errorLayer( errvpp4bm1                  "GRVNCAP4b: M1 over VNCAPM1 space (for common run length > 0.36) == 0.32um (error <)")
   errorLayer( errvpp4bm2                  "GRVNCAP4b: M2 over VNCAPM2 space (for common run length > 0.36) == 0.32um (error <)")
   errorLayer( errvpp4bm3                  "GRVNCAP4b: M3 over VNCAPM3 space (for common run length > 0.36) == 0.32um (error <)")
   errorLayer( errvpp4bm4                  "GRVNCAP4b: M4 over VNCAPM4 space (for common run length > 0.36) == 0.32um (error <)")
   errorLayer( errvpp4bm5                  "GRVNCAP4b: M5 over VNCAPM5 space (for common run length > 0.36) == 0.32um (error <)")
   errorLayer( errvpp4bmt                  "GRVNCAP4b: MT over VNCAPMT space (for common run length > 0.36) == 0.32um (error <)")

   errorLayer( errvpp4bm1b                 "GRVNCAP4b: M1 over VNCAPM1 space (for common run length > 0.36) == 0.32um (error >)")
   errorLayer( errvpp4bm2b                 "GRVNCAP4b: M2 over VNCAPM2 space (for common run length > 0.36) == 0.32um (error >)")
   errorLayer( errvpp4bm3b                 "GRVNCAP4b: M3 over VNCAPM3 space (for common run length > 0.36) == 0.32um (error >)")
   errorLayer( errvpp4bm4b                 "GRVNCAP4b: M4 over VNCAPM4 space (for common run length > 0.36) == 0.32um (error >)")
   errorLayer( errvpp4bm5b                 "GRVNCAP4b: M5 over VNCAPM5 space (for common run length > 0.36) == 0.32um (error >)")
   errorLayer( errvpp4bmtb                 "GRVNCAP4b: MT over VNCAPMT space (for common run length > 0.36) == 0.32um (error >)")

 ;RULE VNCAP5
   ;rule is not checked in DRC
 ;RULE VNCAP6
   ;rule is not checked in DRC

 ;RULE VNCAP6a
   drc( v1_over_vppcapm1        sep <= 0.46     diffNet "GRVNCAP6a: (V1 intersect VNCAPM1) space (different-net, edge to edge) > 0.46 um.")
   drc( v2_over_vppcapm2        sep <= 0.46     diffNet "GRVNCAP6a: (V2 intersect VNCAPM2) space (different-net, edge to edge) > 0.46 um.")
   drc( v3_over_vppcapm3        sep <= 0.46     diffNet "GRVNCAP6a: (V3 intersect VNCAPM3) space (different-net, edge to edge) > 0.46 um.")
   drc( v4_over_vppcapm4        sep <= 0.46     diffNet "GRVNCAP6a: (V4 intersect VNCAPM4) space (different-net, edge to edge) > 0.46 um.")
   drc( v5_over_vppcapm5        sep <= 0.46     diffNet "GRVNCAP6a: (V5 intersect VNCAPM5) space (different-net, edge to edge) > 0.46 um.")
   drc( ft_over_vppcapmt        sep <= 0.46     diffNet "GRVNCAP6a: (FT intersect VNCAPMT) space (different-net, edge to edge) > 0.46 um.")


 ;RULE VNCAP8a
   errvpp8a = geomButtOrOver( m1_over_vppcapm1 ca_all )
   errorLayer( errvpp8a                    "GRVNCAP8a: (M1 intersect VNCAPM1) touching CA/CABAR found !")

 ;RULE VNCAP8b
   errvpp8bm1  = geomAnd( geomButtOrOver( geomAndNot( m2_over_vppcapm2 vppcapm1 ) v1 ) LM2_5 )
   errvpp8bm1b = geomAnd( geomButtOrOver( geomAndNot( mt_over_vppcapmt vppcapm1 ) v1 ) LM1 )
   errvpp8bm2  = geomAnd( geomButtOrOver( geomAndNot( m3_over_vppcapm3 vppcapm2 ) v2 ) LM3_5 )
   errvpp8bm2b = geomAnd( geomButtOrOver( geomAndNot( mt_over_vppcapmt vppcapm2 ) v2 ) LM2)
   errvpp8bm3  = geomAnd( geomButtOrOver( geomAndNot( m4_over_vppcapm4 vppcapm3 ) v3 ) LM4_5 )
   errvpp8bm3b = geomAnd( geomButtOrOver( geomAndNot( mt_over_vppcapmt vppcapm3 ) v3 ) LM3 )
   errvpp8bm4  = geomAnd( geomButtOrOver( geomAndNot( m5_over_vppcapm5 vppcapm4 ) v4 ) LM5 )
   errvpp8bm4b = geomAnd( geomButtOrOver( geomAndNot( mt_over_vppcapmt vppcapm4 ) v4 ) LM4 )
   errvpp8bm5  = geomAnd( geomButtOrOver( geomAndNot( mt_over_vppcapmt vppcapm5 ) v5 ) LM5 )
   errorLayer( errvpp8bm1             "GRVNCAP8b: ((M2 intersect VNCAPM2) not over VNCAPM1) touching V1 found !")
   errorLayer( errvpp8bm1b            "GRVNCAP8b: ((MT intersect VNCAPMT) not over VNCAPM1) touching V1 found !")
   errorLayer( errvpp8bm2             "GRVNCAP8b: ((M3 intersect VNCAPM3) not over VNCAPM2) touching V2 found !")
   errorLayer( errvpp8bm2b            "GRVNCAP8b: ((MT intersect VNCAPMT) not over VNCAPM2) touching V2 found !")
   errorLayer( errvpp8bm3             "GRVNCAP8b: ((M4 intersect VNCAPM4) not over VNCAPM3) touching V3 found !")
   errorLayer( errvpp8bm3b            "GRVNCAP8b: ((MT intersect VNCAPMT) not over VNCAPM3) touching V3 found !")
   errorLayer( errvpp8bm4             "GRVNCAP8b: ((M5 intersect VNCAPM5) not over VNCAPM4) touching V4 found !")
   errorLayer( errvpp8bm4b            "GRVNCAP8b: ((MT intersect VNCAPMT) not over VNCAPM4) touching V4 found !")
   errorLayer( errvpp8bm5             "GRVNCAP8b: ((MT intersect VNCAPMT) not over VNCAPM5) touching V5 found !")

 ;RULE VNCAP9a
   errvpp9am1  = geomAnd( geomButtOrOver( geomAndNot( m1_over_vppcapm1 vppcapm2 ) v1 ) LM2_5 )
   errvpp9am1b = geomAnd( geomButtOrOver( geomAndNot( m1_over_vppcapm1 vppcapmt ) v1 ) LM1 )
   errvpp9am2  = geomAnd( geomButtOrOver( geomAndNot( m2_over_vppcapm2 vppcapm3 ) v2 ) LM3_5 )
   errvpp9am2b = geomAnd( geomButtOrOver( geomAndNot( m2_over_vppcapm2 vppcapmt ) v2 ) LM2 )
   errvpp9am3  = geomAnd( geomButtOrOver( geomAndNot( m3_over_vppcapm3 vppcapm4 ) v3 ) LM4_5 )
   errvpp9am3b = geomAnd( geomButtOrOver( geomAndNot( m3_over_vppcapm3 vppcapmt ) v3 ) LM3 )
   errvpp9am4  = geomAnd( geomButtOrOver( geomAndNot( m4_over_vppcapm4 vppcapm5 ) v4 ) LM5 )
   errvpp9am4b = geomAnd( geomButtOrOver( geomAndNot( m4_over_vppcapm4 vppcapmt ) v4 ) LM4 )
   errvpp9am5  = geomAnd( geomButtOrOver( geomAndNot( m5_over_vppcapm5 vppcapmt ) v5 ) LM5 )

   errorLayer( errvpp9am1             "GRVNCAP9a: ((M1 intersect VNCAPM1) not over VNCAPM2) touching V1 found !")
   errorLayer( errvpp9am1b            "GRVNCAP9a: ((M1 intersect VNCAPM1) not over VNCAPMT) touching V1 found !")
   errorLayer( errvpp9am2             "GRVNCAP9a: ((M2 intersect VNCAPM2) not over VNCAPM3) touching V2 found !")
   errorLayer( errvpp9am2b            "GRVNCAP9a: ((M2 intersect VNCAPM2) not over VNCAPMT) touching V2 found !")
   errorLayer( errvpp9am3             "GRVNCAP9a: ((M3 intersect VNCAPM3) not over VNCAPM4) touching V3 found !")
   errorLayer( errvpp9am3b            "GRVNCAP9a: ((M3 intersect VNCAPM3) not over VNCAPMT) touching V3 found !")
   errorLayer( errvpp9am4             "GRVNCAP9a: ((M4 intersect VNCAPM4) not over VNCAPM5) touching V4 found !")
   errorLayer( errvpp9am4b            "GRVNCAP9a: ((M4 intersect VNCAPM4) not over VNCAPMT) touching V4 found !")
   errorLayer( errvpp9am5             "GRVNCAP9a: ((M5 intersect VNCAPM5) not over VNCAPMT) touching V5 found !")

   errvncapmt902 = geomAnd( vppcapmt ft )
   errvncapmt903 = geomAnd( vppcapmt ftbar )
   errorLayer( errvncapmt902           "GRVNCAP9a: VNCAPMT touching FT not allowed !" )
   errorLayer( errvncapmt903           "GRVNCAP9a: VNCAPMT touching FTBAR not allowed !" )

 ;RULE VNCAP9b
   errvncap9b = geomOr( ft ftbar )
   errvpp9bm2 = geomButtOrOver( m2_over_vppcapm2 errvncap9b )
   errvpp9bm3 = geomButtOrOver( m3_over_vppcapm3 errvncap9b )
   errvpp9bm4 = geomButtOrOver( m4_over_vppcapm4 errvncap9b )
   errvpp9bm5 = geomButtOrOver( m5_over_vppcapm5 errvncap9b )
   errvpp9bmt = geomButtOrOver( mt_over_vppcapmt errvncap9b )

   errorLayer( errvpp9bm2             "GRVNCAP9b: ((M2 intersect VNCAPM2) touching {FT, FTBAR}) found !")
   errorLayer( errvpp9bm3             "GRVNCAP9b: ((M3 intersect VNCAPM3) touching {FT, FTBAR}) found !")
   errorLayer( errvpp9bm4             "GRVNCAP9b: ((M4 intersect VNCAPM4) touching {FT, FTBAR}) found !")
   errorLayer( errvpp9bm5             "GRVNCAP9b: ((M5 intersect VNCAPM5) touching {FT, FTBAR}) found !")
   errorLayer( errvpp9bmt             "GRVNCAP9b: ((MT intersect VNCAPMT) touching {FT, FTBAR}) found !")

 ;RULE VNCAP10

   errvpp10m1a = geomButtOrOver( vppcapm1 pcfuse )
   errvpp10m2a = geomButtOrOver( vppcapm2 pcfuse )
   errvpp10m3a = geomButtOrOver( vppcapm3 pcfuse )
   errvpp10m4a = geomButtOrOver( vppcapm4 pcfuse )
   errvpp10m5a = geomButtOrOver( vppcapm5 pcfuse )
   errvpp10mta = geomButtOrOver( vppcapmt pcfuse )

   errvpp10m1b = geomButtOrOver( vppcapm1 k1 )
   errvpp10m2b = geomButtOrOver( vppcapm2 k1 )
   errvpp10m3b = geomButtOrOver( vppcapm3 k1 )
   errvpp10m4b = geomButtOrOver( vppcapm4 k1 )
   errvpp10m5b = geomButtOrOver( vppcapm5 k1 )
   errvpp10mtb = geomButtOrOver( vppcapmt k1 )

   errvpp10m1c = geomButtOrOver( vppcapm1 tline )
   errvpp10m2c = geomButtOrOver( vppcapm2 tline )
   errvpp10m3c = geomButtOrOver( vppcapm3 tline )
   errvpp10m4c = geomButtOrOver( vppcapm4 tline )
   errvpp10m5c = geomButtOrOver( vppcapm5 tline )
   errvpp10mtc = geomButtOrOver( vppcapmt tline )

   errvpp10m1d = geomButtOrOver( vppcapm1 bondpad )
   errvpp10m2d = geomButtOrOver( vppcapm2 bondpad )
   errvpp10m3d = geomButtOrOver( vppcapm3 bondpad )
   errvpp10m4d = geomButtOrOver( vppcapm4 bondpad )
   errvpp10m5d = geomButtOrOver( vppcapm5 bondpad )
   errvpp10mtd = geomButtOrOver( vppcapmt bondpad )

   errvpp10m1e = geomButtOrOver( vppcapm1 logobnd )
   errvpp10m2e = geomButtOrOver( vppcapm2 logobnd )
   errvpp10m3e = geomButtOrOver( vppcapm3 logobnd )
   errvpp10m4e = geomButtOrOver( vppcapm4 logobnd )
   errvpp10m5e = geomButtOrOver( vppcapm5 logobnd )
   errvpp10mte = geomButtOrOver( vppcapmt logobnd )

   errvpp10m1f = geomButtOrOver( vppcapm1 ind_filt )
   errvpp10m2f = geomButtOrOver( vppcapm2 ind_filt )
   errvpp10m3f = geomButtOrOver( vppcapm3 ind_filt )
   errvpp10m4f = geomButtOrOver( vppcapm4 ind_filt )
   errvpp10m5f = geomButtOrOver( vppcapm5 ind_filt )
   errvpp10mtf = geomButtOrOver( vppcapmt ind_filt )

   drc( vppcapm1 pcfuse sep < 5.0       "GRVNCAP10: VNCAPM1 to adj. PCFUSE space >= 5.00 um.")
   drc( vppcapm2 pcfuse sep < 5.0       "GRVNCAP10: VNCAPM2 to adj. PCFUSE space >= 5.00 um.")
   drc( vppcapm3 pcfuse sep < 5.0       "GRVNCAP10: VNCAPM3 to adj. PCFUSE space >= 5.00 um.")
   drc( vppcapm4 pcfuse sep < 5.0       "GRVNCAP10: VNCAPM4 to adj. PCFUSE space >= 5.00 um.")
   drc( vppcapm5 pcfuse sep < 5.0       "GRVNCAP10: VNCAPM5 to adj. PCFUSE space >= 5.00 um.")
   drc( vppcapmt pcfuse sep < 5.0       "GRVNCAP10: VNCAPMT to adj. PCFUSE space >= 5.00 um.")

   drc( vppcapm1 k1 sep < 5.0       "GRVNCAP10: VNCAPM1 to adj. K1 space >= 5.00 um.")
   drc( vppcapm2 k1 sep < 5.0       "GRVNCAP10: VNCAPM2 to adj. K1 space >= 5.00 um.")
   drc( vppcapm3 k1 sep < 5.0       "GRVNCAP10: VNCAPM3 to adj. K1 space >= 5.00 um.")
   drc( vppcapm4 k1 sep < 5.0       "GRVNCAP10: VNCAPM4 to adj. K1 space >= 5.00 um.")
   drc( vppcapm5 k1 sep < 5.0       "GRVNCAP10: VNCAPM5 to adj. K1 space >= 5.00 um.")
   drc( vppcapmt k1 sep < 5.0       "GRVNCAP10: VNCAPMT to adj. K1 space >= 5.00 um.")

   drc( vppcapm1 tline sep < 5.0       "GRVNCAP10: VNCAPM1 to adj. TLINE space >= 5.00 um.")
   drc( vppcapm2 tline sep < 5.0       "GRVNCAP10: VNCAPM2 to adj. TLINE space >= 5.00 um.")
   drc( vppcapm3 tline sep < 5.0       "GRVNCAP10: VNCAPM3 to adj. TLINE space >= 5.00 um.")
   drc( vppcapm4 tline sep < 5.0       "GRVNCAP10: VNCAPM4 to adj. TLINE space >= 5.00 um.")
   drc( vppcapm5 tline sep < 5.0       "GRVNCAP10: VNCAPM5 to adj. TLINE space >= 5.00 um.")
   drc( vppcapmt tline sep < 5.0       "GRVNCAP10: VNCAPMT to adj. TLINE space >= 5.00 um.")

   drc( vppcapm1 bondpad sep < 5.0     "GRVNCAP10: VNCAPM1 to adj. BONDPAD space >= 5.00 um.")
   drc( vppcapm2 bondpad sep < 5.0     "GRVNCAP10: VNCAPM2 to adj. BONDPAD space >= 5.00 um.")
   drc( vppcapm3 bondpad sep < 5.0     "GRVNCAP10: VNCAPM3 to adj. BONDPAD space >= 5.00 um.")
   drc( vppcapm4 bondpad sep < 5.0     "GRVNCAP10: VNCAPM4 to adj. BONDPAD space >= 5.00 um.")
   drc( vppcapm5 bondpad sep < 5.0     "GRVNCAP10: VNCAPM5 to adj. BONDPAD space >= 5.00 um.")
   drc( vppcapmt bondpad sep < 5.0     "GRVNCAP10: VNCAPMT to adj. BONDPAD space >= 5.00 um.")

   drc( vppcapm1 logobnd sep < 5.0     "GRVNCAP10: VNCAPM1 to adj. LOGOBND space >= 5.00 um.")
   drc( vppcapm2 logobnd sep < 5.0     "GRVNCAP10: VNCAPM2 to adj. LOGOBND space >= 5.00 um.")
   drc( vppcapm3 logobnd sep < 5.0     "GRVNCAP10: VNCAPM3 to adj. LOGOBND space >= 5.00 um.")
   drc( vppcapm4 logobnd sep < 5.0     "GRVNCAP10: VNCAPM4 to adj. LOGOBND space >= 5.00 um.")
   drc( vppcapm5 logobnd sep < 5.0     "GRVNCAP10: VNCAPM5 to adj. LOGOBND space >= 5.00 um.")
   drc( vppcapmt logobnd sep < 5.0     "GRVNCAP10: VNCAPMT to adj. LOGOBND space >= 5.00 um.")

   drc( vppcapm1 ind_filt sep < 5.0    "GRVNCAP10: VNCAPM1 to adj. IND_FILT space >= 5.00 um.")
   drc( vppcapm2 ind_filt sep < 5.0    "GRVNCAP10: VNCAPM2 to adj. IND_FILT space >= 5.00 um.")
   drc( vppcapm3 ind_filt sep < 5.0    "GRVNCAP10: VNCAPM3 to adj. IND_FILT space >= 5.00 um.")
   drc( vppcapm4 ind_filt sep < 5.0    "GRVNCAP10: VNCAPM4 to adj. IND_FILT space >= 5.00 um.")
   drc( vppcapm5 ind_filt sep < 5.0    "GRVNCAP10: VNCAPM4 to adj. IND_FILT space >= 5.00 um.")
   drc( vppcapmt ind_filt sep < 5.0    "GRVNCAP10: VNCAPMT to adj. IND_FILT space >= 5.00 um.")


   errorLayer( errvpp10m1a            "GRVNCAP10: VNCAPM1 touching PCFUSE found !")
   errorLayer( errvpp10m2a            "GRVNCAP10: VNCAPM2 touching PCFUSE found !")
   errorLayer( errvpp10m3a            "GRVNCAP10: VNCAPM3 touching PCFUSE found !")
   errorLayer( errvpp10m4a            "GRVNCAP10: VNCAPM4 touching PCFUSE found !")
   errorLayer( errvpp10m5a            "GRVNCAP10: VNCAPM5 touching PCFUSE found !")
   errorLayer( errvpp10mta            "GRVNCAP10: VNCAPMT touching PCFUSE found !")

   errorLayer( errvpp10m1b            "GRVNCAP10: VNCAPM1 touching K1 found !")
   errorLayer( errvpp10m2b            "GRVNCAP10: VNCAPM2 touching K1 found !")
   errorLayer( errvpp10m3b            "GRVNCAP10: VNCAPM3 touching K1 found !")
   errorLayer( errvpp10m4b            "GRVNCAP10: VNCAPM4 touching K1 found !")
   errorLayer( errvpp10m5b            "GRVNCAP10: VNCAPM5 touching K1 found !")
   errorLayer( errvpp10mtb            "GRVNCAP10: VNCAPMT touching K1 found !")

   errorLayer( errvpp10m1c            "GRVNCAP10: VNCAPM1 touching TLINE found !")
   errorLayer( errvpp10m2c            "GRVNCAP10: VNCAPM2 touching TLINE found !")
   errorLayer( errvpp10m3c            "GRVNCAP10: VNCAPM3 touching TLINE found !")
   errorLayer( errvpp10m4c            "GRVNCAP10: VNCAPM4 touching TLINE found !")
   errorLayer( errvpp10m5c            "GRVNCAP10: VNCAPM5 touching TLINE found !")
   errorLayer( errvpp10mtc            "GRVNCAP10: VNCAPMT touching TLINE found !")

   errorLayer( errvpp10m1d            "GRVNCAP10: VNCAPM1 touching BONDPAD found !")
   errorLayer( errvpp10m2d            "GRVNCAP10: VNCAPM2 touching BONDPAD found !")
   errorLayer( errvpp10m3d            "GRVNCAP10: VNCAPM3 touching BONDPAD found !")
   errorLayer( errvpp10m4d            "GRVNCAP10: VNCAPM4 touching BONDPAD found !")
   errorLayer( errvpp10m5d            "GRVNCAP10: VNCAPM5 touching BONDPAD found !")
   errorLayer( errvpp10mtd            "GRVNCAP10: VNCAPMT touching BONDPAD found !")

   errorLayer( errvpp10m1e            "GRVNCAP10: VNCAPM1 touching LOGOBND found !")
   errorLayer( errvpp10m2e            "GRVNCAP10: VNCAPM2 touching LOGOBND found !")
   errorLayer( errvpp10m3e            "GRVNCAP10: VNCAPM3 touching LOGOBND found !")
   errorLayer( errvpp10m4e            "GRVNCAP10: VNCAPM4 touching LOGOBND found !")
   errorLayer( errvpp10m5e            "GRVNCAP10: VNCAPM5 touching LOGOBND found !")
   errorLayer( errvpp10mte            "GRVNCAP10: VNCAPMT touching LOGOBND found !")

   errorLayer( errvpp10m1f            "GRVNCAP10: VNCAPM1 touching IND_FILT found !")
   errorLayer( errvpp10m2f            "GRVNCAP10: VNCAPM2 touching IND_FILT found !")
   errorLayer( errvpp10m3f            "GRVNCAP10: VNCAPM3 touching IND_FILT found !")
   errorLayer( errvpp10m4f            "GRVNCAP10: VNCAPM4 touching IND_FILT found !")
   errorLayer( errvpp10m5f            "GRVNCAP10: VNCAPM5 touching IND_FILT found !")
   errorLayer( errvpp10mtf            "GRVNCAP10: VNCAPMT touching IND_FILT found !")

 ;RULE VNCAP11b
   errvpp11bv2 = geomAndNot( geomAnd( v2_over_vppcapm2 vppcapm1 ) v1_over_vppcapm1 )
   errvpp11bv3 = geomAndNot( geomAnd( v3_over_vppcapm3 vppcapm2 ) v2_over_vppcapm2 )
   errvpp11bv4 = geomAndNot( geomAnd( v4_over_vppcapm4 vppcapm3 ) v3_over_vppcapm3 )
   errvpp11bv5 = geomAndNot( geomAnd( v5_over_vppcapm5 vppcapm4 ) v4_over_vppcapm4 )
   errorLayer( errvpp11bv2            "GRVNCAP11b: (V2 over VNCAPM2) must be coincident with (V1 over VNCAPM1)")
   errorLayer( errvpp11bv3            "GRVNCAP11b: (V3 over VNCAPM3) must be coincident with (V2 over VNCAPM2)")
   errorLayer( errvpp11bv4            "GRVNCAP11b: (V4 over VNCAPM4) must be coincident with (V3 over VNCAPM3)")
   errorLayer( errvpp11bv5            "GRVNCAP11b: (V5 over VNCAPM5) must be coincident with (V4 over VNCAPM4)")

 ;RULE VNCAP12
   errvpp11bm2 = geomAndNot( geomAnd( m2_over_vppcapm2 vppcapm1 ) m1_over_vppcapm1 )
   errvpp11bm3 = geomAndNot( geomAnd( m3_over_vppcapm3 vppcapm2 ) m2_over_vppcapm2 )
   errvpp11bm4 = geomAndNot( geomAnd( m4_over_vppcapm4 vppcapm3 ) m3_over_vppcapm3 )
   errvpp11bm5 = geomAndNot( geomAnd( m5_over_vppcapm5 vppcapm4 ) m4_over_vppcapm4 )
   errvpp11bmt = geomAndNot( geomAnd( mt_over_vppcapmt vppcapm5 ) m5_over_vppcapm5 )
   errorLayer( errvpp11bm2            "GRVNCAP12: (M2 over VNCAPM2) must be coincident with (M1 over VNCAPM1)")
   errorLayer( errvpp11bm3            "GRVNCAP12: (M3 over VNCAPM3) must be coincident with (M2 over VNCAPM2)")
   errorLayer( errvpp11bm4            "GRVNCAP12: (M4 over VNCAPM4) must be coincident with (M3 over VNCAPM3)")
   errorLayer( errvpp11bm5            "GRVNCAP12: (M5 over VNCAPM5) must be coincident with (M4 over VNCAPM4)")
   errorLayer( errvpp11bmt            "GRVNCAP12: (MT over VNCAPMT) must be coincident with (M5 over VNCAPM5)")

 ;RULE VNCAP13
   nw13 = geomAvoiding( geomOr( nw bb ) geomOr( pc rx ) )
   drc( nw13 m1_over_vppcapm1 enc < 5.00   "GRVNCAP13: ((NW or BB) not touching (PC or RX)) overlap past (M1 over VNCAPM1) >= 5.0um.")
   drc( nw13 m2_over_vppcapm2 enc < 5.00   "GRVNCAP13: ((NW or BB) not touching (PC or RX)) overlap past (M2 over VNCAPM2) >= 5.0um.")
   drc( nw13 m3_over_vppcapm3 enc < 5.00   "GRVNCAP13: ((NW or BB) not touching (PC or RX)) overlap past (M3 over VNCAPM3) >= 5.0um.")
   drc( nw13 m4_over_vppcapm4 enc < 5.00   "GRVNCAP13: ((NW or BB) not touching (PC or RX)) overlap past (M4 over VNCAPM4) >= 5.0um.")
   drc( nw13 m5_over_vppcapm5 enc < 5.00   "GRVNCAP13: ((NW or BB) not touching (PC or RX)) overlap past (M5 over VNCAPM5) >= 5.0um.")
   drc( nw13 mt_over_vppcapmt enc < 5.00   "GRVNCAP13: ((NW or BB) not touching (PC or RX)) overlap past (MT over VNCAPMT) >= 5.0um.")

 ;RULE VNCAP15
   errvpp15m1 = geomGetAngledEdge( m1_over_vppcapm1 0 < keep < 90 fig )
   errvpp15m2 = geomGetAngledEdge( m2_over_vppcapm2 0 < keep < 90 fig )
   errvpp15m3 = geomGetAngledEdge( m3_over_vppcapm3 0 < keep < 90 fig )
   errvpp15m4 = geomGetAngledEdge( m4_over_vppcapm4 0 < keep < 90 fig )
   errvpp15m5 = geomGetAngledEdge( m5_over_vppcapm5 0 < keep < 90 fig )
   errvpp15mt = geomGetAngledEdge( mt_over_vppcapmt 0 < keep < 90 fig )
   errorLayer( errvpp15m1                "GRVNCAP15: (M1 intersect VNCAPM1) must be rectangular")
   errorLayer( errvpp15m2                "GRVNCAP15: (M2 intersect VNCAPM2) must be rectangular")
   errorLayer( errvpp15m3                "GRVNCAP15: (M3 intersect VNCAPM3) must be rectangular")
   errorLayer( errvpp15m4                "GRVNCAP15: (M4 intersect VNCAPM4) must be rectangular")
   errorLayer( errvpp15m5                "GRVNCAP15: (M5 intersect VNCAPM5) must be rectangular")
   errorLayer( errvpp15mt                "GRVNCAP15: (MT intersect VNCAPMT) must be rectangular")

 ;Rule VNCAPM1
   vncpa_all    = geomOr( vppcapm1 vppcapm2 vppcapm3 vppcapm4 vppcapm5 vppcapmt )
   errvncapm1   = geomAndNot( vncpa_all geomEnclose( vncpa_all vncapparm ) )

   errorLayer( errvncapm1                      "GRVNCPM1: Union (VNCAP_Mx (x=1,2,3,4,5,T)) must enclose at least one VNCAP_PARM shape!")

  ;Rule VNCAPM2
    errvncapm2a = geomAndNot( vppcapm1 geomEnclose( vppcapm1 vncapcount ) )
    errvncapm2b = geomAndNot( vppcapm2 geomEnclose( vppcapm2 vncapcount ) )
    errvncapm2c = geomAndNot( vppcapm3 geomEnclose( vppcapm3 vncapcount ) )
    errvncapm2d = geomAndNot( vppcapm4 geomEnclose( vppcapm4 vncapcount ) )
    errvncapm2e = geomAndNot( vppcapm5 geomEnclose( vppcapm5 vncapcount ) )
    errvncapm2f = geomAndNot( vppcapmt geomEnclose( vppcapmt vncapcount ) )

    errorLayer(  errvncapm2a                   "GRVNCPM2: VNCAP_M1 must enclose one VNCAP_COUNT shape!")
    errorLayer(  errvncapm2b                   "GRVNCPM2: VNCAP_M2 must enclose one VNCAP_COUNT shape!")
    errorLayer(  errvncapm2c                   "GRVNCPM2: VNCAP_M3 must enclose one VNCAP_COUNT shape!")
    errorLayer(  errvncapm2d                   "GRVNCPM2: VNCAP_M4 must enclose one VNCAP_COUNT shape!")
    errorLayer(  errvncapm2e                   "GRVNCPM2: VNCAP_M5 must enclose one VNCAP_COUNT shape!")
    errorLayer(  errvncapm2f                   "GRVNCPM2: VNCAP_MT must enclose one VNCAP_COUNT shape!")
  if( avSwitch("HIRESSUB") then
  ;Rule VNCAP16
     foreach( level '( vncapm1 vncapm2 vncapm3 vncapm4 vncapm5 vncapmt )
       let(( errMsg errvncap16  )
          errvncap16 = drc( eval(level) nohr 0 < sep < 10.00  )
          sprintf( errMsg                     "GRVNCAP16: %s to adjacent NOHR >= 10.00um." upperCase(level))
          errorLayer( errvncap16 errMsg )
       );End let
     );End foreach
  );End HIRESSUB

 if( avSwitch( "C4_4on8" ) || avSwitch( "C4_4on9" ) || avSwitch( "C4_5on10" ) || avSwitch( "C4_CuPillar" ) then
 ;C4 LAYOUT RULES
 ;Rule 900
   c4pad      = geomOr( lvpad lvdummy )
   c4pad_real = geomAndNot( c4pad lvdummy )
   err900a1   = geomStraddle( c4pad_real c4lv )
   err900a2   = geomOutside( c4pad_real c4lv )
   c4lv_touch_lv=geomOverlap( c4lv  geomAnd( geomSize( lv 0.01) c4lv))
   err900b    =geomAndNot(c4lv c4lv_touch_lv)
   ;err900b    = geomAvoiding( c4lv lv )
   err900_1 = drc( c4pad width < 46.90  opposite fig )
   err900_2 = drc( c4pad  area > 1831.0              )
   errorLayer( err900_1                   "GR900: LV(terminal via) diameter == 47.000 um.(error <)")
   errorLayer( err900_2                   "GR900: LV(terminal via) diameter == 47.000 um.(error >)")
   errorLayer( err900a1                   "GR900a: LV(for C4's) must be within C4LV >= 0.000 um.")
   errorLayer( err900a2                   "GR900a: LV outside of C4LV found! (when C4 checking is selected)")
   errorLayer( err900b                    "GR900b: C4LV must touch LV !" )

 ;Rule 900c
    lv_touch_c4lv = geomButtOrOver( lv c4lv )
    lvc4_ed_45 = geomSize( geomGetAngledEdge( lv_touch_c4lv keep == 45) -0.01)
    lvc4_ed_90 = geomSize( geomGetAngledEdge( lv_touch_c4lv keep == 90) -0.01)
   ;lvc4_ed_90_lth = geomGetLength( lvc4_ed_90  keep == 19.48 fig)
    err_lvc4_1 = geomOverlap( lv_touch_c4lv lvc4_ed_45 keep == 4 )
    err_lvc4_2 = geomOverlap( err_lvc4_1 lvc4_ed_90 keep == 4 )
    err900c = geomAndNot( lv_touch_c4lv  err_lvc4_2)
    errorLayer( err900c                    "GR900c: LV touching C4 must be octogonal !" )

 ;Rule 901  (SEE BELOW)

 ;Rule 902 (SEE BELOW)

 ;Rule 906
   err906 = geomAndNot( c4pad ChipEdge )
   errorLayer( err906                     "GR906: LV(C4 pad) not within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} found!")

 ;Rule 907
   err907 = geomAnd( c4pad logobnd )
   errorLayer( err907                     "GR907: LV(C4 pad) touching Chip Logo & PN (LOGBND) found!")

 ;Rules 901 & 906 & 907
  if( avSwitch("C4_4on8") then
   drc( c4pad            sep < 153.0 fig   "GR901: LV(C4 pad) to LV(C4 pad) space >= 153.000 um.")
   drc( am c4pad_real enc < 14.50 figb     "GR902b: LV within AM >= 14.500 um.")
   drc( ma c4pad_real enc < 14.50 figb     "GR902b: LV within MA >= 14.500 um.")
   drc( ml c4pad_real enc < 14.50 figb     "GR902b: LV within ML >= 14.500 um.")
   drc( mz c4pad_real enc < 14.50 figb     "GR902b: LV within MZ >= 14.500 um.")
   drc( ChipEdge c4pad enc <  86.0 figb    "GR906: LV(C4 pad) within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 86.000 um.")
   drc( c4pad logobnd sep <  64.0 figa     "GR907: LV(C4 pad) to Chip Logo & PN (LOGBND) >= 64.000 um.")
   if( avSwitch( "CHECK_RECOMMENDED") then
   drc( ChipEdge c4pad   enc <  101.0 figb  "GR906R: LV(C4 pad) within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 101.000 um.")
   );end recommended
   errc4mn = geomEnclose( chipedge lv  keep < 3 )
   errc4mx = geomEnclose( chipedge lv  keep > 9000 )
   errorLayer( errc4mn                  "GRC4MX: Minimum C4's per chip should be >=3")
   errorLayer( errc4mx                  "GRC4MN: Maximum C4's per chip should be <=9000")
  )

  if( avSwitch("C4_4on9") then
   drc( c4pad            sep < 178.0 fig   "GR901: LV(C4 pad) to LV(C4 pad) space >= 178.000 um.")
   drc( am c4pad_real enc < 14.50 figb     "GR902b: LV within AM >= 14.500 um.")
   drc( ma c4pad_real enc < 14.50 figb     "GR902b: LV within MA >= 14.500 um.")
   drc( ml c4pad_real enc < 14.50 figb     "GR902b: LV within ML >= 14.500 um.")
   drc( mz c4pad_real enc < 14.50 figb     "GR902b: LV within MZ >= 14.500 um.")
   drc( ChipEdge c4pad   enc <  86.0 figb  "GR906: LV(C4 pad) within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 86.000 um.")
   drc( c4pad logobnd sep <  64.0 figa  "GR907: LV(C4 pad) to Chip Logo & PN (LOGBND) >= 64.000 um.")
   errc4mn = geomEnclose( chipedge lv  keep < 3 )
   errc4mx = geomEnclose( chipedge lv  keep > 9000 )
   errorLayer( errc4mn                  "GRC4MX: Minimum C4's per chip should be >=3")
   errorLayer( errc4mx                  "GRC4MN: Maximum C4's per chip should be <=9000")
   if( avSwitch( "CHECK_RECOMMENDED") then
   drc( ChipEdge c4pad   enc <  101.0 figb  "GR906R: LV(C4 pad) within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 101.000 um.")
   );end recommended
  )

  if( avSwitch("C4_5on10") then
   drc( c4pad            sep < 203.0 fig   "GR901: LV(C4 pad) to LV(C4 pad) space >= 203.000 um.")
   drc( am c4pad_real enc < 14.50 figb     "GR902b: LV within AM >= 14.500 um.")
   drc( ma c4pad_real enc < 14.50 figb     "GR902b: LV within MA >= 14.500 um.")
   drc( ml c4pad_real enc < 14.50 figb     "GR902b: LV within ML >= 14.500 um.")
   drc( mz c4pad_real enc < 14.50 figb     "GR902b: LV within MZ >= 14.500 um.")
   drc( ChipEdge c4pad   enc < 104.0 figb  "GR906: LV(C4 pad) within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 104.000 um.")
   drc( c4pad    logobnd sep <  80.0 figa  "GR907: LV(C4 pad) to Chip Logo & PN (LOGBND) >= 80.000 um.")
   errc4mn = geomEnclose( chipedge lv  keep < 3 )
   errc4mx = geomEnclose( chipedge lv  keep > 7000 )
   errorLayer( errc4mn                  "GRC4MX: Minimum C4's per chip should be >=3")
   errorLayer( errc4mx                  "GRC4MN: Maximum C4's per chip should be <=7000")
   if( avSwitch( "CHECK_RECOMMENDED") then
   drc( ChipEdge c4pad   enc <  113.0 figb  "GR906R: LV(C4 pad) within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 113.000 um.")
   );end recommended
  )

  if( avSwitch("C4_CuPillar") then
  ;Rule CE003CP
   chip_cupi = geomButtOrOver( chipedge cupillar)
   chipedge_bdy2_cupi = geomGetBBox( chip_cupi 0 < length 0 < width )
   chipedge_erx_cupi = geomGrow( chipedge_bdy2_cupi -2500 0)
   chipedge_ery_cupi = geomGrow( chipedge_bdy2_cupi 0 -2500)
   errorLayer( chipedge_erx_cupi           "GRCE003CP: (CHIPEDGE touching CUPILLAR ) maximum x dimension (mm) <= 5.000 mm " )
   errorLayer( chipedge_ery_cupi           "GRCE003CP: (CHIPEDGE touching CUPIILAR ) maximum y dimension (mm) <= 5.000 mm " )

   err_900p = geomAvoiding( bkgnd  cupillar)
   errorLayer( err_900p                    "GR900p: DATA_EXTENT must be touch CUPILLAR.")
   drc( c4pad            sep < 103.0 fig   "GR901: LV(C4 pad) to LV(C4 pad) space >= 103.000 um.")
   drc( am c4pad_real enc < 21.50 figb     "GR902b: LV within AM >= 21.500 um.")
   drc( ma c4pad_real enc < 21.50 figb     "GR902b: LV within MA >= 21.500 um.")
   drc( ml c4pad_real enc < 21.50 figb     "GR902b: LV within ML >= 21.500 um.")
   drc( mz c4pad_real enc < 14.50 figb     "GR902b: LV within MZ >= 14.500 um.")
   drc( ChipEdge c4pad enc <  76.70 figb   "GR906: LV(C4 pad) within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 76.70 um.")
   drc( c4pad logobnd sep < 64.0 withSingularPoint figb "GR907:  LV(C4 pad) to Chip Logo & PN (LOGBND) >= 64.000 um.")
   err_900b2_0 = geomSize( geomButtOrOver( lv c4lv) 0.02)
   err_900b2 = geomAndNot( geomButtOrOver( c4lv err_900b2_0 )  err_900b2_0)
   errorLayer(  err_900b2                  "GR900b2: ((LV touching C4LV) sized by 0.02) must cover  C4LV)")
   errc4mn = geomEnclose( chipedge lv keep < 3 )
   errc4mx = geomEnclose( chipedge lv keep > 9000 )
   errorLayer( errc4mn                  "GRC4MX: Minimum C4's per chip should be >=3")
   errorLayer( errc4mx                  "GRC4MN: Maximum C4's per chip should be <=9000")

   if( avSwitch( "CHECK_RECOMMENDED") then
   drc( ChipEdge c4pad   enc <  101.0 figb  "GR906R: LV(C4 pad) within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} >= 101.000 um.")
   );end recommended
  )

 ;Rule 908 (NOT CHECKED IN THIS DECK)

 ;Rule 911
   err911a = geomOverlap( lvdummy geomSize( lv 0.01 ) )
   errorLayer( err911a                    "GR911a: LVDUMMY must not touch LV !")

 ;Rule 927
 ;  chip_not_crack =  geomAndNot( chipedge crackstop)
   lvpad_good   = geomAndNot( c4pad geomOr( err900_1 err900_2))
   err927=geomAndNot( geomOverlap( ChipEdge lvpad_good ) geomSize( lvpad_good 1500) )
   errorLayer( err927 "GR927: ({GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} not within LV or LVDUMMY size by 1500 found!")

);END of C4 RULES


if( !avSwitch( "C4_4on8" ) && !avSwitch( "C4_4on9" ) && !avSwitch( "C4_5on10" ) && !avSwitch( "C4_CuPillar" ) then
 ;WIREBOND RULES
 ;Rule BEOL1
   errbeol1 = geomEnclose( bkgnd lv )
   errorLayer( errbeol1    "GRBEOL1: LV found in WireBond design!")

 ;Rule 941 (see with rule 946!)

 ;Rule 942b & 951
   foreach( level '( k1 ftbar pcfuse di dipi wvr logobnd ind_filt dns_sram
                      vncapm1 vncapm2 vncapm3 vncapm4 vncapm5 vncapmt )
 
     sprintf(errTxtGR942b   "GR942b: DV(pad) to %s space >= 3.00 um." upperCase(level) )
     sprintf(errTxtGR951    "GR951: %s under DV(pad) found!" upperCase(level) )
 
     err942b = drc( dvpad eval(level) sep < 3.00 withSingularPoint )
     err951  = geomAnd( eval(level) dvpad )
     errorLayer( err942b errTxtGR942b )
     errorLayer( err951  errTxtGR951 )
   );End foreach

   e2bar     = geomWidth( e2 keep > 2.00 )
   err951_e2 = geomAnd( geomAnd( dvpad ma ) e2bar )
   drc( dvpad e2bar    sep < 3.00 withSingularPoint  "GR942b: DV(pad) to E2(bar/wire) space >= 3.00 um.")
   errorLayer( err951_e2                             "GR951: E2 under DV(pad) found!")

   mt_2_Chk  = geomAnd( mt LM0ML )
   err951_mt = geomAnd( dvpad mt_2_Chk )
   drc( dvpad mt_2_Chk sep < 3.00 withSingularPoint  "GR942b: DV(pad) to MT space >= 3.00 um.(ML BEOL)")
   errorLayer( err951_mt                             "GR951: (MT under ML) under DV(pad) found!")

   qt_2_Chk  = geomAnd( qt LM0ML )
   err951_qt = geomAnd( dvpad qt_2_Chk )
   drc( dvpad qt_2_Chk sep < 3.00 withSingularPoint  "GR942b: DV(pad) to QT space >= 3.00 um.(ML BEOL)")
   errorLayer( err951_qt                             "GR951: (QT under ML) under DV(pad) found!")


 ;Rule 942c & 951c
   foreach( level '( k1 mt ft ftbar pcfuse qt di dipi wvr logobnd ind_filt dns_sram
                      vncapm1 vncapm2 vncapm3 vncapm4 vncapm5 vncapmt )
 
     sprintf(errTxtGR942c   "GR942c: TV(pad) to %s space >= 3.00 um." upperCase(level) )
     sprintf(errTxtGR951c   "GR951c: %s under TV(pad) found!" upperCase(level) )
 
     err942c = drc( tvpad eval(level) sep < 3.00 withSingularPoint )
     err951c = geomAnd( eval(level) tvpad )
     errorLayer( err942c errTxtGR942c )
     errorLayer( err951c errTxtGR951c )
   );End foreach

 ;Rule 944 (RECOMMENDED RULE)

 ;Rule 945
   err945b  = geomOverlap( dvpad geomSize( ChipEdge -190.00 ) )
   errorLayer( err945b            "GR945b: DV must be within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} (Max) <= 190.00 um.")

   err945c  = geomOverlap( tvpad geomSize( ChipEdge -190.00 ) )
   errorLayer( err945c            "GR945c: TV must be within {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)} (Max) <= 190.00 um.")

 ;Rule 941/946

  if( !avSwitch("small_wb_RESTRICTED_USE") then

 ;Rule 941
   dvpad_mz = geomAnd( dv mz )
   dvpad_cntr = geomGetBBox( dvpad  outputCenterMarker 0.50 )
   tvpad_cntr = geomGetBBox( tvpad  outputCenterMarker 0.50 )
   dvmz_cntr = geomGetBBox( dvpad_mz outputCenterMarker 0.50 )
   drc( dvpad_cntr sep < 72.50  withSingularPoint       "GR941b: DV PAD space >= 11.00 um.")
  ; drc( dvmz_cntr sep < 77.50   withSingularPoint       "GR941c: ( TV OR DV ) ovr MZ PAD space >= 78.00 um.")
   drc( tvpad_cntr sep < 77.50  withSingularPoint       "GR941c: ( TV OR DV ) ovr MZ PAD space >= 78.00 um.")

 ;Rule 946
   err946dv = geomGetPolygon( dvpad )
   errorLayer( err946dv            "GR946b: Non-rectangular DV pad found!")
   err_946b = geomAnd( drc( dvpad width < 62.0 opposite parallel ) chipedge )
   errorLayer( err_946b                        "GR946b: DV pad width (must be rectanglular) >= 62.00 um." )

   err946ca_tv = geomGetPolygon( tvpad )
   err946ca_dv = geomGetPolygon( dvpad_mz )
   errorLayer( err946ca_tv            "GR946ca: Non-rectangular TV pad ovr MZ found!")
  ; errorLayer( err946ca_dv            "GR946ca: Non-rectangular DV pad ovr MZ found!")
   err_946ca_tv = geomAnd( drc( tvpad width < 67.0 opposite parallel ) chipedge )
   err_946ca_dv = geomAnd( drc( dvpad_mz width < 67.0 opposite parallel ) chipedge )
 ;  errorLayer( err_946ca_dv           "GR946ca: TV pad width (must be rectanglular) >= 62.00 um." )
   errorLayer( err_946ca_tv           "GR946ca: TV pad width (must be rectanglular) >= 62.00 um." )

   pad_edge_tv     = geomSize( geomStretch( geomGetEdge( tvpad over mz ) -0.1 ) 0.1 )
   outside_edge_tv = geomOutside( pad_edge_tv geomSize( chipedge -70.0 ) )
   err946cb        = geomAnd( geomInside( drc( outside_edge_tv pad_edge_tv sep < 95.0 opposite ) tvpad ) chipedge )
   errorLayer( err946cb             "GR946cb: TV pad length (perp to CHIPEDGE) >= 95.000 um.")

   pad_edge_dv     = geomSize( geomStretch( geomGetEdge( dvpad over lastmetal ) -0.1 ) 0.1 )
   outside_edge_dv = geomOutside( pad_edge_dv geomSize( chipedge -70.0 ) )
   err946g         = geomAnd( geomInside( drc( outside_edge_dv pad_edge_dv sep < 95.0 opposite ) dvpad ) chipedge )
   errorLayer( err946g             "GR946g: DV pad length (perp to CHIPEDGE) >= 95.000 um.")

   dv_pad_edge = geomSize( geomGetEdge( dvpad over am ) .10 )
   tv_pad_edge = geomSize( geomGetEdge( tvpad over am ) .10 )

   dve_perp = geomButtOrOver( dv_pad_edge geomSize( drc( chipedge dvpad enc < 130.0 only_perp edgeb ) .1 ) )
   err946g = geomAnd( geomButtOrOver( dvpad drc( dve_perp .09 < width < .11 length < 95.00 ) ) chipedge )
   tve_perp = geomButtOrOver( tv_pad_edge geomSize( drc( chipedge tvpad enc < 130.0 only_perp edgeb ) .1 ) )
   err946cb = geomAnd( geomButtOrOver( tvpad drc( tve_perp .09 < width < .11 length < 95.00 ) ) chipedge )

   dvpad_bk = geomAndNot( dvpad chipedge )
   tvpad_bk = geomAndNot( dvpad chipedge )
   e946g2 = geomAnd( drc( dvpad_bk 60.0 < width < 95.0 length < 95.0 ) chipedge )
   e946cb2 = geomAnd( drc( tvpad_bk 60.0 < width < 95.0 length < 95.0 ) chipedge )
   errorLayer( e946g2 "GR946g: DV pad width >= 62.0 um and length >= 95.0 um !" )
   errorLayer( e946cb2 "GR946cb: TV pad width >= 62.0 um and length >= 95.0 um !" )

   e946g0 = geomSize( dv .1 )
   e946cb0 = geomSize( tv .1 )
   ;e946g1 = geomAnd( geomButtOrOver( e946g0 dve_perp keep == 4 ) chipedge )
   ;e946cb1 = geomAnd( geomButtOrOver( e946cb0 tve_perp keep == 4 ) chipedge )
   e946g1 = geomAnd( geomButtOrOver( e946g0 geomSize( geomGetLength( dve_perp  0.1 < keep < 95.0 ) 0.1 ) ) chipedge )
   e946cb1 = geomAnd( geomButtOrOver( e946cb0 geomSize( geomGetLength( tve_perp  0.1 < keep < 95.0 ) 0.1 ) ) chipedge )
   errorLayer( e946g1                  "GR946g: DV pad length (perp to CHIPEDGE) >= 95.000 um." )
   errorLayer( err946g                 "GR946g: DV pad length (perp to CHIPEDGE) >= 95.000 um.")
   errorLayer( e946cb1                 "GR946cb: TV pad length (perp to CHIPEDGE) >= 95.000 um." )
   errorLayer( err946cb                "GR946cb: TV pad length (perp to CHIPEDGE) >= 95.000 um.")

  );END IF

  if( avSwitch("small_wb_RESTRICTED_USE") then

   err946dv = geomGetPolygon( dvpad )
   errorLayer( err946dv            "GR946b: Non-rectangular DV pad found!")
   err_946b = geomAnd( drc( dvpad width < 66.0 opposite parallel ) chipedge )
   errorLayer( err_946b                        "GR946b: DV pad width (must be rectanglular) >= 66.00 um." )

   pad_edge_dv     = geomSize( geomStretch( geomGetEdge( dvpad over lastmetal ) -0.1 ) 0.1 )
   outside_edge_dv = geomOutside( pad_edge_dv geomSize( chipedge -70.0 ) )
   err946g         = geomAnd( geomInside( drc( outside_edge_dv pad_edge_dv sep < 70.0 opposite ) dvpad ) chipedge )
   errorLayer( err946g             "GR946g: DV pad length (perp to CHIPEDGE) >= 70.000 um.")

   dv_pad_edge = geomSize( geomGetEdge( dvpad over am ) .10 )

   dve_perp = geomButtOrOver( dv_pad_edge geomSize( drc( chipedge dvpad enc < 130.0 only_perp edgeb ) .1 ) )
   err946g = geomAnd( geomButtOrOver( dvpad drc( dve_perp .09 < width < .11 length < 70.00 ) ) chipedge )

   dvpad_bk = geomAndNot( dvpad chipedge )
   e946g2 = geomAnd( drc( dvpad_bk 64.0 < width < 70.0 length < 70.0 ) chipedge )
   errorLayer( e946g2 "GR946g: DV pad width >= 66.0 um and length >= 70.0 um !" )

   e946g0 = geomSize( dv .1 )
  ; e946g1 = geomAnd( geomButtOrOver( e946g0 dve_perp keep == 4 ) chipedge )
   e946g1 = e946g1 = geomAnd( geomButtOrOver( e946g0 geomSize( geomGetLength( dve_perp  0.1 < keep < 70.0 ) 0.1 ) ) chipedge )
   errorLayer( e946g1                  "GR946g: DV pad length (perp to CHIPEDGE) >= 70.000 um." )
   errorLayer( err946g                 "GR946g: DV pad length (perp to CHIPEDGE) >= 70.000 um.")

  );END IF

 ;Rule 948
   err948b1= geomAndNot( dvpad geomOr( am ma ml) )
   err948c = geomAndNot( geomOutside( tvpad padfiltr ) mz )
   drc( geomOr( am ma ml) dvpad enc < 3.00 withSingularPoint "GR948b1: DV terminal Pad must be within LASTMETAL >= 3.00 um.")
   drc( mz tvpad enc < 3.00 withSingularPoint                "GR948c: TV terminal Pad must be within MZ >= 3.00 um.")
   errorLayer( err948b1                                      "GR948b1: DV terminal Pad not within last metal found!")
   errorLayer( err948c                                       "GR948c: TV terminal Pad not within MZ metal found!")

 if( avSwitch( "CHECK_RECOMMENDED") then
  ;Rule 948cR
   drc( mz tv_in_padf enc < 1.50  withSingularPoint "GR948cR: TV pad within MZ >= 1.50um.")
   err948cr = geomAndNot( tv_in_padf mz )
   errorLayer( err948cr               "GR948cR: ( TV covered by PADFILTR ) outside MZ found!!")
   )

 ;Rule 951 - checked above with 942b

 ;Rule 951c - checked above with 942c

 ;Rule 953 (NOT CHECKED IN THIS DECK)

 ;Rule 956
   dvp_x300     = geomSize( geomAnd( dvpad       geomOr( LM0MZ LM0ML ) ) 3.0 )
   tvinpf_x300  = geomSize(          tv_in_padf                          3.0 )
   tvoutpf_x300 = geomSize(          tv_out_padf                         3.0 )

   foreach( level '( m2 m3 m4 m5 )
     let( ( errMsg956 errMsg956a errMsg956r errMsg956c1 errMsg956c1r errMsg956c2r err956 err956r err956c1 err956c1r err956c2r err956a )
       err956   = strcat( "err956_"   level )
       err956a  = strcat( "err956a_"  level )
       err956c1 = strcat( "err956c1_" level )
       err956   = geomWidth( geomAnd( eval( level ) dvp_x300     ) keep > 8.40 )
       err956a  = geomHoles( geomAnd( eval( level ) dvp_x300     ) innermost)
       err956c1 = geomWidth( geomAnd( eval( level ) tvoutpf_x300 ) keep > 8.40 )
       sprintf( errMsg956   "GR956: %s width over ( DV by 3.0) <= 8.40um." upperCase(level) )
       sprintf( errMsg956a  "GR956a: %s enclosed area under ( DV by 3.0) found!!" upperCase(level) )
       sprintf( errMsg956c1 "GR956c1: %s width over ( TV pad by 3.0) <= 8.40um." upperCase(level) )
       errorLayer( geomAnd( err956           LM0ML        ) errMsg956   )
       errorLayer( geomAnd( err956c1 geomOr( LM0MZ LM0ML )) errMsg956c1 )
       errorLayer( geomAnd( err956a          LM0ML        ) errMsg956a  )
       if( avSwitch( "CHECK_RECOMMENDED" ) then
         err956r   = strcat( "err956r_"   level )
         err956c1r = strcat( "err956c1r_" level )
         err956c2r = strcat( "err956c2r_" level )
         err956r   = geomWidth( geomAnd( eval( level ) dvp_x300      ) keep > 5.880 )
         err956c1r = geomWidth( geomAnd( eval( level ) tvoutpf_x300 ) keep > 5.880 )
         err956c2r = geomWidth( geomAnd( eval( level ) tvinpf_x300  ) keep > 10.00 )
         sprintf( errMsg956r    "GR956R: %s width over DVpad( +3.0) <= 5.880um." upperCase(level) )
         sprintf( errMsg956c1r  "GR956c1R: %s width over TVpad(+3.0) <= 5.880um." upperCase(level) )
         sprintf( errMsg956c2r  "GR956c2R: %s width over (TV in PADFILTRT)(+3.0) <= 10.00um." upperCase(level) )
         errorLayer( geomAnd( err956r   geomOr( LM0ML LM0MZ )) errMsg956r   )
         errorLayer( geomAnd( err956c1r geomOr( LM0ML LM0MZ )) errMsg956c1r )
         errorLayer( geomAnd( err956c2r geomOr( LM0ML LM0MZ )) errMsg956c2r )
       );EndRecommended
     );End Let
   );End foreach

; ;Rule 956x
  e1sx_957 = geomAnd( e1 geomSize( geomButtOrOver( dv  ma) 3.0 ) )
;  errorLayer( geomWidth( e1sx_957 keep > 50.00 )  "GR956e: (E1 over (DV touching (MA/LD)) sized by 3.0 um) width <= 50.00um.")
;  err956f = geomHoles( geomAnd( e1 geomSize( dv 3.0 ) ) innermost )
;  errorLayer( err956f  "GR956f: E1 enclosed area under (DV sized by 3.0 um) found!!")
;
; ;Rule 957E1Sx
;  drcTable( e1sx_957
;       ( width >  0.01 sepNotch < 3.00  shielded sepError( out1  "GR957E1S1: (E1 over (DV +3.0 )) to (E1 over (DV +3.0 )) space >= 3.00 um." ) )
;       ( width >  2.00 sepNotch < 4.50  shielded sepError( out2  "GR957E1S2: (E1 over (DV +3.0 ))(>2.00) to (E1 over (DV +3.0 )) space >= 4.50 um." ) )
;       ( width >  3.00 sepNotch < 6.00  shielded sepError( out3  "GR957E1S3: (E1 over (DV +3.0 ))(>3.00) to (E1 over (DV +3.0 )) space >= 6.00 um." ) )
;       ( width >  4.00 sepNotch < 7.50  shielded sepError( out4  "GR957E1S4: (E1 over (DV +3.0 ))(>4.00) to (E1 over (DV +3.0 )) space >= 7.50 um." ) )
;       ( width >  5.00 sepNotch < 9.00  shielded sepError( out5  "GR957E1S5: (E1 over (DV +3.0 ))(>5.00) to (E1 over (DV +3.0 )) space >= 9.00 um." ) )
;       ( width >  6.00 sepNotch < 10.50 shielded sepError( out6  "GR957E1S6: (E1 over (DV +3.0 ))(>6.00) to (E1 over (DV +3.0 )) space >= 10.50 um.") )
;       ( width >  7.00 sepNotch < 12.00 shielded sepError( out7  "GR957E1S7: (E1 over (DV +3.0 ))(>7.00) to (E1 over (DV +3.0 )) space >= 12.00 um.") )
;  );End of drcTable - 957E1Sx

 ;Rule 957
  foreach( level '( m2 m3 m4 m5 )
     let(( errLay err957 errMsg957 )
         err957 = strcat( "err_" level )
         errLay = strcat( level "_ovr_dv300" )
         errLay = geomAnd( eval(level) dvp_x300 )
         sprintf( errMsg957   "GR957:  ( %s(>5.88) ) over (DV + 3.0) to %s space >= 1.60 um." upperCase(level) upperCase(level) )
         drcTable( errLay
             ( width > 5.88 sepNotch < 1.60 withSingularPoint shielded sepOutput( err957 ))
         );End of drcTable - Mx fat gen
         errorLayer( geomAnd( geomAndNot( err957 logobnd ) geomOr( LM0ML LM0MZ )) errMsg957 )
     );End let
  );End foreach

 ;Rule 957c
  tvpad_x300 = geomSize( tvpad 3.0 )
  foreach( level '( m2 m3 m4 m5 )
     let(( errLay957c err957c errMsg957c )
         err957c = strcat( "errc_" level )
         errLay957c = strcat( level "_ovr_tv300" )
         errLay957c = geomAnd( eval(level) tvpad_x300 )
         sprintf( errMsg957c    "GR957c: ( %s (> 5.88)) ovr (TV by 0.30) space to %s >= 1.60um." upperCase(level) upperCase(level) )
         drcTable( errLay957c
             ( width > 5.88 sepNotch < 1.60 withSingularPoint shielded sepOutput( err957c))
         );End of drcTable - M1 fat gen
         errorLayer( geomAnd( geomAndNot( err957c logobnd ) geomOr( LM0ML LM0MZ )) errMsg957c )
     );End let
  );End foreach


 ;C4LV FOUND WHEN WIREBOND RULES ARE RUN
   errorLayer( c4lv  "ERROR: C4LV SHAPES FOUND! - PLEASE PICK A C4 SWITCH AND RERUN THE DRC CHECK")

);END of WIREBOND RULES


;STAGGERED WIREBOND RULES (NOT CHECKED)


;BONDPAD RULES
 ;Rule BONDPAD1 (CANNOT CHECK TO 1 GRID POINT DUE TO 45's ON C4 PADS)
   lm_pad = geomOverlap( lastmetal iopad )
   drc( bondpad lm_pad enc < 0.092        "GRBONDPAD1: BONDPAD overlap past LASTMETAL >= 0.100 um.")

 ;Rule BONDPAD3
   pc_ovr_nohr = geomAnd( pc nohr )
   lm_pdf    = geomAnd( lastmetal bondpad )
  if( avSwitch( "HIRESSUB") then
   errbndpd3_hr = geomAndNot( lm_pdf geomOr( chip_not_nohr pc ) )
   drc( chip_not_nohr lm_pdf enc < 4.90 withSingularPoint       "GRBONDPAD3_HR: LASTMETAL(over BONDPAD) must be within ( CHIPEDGE not NOHR )  >= 4.900 um.")
   drc( pc lm_pdf enc < 4.90 withSingularPoint                  "GRBONDPAD3_HR: LASTMETAL(over BONDPAD) must be within PC >= 4.900 um.")
   errorLayer( errbndpd3_hr                                     "GRBONDPAD3_HR: LASTMETAL(over BONDPAD) not within ((CHIPEDGE not NOHR) or PC ) found!")
  if( avSwitch( "CHECK_RECOMMENDED") then
   errbondpad4bR = geomOverlap( lm_pdf geomSize( pc_ovr_nohr 0.01 ))
   errorLayer( errbondpad4bR                                    "GRBONDPAD4bR: LASTMETAL(over BONDPAD) touching (PC over NOHR) found!")
  )
  else
   errbndpd3 = geomAndNot( lm_pdf geomOr( bb pc ) )
   drc( bb lm_pdf enc < 4.90 withSingularPoint                  "GRBONDPAD3: LASTMETAL(over BONDPAD) must be within BB >= 4.900 um.")
   drc( pc lm_pdf enc < 4.90 withSingularPoint                  "GRBONDPAD3: LASTMETAL(over BONDPAD) must be within PC >= 4.900 um.")
   errorLayer( errbndpd3                                        "GRBONDPAD3: LASTMETAL(over BONDPAD) not within (BB or PC) found!")
  )
 ;Rule BONDPAD4
   errbndpd4bp = geomOr( geomButtOrOver( lm_pdf bp ) geomOverlap( lm_pdf geomAnd( geomSize( bp 0.01 ) lm_pdf )))
   errbndpd4e1 = geomOr( geomButtOrOver( lm_pdf e1 ) geomOverlap( lm_pdf geomAnd( geomSize( e1 0.01 ) lm_pdf )))
   errbndpd4k1 = geomOr( geomButtOrOver( lm_pdf k1 ) geomOverlap( lm_pdf geomAnd( geomSize( k1 0.01 ) lm_pdf )))
   errbndpd4m1 = geomOr( geomButtOrOver( lm_pdf m1 ) geomOverlap( lm_pdf geomAnd( geomSize( m1 0.01 ) lm_pdf )))
   errbndpd4m2 = geomOr( geomButtOrOver( lm_pdf m2 ) geomOverlap( lm_pdf geomAnd( geomSize( m2 0.01 ) lm_pdf )))
   errbndpd4m3 = geomOr( geomButtOrOver( lm_pdf m3 ) geomOverlap( lm_pdf geomAnd( geomSize( m3 0.01 ) lm_pdf )))
   errbndpd4m4 = geomOr( geomButtOrOver( lm_pdf m4 ) geomOverlap( lm_pdf geomAnd( geomSize( m4 0.01 ) lm_pdf )))
   errbndpd4m5 = geomOr( geomButtOrOver( lm_pdf m5 ) geomOverlap( lm_pdf geomAnd( geomSize( m5 0.01 ) lm_pdf )))
   errbndpd4mt = geomOr( geomButtOrOver( lm_pdf mt ) geomOverlap( lm_pdf geomAnd( geomSize( mt 0.01 ) lm_pdf )))
   errbndpd4nw = geomOr( geomButtOrOver( lm_pdf nw ) geomOverlap( lm_pdf geomAnd( geomSize( nw 0.01 ) lm_pdf )))
   errbndpd4rx = geomOr( geomButtOrOver( lm_pdf rx ) geomOverlap( lm_pdf geomAnd( geomSize( rx 0.01 ) lm_pdf )))
   errbndpd4ns = geomOr( geomButtOrOver( lm_pdf ns ) geomOverlap( lm_pdf geomAnd( geomSize( ns 0.01 ) lm_pdf )))
   drc( lm_pdf bp    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to BP space >= 4.900 um.")
   drc( lm_pdf e1    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to E1 space >= 4.900 um.")
   drc( lm_pdf k1    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to K1 space >= 4.900 um.")
   drc( lm_pdf m1    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to M1 space >= 4.900 um.")
   drc( lm_pdf m2    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to M2 space >= 4.900 um.")
   drc( lm_pdf m3    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to M3 space >= 4.900 um.")
   drc( lm_pdf m4    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to M4 space >= 4.900 um.")
   drc( lm_pdf m5    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to M5 space >= 4.900 um.")
   drc( lm_pdf mt    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to MT space >= 4.900 um.")
   drc( lm_pdf nw    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to NW space >= 4.900 um.")
   drc( lm_pdf pc    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to PC space >= 4.900 um.")
   drc( lm_pdf rx    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to RX space >= 4.900 um.")
   drc( lm_pdf ns    0 < sep < 4.90        "GRBONDPAD4: LASTMETAL(over BONDPAD) to NS space >= 4.900 um.")
   errorLayer( errbndpd4bp                 "GRBONDPAD4: LASTMETAL(over BONDPAD) touching BP found!")
   errorLayer( errbndpd4e1                 "GRBONDPAD4: LASTMETAL(over BONDPAD) touching E1 found!")
   errorLayer( errbndpd4k1                 "GRBONDPAD4: LASTMETAL(over BONDPAD) touching K1 found!")
   errorLayer( errbndpd4m1                 "GRBONDPAD4: LASTMETAL(over BONDPAD) touching M1 found!")
   errorLayer( errbndpd4m2                 "GRBONDPAD4: LASTMETAL(over BONDPAD) touching M2 found!")
   errorLayer( errbndpd4m3                 "GRBONDPAD4: LASTMETAL(over BONDPAD) touching M3 found!")
   errorLayer( errbndpd4m4                 "GRBONDPAD4: LASTMETAL(over BONDPAD) touching M4 found!")
   errorLayer( errbndpd4m5                 "GRBONDPAD4: LASTMETAL(over BONDPAD) touching M5 found!")
   errorLayer( errbndpd4mt                 "GRBONDPAD4: LASTMETAL(over BONDPAD) touching MT found!")
   errorLayer( errbndpd4nw                 "GRBONDPAD4: LASTMETAL(over BONDPAD) touching NW found!")
   errorLayer( errbndpd4rx                 "GRBONDPAD4: LASTMETAL(over BONDPAD) touching RX found!")
   errorLayer( errbndpd4ns                 "GRBONDPAD4: LASTMETAL(over BONDPAD) touching NS found!")

 if( avSwitch("HIRESSUB") then
   drc( nohr bondpad enc < 10.0 withSingularPoint                       "GRBONDPAD8: BONDPAD within NOHR >= 10.0um.")
   drc( chip_not_nohr bondpad enc < 10.0  withSingularPoint             "GRBONDPAD8: BONDPAD within (CHIPEDGE not over NOHR) >= 10.00 um.")
   drc( lm_pdf ti sep < 4.90  withSingularPoint                         "GRBONDPAD9: LASTMETAL(over BONDPAD) to TI space >= 4.90um.")
   drc( lm_pdf geomAndNot( pc nohr ) sep < 4.90   withSingularPoint     "GRBONDPAD9: LASTMETAL(over BONDPAD) to ( PC not over NOHR ) space >= 4.90um.")
   drc( lm_pdf bb sep < 4.90  withSingularPoint                         "GRBONDPAD9: LASTMETAL(over BONDPAD) to BB space >= 4.90um.")
   errbondpad9 =  geomAnd( lm_pdf geomOr( bb ti geomAndNot( pc nohr )))
   errorLayer( errbondpad9                                              "GRBONDPAD9: LASTMETAL(over BONDPAD) touching ( BB , TI , ( PC not over NOHR) ) found!!")
  )

;DUAL I/O PAD WARNING STATEMENT
   c4_via   = geomEnclose( bkgnd geomAnd( iopad c4lv ) )
   wb_via   = geomEnclose( bkgnd geomAndNot( iopad c4lv ) )
   dual_pad = geomAnd( c4_via wb_via )
   errorLayer( dual_pad "WARNING: YOU HAVE BOTH C4 AND WIREBOND PADS IN THIS DESIGN")


  ; mz_exists = geomEnclose( bkgnd mz )
  ; tv_exists = geomEnclose( bkgnd tv )
   noibmcrackstop_exists = geomEnclose( bkgnd noibmcrackstop )
   cupillar_exists = geomEnclose( bkgnd cupillar )
   cupillar_tch_mlmz = geomEnclose( cupillar_exists geomOverlap( chipedge geomOr( ml mz ) ) )

if( !avSwitch("UNQUAL_FEATURE_OFF") then

 ;Rule  BIPOLAR0
   bipolar_exists = geomEnclose( bkgnd bipolar )
  ;errorLayer( bipolar_exists  "GRBIPOLAR0: UNQUALIFIED_FEATURE: BIPOLAR level found in design. Contact your IBM technical representative.")

 ;Rule TV0
  ; errorLayer( tv_exists  "GRTV0_UNQUALIFIED_FEATURE: TV level found in design. Contact your IBM technical representative.")

 ;Rule MZ0
  ; errorLayer( mz_exists  "GRMZ0_UNQUALIFIED_FEATURE: MZ level found in design. Contact your IBM technical representative.")

 ;Rule PILLAR00
   errorLayer( cupillar_tch_mlmz  "GRPILLAR00: UNQUALIFIED_FEATURE: CUPILLAR level found in design. Contact your IBM technical representative.")

 ;Rule LEG_NOCS01
   errorLayer( noibmcrackstop_exists  "GRLEG_NOCS01: UNQUALIFIED_FEATURE: NOIBMCRACKSTOP level found in design. Contact your IBM technical representative.")

); end unqualified feature off

 ;Rule LEG_NOCS02
  err_nocs02 = geomAnd( geomOr( geomAndNot( geomSize( chipedge -0.04 ) noibmcrackstop ) geomAndNot( geomSize( noibmcrackstop -0.04 ) chipedge ) ) noibmcrackstop_exists )
  errorLayer( err_nocs02      "GRLEG_NOCS02: If NOIBMCRACKSTOP exists, NOIBMCRACKSTOP must be drawn exactly coincident with CHIPEDGE.")

 ;Rule PILLAR01
  err_pillar01 = geomAnd( geomOr( geomAndNot( geomSize( ChipEdge -0.04 ) cupillar ) geomAndNot( geomSize( cupillar -0.04 ) ChipEdge ) ) cupillar_exists )
  errorLayer( err_pillar01      "GRPILLAR01: If CUPILLAR exists, CUPILLAR must be drawn exactly coincident with {GUARDEDGE,(CHIPEDGE not touching GUARDEDGE)}")

; ;Rule PILLAR02
;   errorLayer( geomAvoiding( cupillar noplymd )  "GRPILLAR02: CUPILLAR not touching NOPLYMD found!!")

;DUAL I/O PAD WARNING STATEMENT

   mpw_pad = geomEnclose( geomEnclose( bkgnd c4_via ) cupillar )
   errorLayer( mpw_pad "NOTE: YOU HAVE BOTH C4 AND CUPILLAR PADS IN THIS DESIGN. PLEASE CONTACT IBM TECHNICAL SUPPORT FOR MULTI-PROJECT WAFER DESIGN!")

;MxFILL RULES.
 ;Rule F20
  ;VIA BARS DISSALLOWED OUTSIDE GUARD RING BY GR558.
   m2fill = geomOutside( m2 geomOr( v1_all v2_all logobnd ) )
   m3fill = geomOutside( m3 geomOr( v2_all v3_all logobnd ) )
   m4fill = geomOutside( m4 geomOr( v3_all v4_all logobnd ) )
   m5fill = geomOutside( m5 geomOr( v4_all v5_all logobnd ) )
   mtfill = geomOutside( mt geomOr( ft_all logobnd geomAnd( v1_all LM1 ) geomAnd( v2_all LM2 ) geomAnd( v3_all LM3 ) geomAnd( v4_all LM4 ) geomAnd( v5_all LM5 ) ) )
   e1fill = geomOutside( e1 geomOr( ft_all e2 logobnd  ) )
   drc( m2fill area > 144.00               "GRF20: M2FILL area <= 144.00 sq. um.")
   drc( m3fill area > 144.00               "GRF20: M3FILL area <= 144.00 sq. um.")
   drc( m4fill area > 144.00               "GRF20: M4FILL area <= 144.00 sq. um.")
   drc( m5fill area > 144.00               "GRF20: M5FILL area <= 144.00 sq. um.")
   drc( mtfill area > 144.00               "GRF20: MTFILL area <= 144.00 sq. um.")
   drc( e1fill area > 144.00               "GRF20: E1FILL area <= 144.00 sq. um.")


;DSRAM WAIVER LAYOUT RULES
 if( avSwitch( "DSRAM" ) then
 ;Rule 1 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   err1       = geomOutside( drc( ngate width < 0.18 ) geomOr( dsram sram_hvt sram_dual sram_std ) )
   err1_dsram = geomButtOrOver( drc( ngate width < 0.06 ) geomOr( dsram sram_hvt ) )
   err1_sram_dual = geomButtOrOver( drc( ngate width < 0.08 ) sram_dual )
   err1_sram_std  = geomButtOrOver( drc( ngate width < 0.10 ) sram_std  )
   errorLayer( err1                     "GR1: (PC over RX)(NFET) width >=  0.18 um.")
   errorLayer( err1_dsram               "GR1: (PC over RX)(NFET) width >=  0.06 um.(DSRAM or SRAM_HVT).")
   errorLayer( err1_sram_dual           "GR1: (PC over RX)(NFET) width >=  0.08 um.(Dual Port Cell).")
   errorLayer( err1_sram_std            "GR1: (PC over RX)(NFET) width >=  0.10 um.(SRAM_STD).")

 ;Rule 2 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   err2       = geomOutside( drc( pgate width < 0.18 ) geomOr( dsram sram_hvt sram_dual sram_std ) )
   err2_dsram = geomButtOrOver( drc( pgate width < 0.06 ) geomOr( dsram sram_hvt sram_dual ) )
   err2_sram_std  = geomButtOrOver( drc( pgate width < 0.10 ) sram_std  )
   errorLayer( err2                     "GR2: (PC over RX)(PFET) width >=  0.18 um.")
   errorLayer( err2_dsram               "GR2: (PC over RX)(PFET) width >=  0.06 um.(DSRAM, SRAM_HVT, Dual Port Cell).")
   errorLayer( err2_sram_std            "GR2: (PC over RX)(PFET) width >=  0.10 um.(SRAM_STD).")

 ;Rule 11 (DSRAM, SRAM_HVT, Dual Port Cell)
   err11_dsram = geomAnd( pgate drc( pc_near_gt sep < 0.16 ) )
   err11       = geomAnd( pgate drc( geomOutside( pc_near_gt geomOr( dsram sram_hvt sram_dual ) ) sep < 0.22 ) )
   errorLayer( err11_dsram                    "GR11: RX width under PC for PFET device >= 0.160 um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   errorLayer( err11                          "GR11: RX width under PC for PFET device >= 0.220 um.")

 ;Rule 50 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   rx_out_dsram = geomOutside( rx geomOr( dsram sram_hvt sram_dual sram_std ) )

   err50       = geomOutside( drc( rx  width < 0.22 ) geomOr( dsram sram_hvt sram_dual sram_std ) )
   err50_dsram = geomButtOrOver( drc( rx  width < 0.16 ) geomOr( dsram sram_hvt sram_dual ) )
   err50_sram_std  = geomButtOrOver( drc( rx  width < 0.18 ) sram_std  )

   errorLayer( err50                       "GR50: RX width (min) >= 0.220 um.")
   errorLayer( err50_dsram                 "GR50: RX width (min) >= 0.160 um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   errorLayer( err50_sram_std              "GR50: RX width (min) >= 0.180 um.(SRAM_STD)")
   err50b = geomWidth( rx keep > 200 )
   errorLayer( err50b                      "GR50b: RX width (max) <= 200.000 um.")

 ;Rule 52 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   drc( rx             sep < 0.16              "GR52: RX space >= 0.160 um.(DSRAM or SRAM_HVT or SRAM_STD)")
   drc( rx_out_dsram   sep < 0.26              "GR52: RX space >= 0.260 um.")
   drc( rx           notch < 0.16              "GR52: RX notch >= 0.160 um.(DSRAM or SRAM_HVT or SRAM_STD)")
   drc( rx_out_dsram notch < 0.26              "GR52: RX notch >= 0.260 um.")


 ;Rule 100 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   pc_not_rx = geomAndNot( pc rx )
   pc_out_dsram        = geomOutside( pc_not_rx geomOr( dsram sram_hvt sram_dual sram_std ) )
   pc_in_sram_hvt_dual = geomButtOrOver( pc_not_rx geomOr( sram_hvt sram_dual sram_std ) )
   pc_in_dsram         = geomButtOrOver( pc_not_rx dsram)
   drc( pc_in_dsram  width < 0.10              "GR100: PC width >= 0.100 um.(DSRAM)")
   drc( pc_in_sram_hvt_dual width < 0.08       "GR100: PC width >= 0.080 um.(SRAM_HVT, Dual Port Cell, SRAM_STD)")
   drc( pc_out_dsram width < 0.18              "GR100: PC width >= 0.180 um.")

 ;Rule 102 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   pcw_out_sram = geomOutside( pc geomOr( dsram sram_hvt sram_dual sram_std) )
   pcw_sram     = geomOverlap( pc geomOr( dsram sram_hvt sram_dual sram_std) )
   pc_end_006  = geomSize( geomLineEnd( pcw_out_sram 0.18 legs(0.18) ) -0.06)
   pc_not_end  = geomAndNot( pcw_out_sram  pc_end_006 )
   pc_end_006_sr  = geomSize( geomLineEnd( pcw_sram 0.18 legs(0.18) ) -0.06)
   pc_not_end_sr  = geomAndNot( pcw_sram  pc_end_006 )

   pc_notend_notend =   geomAndNot( geomAndNot( drc( pc_not_end  sep < 0.24 withSingularPoint) pc) rx); (andnot pc) to avoid false errors
   pc_notend_notch  =   geomAndNot( drc( pc_not_end   notch < 0.24 ) pc );andnot pc to avoid false errors
   errorLayer(  pc_notend_notend  "GR102a: (PC(NOT END) to PC(NOT END) space) (not over RX) >= 0.240 um.")
   errorLayer(  pc_notend_notch   "GR102a: (PC(NOT END) to PC(NOT END) notch) (not over RX) >= 0.240 um.")

   pc_end_notend =   geomAndNot( geomAndNot( drc( pc_end_006 pc_not_end  sep < 0.18 withSingularPoint) pc) rx); (andnot pc) to avoid false errors
   err_102b_1    =   geomButtOrOver( pc_end_notend pc keep >= 2) ;to avoid false errors.
   pc_end_end    =   geomAndNot( geomAndNot( drc( pc_end_006   sep < 0.18 withSingularPoint) pc) rx)
   err_102b_2    =   geomButtOrOver( pc_end_end pc keep >= 2)
   errorLayer( err_102b_1       "GR102b: (PCEND to PC space) (not over RX)>= 0.180 um.")
   errorLayer( err_102b_2       "GR102b: (PCEND to PCEND space) (not over RX) >= 0.180 um.")

   pc_notend_notend_sr =   geomAndNot( geomAndNot( drc( pc_not_end_sr  sep < 0.14 withSingularPoint) pc) rx); (andnot pc) to avoid false errors
   pc_notend_notch_sr  =   geomAndNot( drc( pc_not_end_sr   notch < 0.14 ) pc );andnot pc to avoid false errors
   errorLayer(  pc_notend_notend_sr  "GR102a: (PC(NOT END) to PC(NOT END) space) (not over RX) >= 0.140 um.(DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)")
   errorLayer(  pc_notend_notch_sr   "GR102a: (PC(NOT END) to PC(NOT END) notch) (not over RX) >= 0.140 um.(DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)")

   pc_end_notend_sr =   geomAndNot( geomAndNot( drc( pc_end_006_sr pc_not_end_sr  sep < 0.14 withSingularPoint) pc) rx); (andnot pc) to avoid false errors
   err_102b_1_sr    =   geomButtOrOver( pc_end_notend_sr pc keep >= 2) ;to avoid false errors.
   pc_end_end_sr    =   geomAndNot( geomAndNot( drc( pc_end_006_sr   sep < 0.14 withSingularPoint) pc) rx)
   err_102b_2_sr    =   geomButtOrOver( pc_end_end_sr pc keep >= 2)
   errorLayer( err_102b_1_sr       "GR102b: (PCEND to PC space) (not over RX)>= 0.140 um.(DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)")
   errorLayer( err_102b_2_sr       "GR102b: (PCEND to PCEND space) (not over RX) >= 0.140 um.(DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)")


 ;Rule 104 (DSRAM, SRAM_HVT, Dual Port Cell) (GATE NOTCH IS COVERED BY 120c)
   err104_sdra = geomInside( drc( ngate sep < 0.22 ) rx )
   err104_sdrb = geomInside( drc( pgate sep < 0.22 ) rx )
   err104a    = geomOutside( geomInside( drc( ngate sep < 0.24 ) rx ) geomOr( dsram sram_hvt sram_dual ) )
   err104b    = geomOutside( geomInside( drc( pgate sep < 0.24 ) rx ) geomOr( dsram sram_hvt sram_dual ) )
   errorLayer( err104_sdra                     "GR104a: PC(over RX) space >= 0.220 um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   errorLayer( err104a                         "GR104a: PC(over RX) space >= 0.240 um.")
   errorLayer( err104_sdrb                     "GR104b: PC(over RX) space >= 0.220 um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   errorLayer( err104b                         "GR104b: PC(over RX) space >= 0.240 um.")

 ;Rule 110 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   gate_45          = geomGetAngledEdge( gate keep == 45 )
   gate45_edge      = geomSize( geomGetEdge( gate_45 over bkgnd ) 0.28 )
   gate45_edge_sdr  = geomSize( geomGetEdge( geomAnd( gate_45 geomOr( dsram sram_hvt ) ) over bkgnd ) 0.02 )
   gate45_edge_dual = geomSize( geomGetEdge( geomAnd( gate_45 sram_dual ) over bkgnd ) 0.26 )
   gate45_edge_std  = geomSize( geomGetEdge( geomAnd( gate_45 sram_std  ) over bkgnd ) 0.24 )

   err110_past      = geomOutside( drc( rx pc 0 < enc < 0.28 opposite parallel ) geomOr( dsram sram_hvt sram_dual sram_std ) )
   err110_past_sdr  = geomButtOrOver( drc( rx pc 0 < enc < 0.02 opposite parallel ) geomOr( dsram sram_hvt ) )
   err110_past_dual = geomButtOrOver( drc( rx pc 0 < enc < 0.26 opposite parallel ) sram_dual )
   err110_past_std  = geomButtOrOver( drc( rx pc 0 < enc < 0.24 opposite parallel ) sram_std )

   err110_coin      = geomGetEdge( rx coincident pc )
   pc_not_rx        = geomAndNot( pc rx)
   err110_45        = geomAvoiding( geomAndNot(gate45_edge rx) pc_not_rx )
   err110_45_sdr    = geomAvoiding( geomAndNot(gate45_edge_sdr rx) pc_not_rx )
   err110_45_dual   = geomAvoiding( geomAndNot(gate45_edge_dual rx) pc_not_rx )
   err110_45_std    = geomAvoiding( geomAndNot(gate45_edge_std  rx) pc_not_rx )

   ;err110_45       = geomAndNot( geomAndNot( gate45_edge rx ) pc )
   ;err110_45_sdr   = geomAndNot( geomAndNot( gate45_edge_sdr rx ) pc )

   errorLayer( err110_past_sdr                "GR110: RX overlap past PC >= 0.020 um.(DSRAM or SRAM_HVT)")
   errorLayer( err110_past_dual               "GR110: RX overlap past PC >= 0.020 um.(Dual Port Cell)")
   errorLayer( err110_past_std                "GR110: RX overlap past PC >= 0.024 um.(SRAM_STD)")
   errorLayer( err110_past                    "GR110: RX overlap past PC >= 0.280 um.")
   errorLayer( err110_coin                    "GR110: RX overlap past PC >= 0.280 um.(coincident)")
   errorLayer( err110_45_sdr                  "GR110: RX overlap past PC >= 0.020 um.(45 deg. gate)(DSRAM or SRAM_HVT)")
   errorLayer( err110_45_dual                 "GR110: RX overlap past PC >= 0.020 um.(45 deg. gate)(Dual Port Cell)")
   errorLayer( err110_45_std                  "GR110: RX overlap past PC >= 0.024 um.(45 deg. gate)(SRAM_STD)")

   errorLayer( err110_45                      "GR110: RX overlap past PC >= 0.280 um.(45 deg. gate)")

 ;Rule 111 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   err111_past_dsr = geomButtOrOver( drc( pc gate 0 < enc < 0.12 ) dsram )
   err111_past_srhvt_dual = geomButtOrOver( drc( pc gate 0 < enc < 0.08 ) geomOr( sram_hvt sram_dual sram_std) )
   err111_past     = geomOutside( drc( pc gate 0 < enc < 0.24 ) geomOr( dsram sram_hvt sram_dual sram_std) )
   err111_coin     = geomGetEdge( pc coincident rx )
   errorLayer( err111_past_dsr                   "GR111: PC overlap past RX >= 0.120 um.(DSRAM)")
   errorLayer( err111_past_srhvt_dual            "GR111: PC overlap past RX >= 0.080 um.(SRAM_HVT, Dual Port Cell, SRAM_STD)")
   errorLayer( err111_past                       "GR111: PC overlap past RX >= 0.240 um.")
   errorLayer( err111_coin                       "GR111: PC overlap past RX >= 0.240 um.(coincident)")

 ;Rule 112 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   rxfet_crnr_x008  = geomSize( rxfet_corner_in 0.08 )
   gt_near_rxcornr  = drc( gate rxfet_corner_in sep < 0.08 figa )
   gtnrxc_edge_x030 = geomSize( geomGetEdge( gt_near_rxcornr coincident rx ) 0.30 )
   err112           = geomOutside( geomOverlap( geomEnclose( gtnrxc_edge_x030 geomAndNot( gtnrxc_edge_x030 pc ) ) rxfet_crnr_x008 ) geomOr( dsram sram_hvt sram_dual sram_std ) ) ;getaAvril

  gtnrxc_edges = geomGetEdge( gt_near_rxcornr inside rx )
  gtnrxc_edges_ok = geomGetAdjacentEdge( gt_near_rxcornr gtnrxc_edges )
  gtnrxc_edges_ok_x024 = geomSize( gtnrxc_edges_ok  0.24 )
  gtnrxc_edge_ok_x024_not_pc = geomAndNot( geomOverlap( gtnrxc_edges_ok_x024 rxfet_crnr_x008 )  pc )
  err112_dsr       = geomAnd( gtnrxc_edge_ok_x024_not_pc geomOr( dsram sram_hvt sram_dual ) )

  gtnrxc_edges_ok_x026 = geomSize( gtnrxc_edges_ok  0.26 )
  gtnrxc_edge_ok_x026_not_pc = geomAndNot( geomOverlap( gtnrxc_edges_ok_x026 rxfet_crnr_x008 )  pc )
  err112_std       = geomAnd( gtnrxc_edge_ok_x026_not_pc sram_std )

   errorLayer( err112_dsr                        "GR112: PC overlap past RX (within 0.08 of RX corner) >= 0.240 um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   errorLayer( err112                            "GR112: PC overlap past RX (within 0.08 of RX corner) >= 0.300 um.")
   errorLayer( err112_std                        "GR112: PC overlap past RX (within 0.08 of RX corner) >= 0.260 um.(SRAM_STD)")

 ;Rule 113 (DSRAM, SRAM_HVT, Dual Port Cell) (NOT CHECKED: VALUE FOR PC TO RX SPACE IS 0.000 um.)

 ;Rule 114 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   err114_dsram    = drc( pc rxfet_corner_in  0 < sep < 0.020 opposite )
   err114          = geomOutside( drc( pc rxfet_corner_in  0 < sep < 0.060 opposite ) geomOr( dsram sram_hvt sram_dual sram_std) )
   err114_butt     = geomButting( pc rxfet_corner_in )
   errorLayer( err114_dsram                      "GR114: PC to RX corner >= 0.020 um.(DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)")
   errorLayer( err114                            "GR114: PC to RX corner >= 0.060 um.")
   errorLayer( err114_butt                       "GR114: PC abutting RX corner found!")

 ;Rule 115 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   pc_fet          = geomOverlap( pc gate )
   pcfet_edge_in   = geomSize( geomGetEdge( pc_fet over bkgnd ) -0.02 )
   pcfet_halo_in   = geomAndNot( pc_fet geomSize( pc_fet -0.02 ) )
   pcfet_corner_in = geomAndNot( pcfet_halo_in pcfet_edge_in )
   pcfet_corner_in_115 =  geomGrowCorner( geomGetCorner( pc_fet keep == 270 concave ) 0.02 outer angleAll )
   err115          = geomOutside( drc( rx pcfet_corner_in_115  0 < sep < 0.080 opposite ) geomOr( dsram sram_hvt sram_dual sram_std) )
   err115_dsram    = drc( rx pcfet_corner_in_115  0 < sep < 0.02 opposite )
   err115_butt     = geomOutside( geomButting( rx pcfet_corner_in_115 ) geomOr( dsram sram_hvt sram_dual sram_std) )
   err115_butt_dsram     = geomButting( rx pcfet_corner_in_115 )
   errorLayer( err115                            "GR115: PC corner to RX >= 0.080 um.")
   errorLayer( err115_dsram                      "GR115: PC corner to RX >= 0.020 um(DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD) ")
   errorLayer( err115_butt                       "GR115: RX abutting PC corner found!")
   errorLayer( err115_butt_dsram                 "GR115: RX abutting PC corner found(DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)! ")


 ;Rule 119 (DSRAM, SRAM_HVT, Dual Port Cell)
   pc_corner_all       = geomGetCorner( pc angleAll )
   gate_corner_all     = geomButtOrOver( pc_corner_all gate )
   gate_corner_bbox    = geomGetBBox( gate_corner_all )
   err119_0            = geomButtOrOver( gate_corner_bbox drc( rx gate_corner_bbox enc < 0.275 ) )
   err119_0_dsram      = geomButtOrOver( gate_corner_bbox drc( rx gate_corner_bbox enc < 0.015 ) )
   err119_0_dual       = geomButtOrOver( gate_corner_bbox drc( rx gate_corner_bbox enc < 0.215 ) )
   err119_1            = geomStraddle( gate_corner_bbox rx )
   err119              = geomOutside( geomButtOrOver( gate_corner_all geomOr( err119_0 err119_1 ) ) geomOr( dsram sram_hvt sram_dual ) )
   err119_dsram        = geomButtOrOver( geomButtOrOver( gate_corner_all geomOr( err119_0_dsram err119_1 ) ) geomOr( dsram sram_hvt ) )
   err119_dual         = geomButtOrOver( geomButtOrOver( gate_corner_all geomOr( err119_0_dual err119_1 ) ) sram_dual )
   errorLayer( err119                  "GR119: PC Vertex within RX >= 0.280 um." )
   errorLayer( err119_dsram            "GR119: PC Vertex within RX >= 0.020 um.(DSRAM, SRAM_HVT)" )
   errorLayer( err119_dual             "GR119: PC Vertex within RX >= 0.220 um.(Dual Port Cell)" )

 ;Rule 203 (DSRAM, SRAM_HVT, Dual Port Cell)
   ca_out_dsram = geomOutside( ca geomOr( dsram sram_hvt sram_dual ) )
   drc( ca           sep < 0.20                "GR203a: CA space >= 0.200 um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   drc( ca_out_dsram sep < 0.24                "GR203a: CA space >= 0.240 um.")

 ;Rule 204 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD) (STRADDLE CHECKED IN GR212)
   rxnopc_out_dsram   = geomOutside( rx_not_pc geomOr( dsram sram_hvt sram_dual sram_std ) )
   rxnopc_in_sram_std = geomButtOrOver( rx_not_pc sram_std )
   rxnopc_in_dsram    = geomButtOrOver( rx_not_pc geomOr( dsram sram_hvt sram_dual ) )
   drc( rxnopc_in_dsram      ca    enc < 0.014     "GR204: CA within RX >= 0.014um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   drc( rxnopc_in_sram_std   ca    enc < 0.020     "GR204: CA within RX >= 0.020um.(SRAM_STD)")
   drc( rxnopc_out_dsram     ca    enc < 0.100     "GR204: CA within RX >= 0.100 um.")
   drc( rx               cabar enc < 0.20          "GR204a: CABAR within RX >= 0.200 um.")

 ;Rule 207 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   carx_out_dsram   = geomOutside( ca_rx geomOr( dsram sram_hvt sram_dual sram_std ) )
   carx_in_sram_std = geomButtOrOver( ca_rx sram_std )
   carx_in_dsram    = geomButtOrOver( ca_rx geomOr( dsram sram_hvt sram_dual ) )
   drc( carx_in_dsram    pc sep < 0.020           "GR207: CA(over RX) to adjacent PC >= 0.020 um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   drc( carx_in_sram_std pc sep < 0.107           "GR207: CA(over RX) to adjacent PC >= 0.107 um.(SRAM_STD)")
   drc( carx_out_dsram   pc sep < 0.160           "GR207: CA(over RX) to adjacent PC >= 0.160 um.")

 ;Rule 208 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   ca_pc            = geomAnd( ca pc )
   ca_pc_dsram      = geomButtOrOver( geomAnd( ca pc ) dsram )
   ca_pc_srhvt_dual = geomButtOrOver( geomAnd( ca pc ) geomOr( sram_hvt sram_dual sram_std ) )
   capc_out_dsram   = geomOutside( ca_pc geomOr( dsram sram_hvt sram_dual sram_std ) )
   cab_pc           = geomAnd( cabar pc )
   drc( ca_pc_dsram         rx sep < 0.14            "GR208: CA(over PC) to adjacent RX >= 0.140 um.(DSRAM)")
   drc( ca_pc_srhvt_dual    rx sep < 0.12            "GR208: CA(over PC) to adjacent RX >= 0.120 um.(SRAM_HVT, Dual Port Cell, SRAM_STD)")
   drc( capc_out_dsram      rx sep < 0.16            "GR208: CA(over PC) to adjacent RX >= 0.160 um.")

 ;Rule 209 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD) (STRADDLE CHECKED IN GR212)
  ;SINCE DSRAM VALUE IS 0.00 - GR212 WILL COVER CA WITHIN PC FOR ALL SRAM CELLS
   drc( pc_out_dsram ca    enc < 0.06           "GR209: CA within PC >= 0.060 um.")

 ;Rule 260 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   nw_out_dsram = geomOutside( nw geomOr( dsram sram_hvt sram_dual sram_std ) )
   err260       = geomStraddle( pdiff_in_nw nw )
   drc( nw           pdiff_in_nw enc < 0.36     "GR260: (RX within BP) within NW >= 0.360 um.(DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)")
   drc( nw_out_dsram pdiff_in_nw enc < 0.42     "GR260: (RX within BP) within NW >= 0.420 um.")
   errorLayer( err260                           "GR260: (RX in BP) straddling NW found!")
   nw_tch_nwfat = geomButtOrOver(nw nwfat_40u)
   err260a = geomAnd( drc(nw_tch_nwfat pdiff_in_nw enc < 0.52 withSingularPoint ) nwfat_40u )
   errorLayer( err260a "GR260a: (RX within BP) within NW(>=40.0) >= 0.520 um." )

 ;Rule 265 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   ndiff_265    = geomOutside( ndiff nwfat_4000 )
   err265 = geomOutside( drc( ndiff nw 0 < sep < 0.42 diffNet ) geomOr( dsram sram_hvt sram_dual sram_std ) )
   errorLayer( err265                                   "GR265: RX(outside BP) to adjacent NW (diff net) >= 0.420 um.")
   drc( ndiff nw                sep < 0.30 diffNet      "GR265: RX(outside BP) to adjacent NW (diff net) >= 0.300 um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   drc( ndiff_265 nwfat_4000    sep < 0.52              "GR265a: RX(outside BP) to adjacent NW(>=40.0) >= 0.520 um.")
   drc( ndiff ns                sep < 2.32 diffNet      "GR265b: RX(outside BP) to adjacent NS (diff net) >= 2.320 um.")

 ;Rule 370 (DSRAM, SRAM_HVT, Dual Port Cell)
   ngate_mosvar = geomAnd( ngate mosvar)
   err370_sdr = geomOutside( drc( ngate bp 0 < sep < 0.32 ) rx_jct_side )
   err370     = geomOutside( geomOutside( drc( ngate bp 0 < sep < 0.36 ) rx_jct_side ) geomOr( dsram sram_hvt sram_dual ) )
   err370end  = geomOverlap( geomSize( geomGetEdge( geomAndNot( ndiff nw ) over pc ) 0.23 ) bp )
   err370_1 = geomButtOrOver( bp ngate_mosvar)
   err370_2 = geomAndNot( err370 err370_1)
   err370end_2 = geomAndNot( err370end err370_1)
   err370_sdr_2 = geomAndNot( err370_sdr err370_1)
   err370b    = geomButtOrOver( gate pd )
   errorLayer( err370_sdr_2               "GR370: (PC over RX) to BP space >= 0.320 um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   errorLayer( err370_2                   "GR370: (PC over RX) to BP space >= 0.360 um.")
   errorLayer( err370end_2                "GR370: (PC over RX) to BP space (gate end)>= 0.360 um.")
   drc( gate  bb     sep < 0.50           "GR370a: (PC over RX) to BB space >= 0.500 um.")
   drc( gate  pd 0 < sep < 0.50           "GR370b: (PC over RX) to PD >= 0.500 um.")
   errorLayer( err370b                    "GR370b: (PC over RX) touching PD found!")

 ;Rule 500 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   m1_out_dsram   = geomOutside( m1 geomOr( dsram sram_hvt sram_dual sram_std) )
   m1_in_sram_std = geomButtOrOver( m1 sram_std )
   m1_in_dsram    = geomButtOrOver( m1 geomOr( dsram sram_hvt sram_dual ) )
   err500b = geomWidth( m1 keep > 35.00 )
   drc( m1_in_dsram    width < 0.16               "GR500: M1 width (min) >= 0.160 um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   drc( m1_in_sram_std width < 0.20               "GR500: M1 width (min) >= 0.200 um.(SRAM_STD)")
   drc( m1_out_dsram   width < 0.24               "GR500: M1 width (min) >= 0.240 um.")
   errorLayer( err500b                            "GR500b: M1 width (max) <= 35.000 um.")

 ;Rule 502 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   drc( m1_in_dsram      sep < 0.12               "GR502: M1 space >= 0.12  um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   drc( m1_in_dsram    notch < 0.12               "GR502: M1 notch >= 0.12  um.(DSRAM, SRAM_HVT, Dual Port Cell)")
   drc( m1_in_sram_std   sep < 0.18               "GR502: M1 space >= 0.18  um.(SRAM_STD)")
   drc( m1_in_sram_std notch < 0.18               "GR502: M1 notch >= 0.18  um.(SRAM_STD)")
   drc( m1_out_dsram     sep < 0.20               "GR502: M1 space >= 0.200 um.")
   drc( m1_out_dsram   notch < 0.20               "GR502: M1 notch >= 0.200 um.")

 ;Rule 505a (DSRAM, SRAM_HVT, Dual Port Cell)
  ;SINCE DSRAM VALUE IS 0.00 - THE AndNot WILL COVER CA WITHIN M1 FOR DSRAM CELLS
   ca_no_m1  = geomAndNot( ca    m1 )
   cab_no_m1 = geomAndNot( cabar m1 )
   drc( m1_out_dsram ca    enc < 0.02           "GR505a: CA must be within M1 >= 0.020 um.")
   errorLayer( ca_no_m1                         "GR505a: CA not within M1 found!")

 ;Rule TW260 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   pi_not_nw = geomAndNot( pi nw )
   errtw260_no_dsram = geomOutside( drc( pdiff_in_nw pi_not_nw  sep < 0.42 ) geomOr( dsram sram_hvt sram_dual sram_std ))
   errorLayer( errtw260_no_dsram  "GRTW260: ((RX over BP) over NW) to (PI not over NW) space >= 0.420 um.")
   errtw260_dsram = drc( pdiff_in_nw pi_not_nw  sep < 0.36 )
   errorLayer( errtw260_dsram  "GRTW260: ((RX over BP) over NW) to (PI not over NW) space >= 0.360 um (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD).")

 ;Rule TW265 (DSRAM, SRAM_HVT, Dual Port Cell, SRAM_STD)
   nw_pi          = geomButtOrOver( nw pi )
   nwpi_pd        = geomButtOrOver( nw_pi pdiff )
   ndiff_in_pi    = geomAnd( ndiff pi )
   ndiff_indg_tpi = geomAnd( ndiff_in_dg pi )
   errtw265_no_dsram = geomOutside( drc( ndiff_in_pi   nw_pi   sep < 0.420 ) geomOr( dsram sram_hvt sram_dual sram_std ))
   errorLayer( errtw265_no_dsram   "GRTW265: (RX(not over BP) over PI) to adjacent (NW touching PI) >= 0.420 um.")
   errtw265_dsram = drc( ndiff_in_pi   nw_pi   sep < 0.300 )
   errorLayer( errtw265_dsram      "GRTW265: (RX(not over BP) over PI) to adjacent (NW touching PI) >= 0.30 um (DSRAM, SRAM_HVT, Dual Port Cell SRAM_STD).")

 );END of DSRAM RULES


;===== 5VOLT RULES =====

 if( !avSwitch( "5V_FET" ) then
   errorLayer( tg       "WARNING: 5V_FET NOT RUN!")
 );END of !avSwitch 5V_FET

 if( avSwitch( "5V_FET" ) then
 ;RULE TGSC0
    pcrx_tgbp_nw = geomAnd( geomAnd( geomAnd( geomAnd( pc rx ) tg) bp) nw)
    scg_pcrx_tgbp_nw = geomEnclose( bkgnd geomButtOrOver( pcrx_tgbp_nw scgate) )
    err_tgsc0 = geomAnd( geomAndNot( pcrx_tgbp_nw scgate) scg_pcrx_tgbp_nw)
    errorLayer( err_tgsc0  "GRTGSC0: all ((((PC over RX) over TG) over BP) over NW) shapes must be covered by SCGATE if SCGATE touches ((((PC over RX) over TG) over BP) over NW) ")

 if( avSwitch("HIRESSUB") then
    err_tgsc0ahr = geomAndNot( pcrx_tgbp_nw scgate )
    errorLayer( err_tgsc0ahr  "GRTGSC0a_HR: SCGATE must be touched ((((PC over RX) over TG) over BP) over NW) ")
  else
    err_tgsc0a = geomAvoiding( scgate pcrx_tgbp_nw )
    errorLayer( err_tgsc0a  "GRTGSC0a: SCGATE must be touched ((((PC over RX) over TG) over BP) over NW) ")
 )

 ;RULE TGSC2
  pgate_tg = geomAndNot( geomAnd( pgate tg ) scgate)
  err_tgsc2 = geomGetEdge( pgate_tg inside rx )
  drc( err_tgsc2 width < 0.60           "GRTGSC2: (((PC over RX) not over SCGATE) over TG) width for PFET >= 0.60  um.")

  pgate_tg_scg = geomAnd( geomAnd( pgate tg ) scgate)
  err_tgsc2a = geomGetEdge( pgate_tg_scg inside rx )
  drc( err_tgsc2a width < 0.50           "GRTGSC2a: (((PC over RX) over SCGATE) over TG) width for PFET >= 0.50  um.")

  err_tgsc2b = geomOverlap( scgate geomSize( geomOr( dg bb pd op zerovt) 0.01 ))
  errorLayer( err_tgsc2b  "GRTGSC2b: SCGATE cannot touch (DG,BB,OP,PD ZEROVT)")

  err_tgsc2c = geomAndNot( scgate geomAnd( geomAnd( nw bp) tg ))
  errorLayer( err_tgsc2c  "GRTGSC2c: SCGATE must covered by all of following levels (NW,BP,TG)")

 ;RULE TGSC7
   scgate_present = geomEnclose( bkgnd scgate)
   tgsc7_err  = geomAnd( geomButtOrOver( geomButtOrOver( gate tg) bp ) scgate_present)
   tf_tgsc7   = geomAnd( geomAndNot( geomAnd( tg nw ) mosvar) scgate_present)
   err_tgsc7 = drc( tf_tgsc7 tgsc7_err enc < 1.26)
   errorLayer( err_tgsc7     "GRTGSC7: (((PC over RX) touching TG) touching BP) must be within ((TG over NW) not over MOSVAR) >= 1.26 um.")

 ;RULE TGSC18
  if( avSwitch("HIRESSUB") then
    tgsc18_err = geomAnd( geomAndNot( rx bp ) nw )
    tgsc18_errm = geomAnd( geomAndNot( rx  geomOr( bp mosvar ) ) nw)
    drc( tg tgsc18_err sep < 0.50  withSingularPoint    "GRTGSC18_HR: TG to ((RX not over BP ) over NW ) >= 0.50um.")
    errtgsc18hr = geomOverlap( tgsc18_errm geomSize( tg 0.01 ) )
    errorLayer( errtgsc18hr                             "GRTGSC18_HR: (RX not over (BP,MOSVAR) over NW) cannot touch TG.")
  else
    tgsc18_err = geomAnd( geomAnd( geomAndNot( rx  geomOr( bp mosvar ) ) nw) scgate_present)
    tgsc18_err_1 = geomButtOrOver( tgsc18_err tg)
    errorLayer( drc( tg tgsc18_err sep < 0.50  withSingularPoint)  "GRTGSC18: TG to ((RX not over (BP MOSVAR)) over NW)  >= 0.50 um.")
    errorLayer( tgsc18_err_1                     "GRTGSC18: ((RX not over BP) over NW) cannot touch TG .")
  );End of HIRESSUB

 ;RULE TG0
  dg_exists = geomEnclose( bkgnd dg )
  tg0_err = geomAnd( tg dg_exists )
  errorLayer( tg0_err    "GRTG0: TG is not allowed in the same design as DG")

 ;RULE TG1
  ngate_tg = geomAnd( ngate tg )
  err_tg1 = geomGetEdge( ngate_tg inside rx )
  drc( err_tg1 width < 0.70           "GRTG1: ((PC over RX) over TG) width for NFET >= 0.70  um.")

 ;RULE TG2
 ;pgate_tg = geomAnd( pgate tg )
 ;err_tg2 = geomGetEdge( pgate_tg inside rx )
 ;drc( err_tg2 width < 0.60           "GRTG2: ((PC over RX) over TG) width for PFET >= 0.60  um.")

 ;RULE TG3
  tg3_err     = geomButtOrOver( gate tg )
  tg3_polygon = geomGetPolygon( tg3_err )
  tg3_45      = geomGetAngledEdge( tg3_err 0 < keep < 90 fig )
  errorLayer( tg3_polygon               "GRTG3: Non-rectangular ((PC_over RX) touching TG) found!")
  errorLayer( tg3_45                    "GRTG3: 45 degree ((PC_over RX) touching TG) found")

 ;RULE TG4
  tg4_err  = geomButtOrOver( rx geomOr( tg rx5v))
  tg4_err2 = geomGetAngledEdge( tg4_err 0 < keep < 90 fig )
  errorLayer( tg4_err2 "GRTG4: Non-orthogonal (RX touching (TG or RX5V)) shape found!")

 ;RULE TG5
  tg5_err  = geomButtOrOver( pc geomOr( tg rx5v))
  errtg5_0 = geomButting( tg5_err rx )
  errtg5_1 = drc( tg5_err rx  0 < sep < 0.16 )
  errorLayer( geomOr( errtg5_0 errtg5_1 ) "GRTG5: (PC touching (TG or RX5V)) to RX (abutting not allowed) >= 0.160 um." )

 ;RULE TG6
  tg6_err  = geomButtOrOver( rx geomOr( tg rx5v))
  errtg6_0 = geomButting( tg6_err pc )
  errtg6_1 = drc( tg6_err pc  0 < sep < 0.16 )
  errorLayer( geomOr( errtg6_0 errtg6_1 ) "GRTG6: (RX touching (TG or RX5V)) to PC (abutting not allowed) >= 0.160 um." )

 ;RULE TG7
   tg7_err  = geomAndNot( geomButtOrOver( geomButtOrOver( gate tg) bp ) scgate_present)
   tf_tg7   = geomAndNot( geomAndNot( geomAnd( tg nw ) mosvar) scgate_present)
   err_tg7 = drc( tf_tg7 tg7_err enc < 1.60)
   errorLayer( err_tg7     "GRTG7: (((PC over RX) touching TG) touching BP) must be within ((TG over NW) not over MOSVAR) >= 1.60 um.")

 ;RULE TG8
   tg8_err  = geomAndNot( geomAndNot( geomButtOrOver( gate tg) bp ) nw)
   te_tg8       = geomAndNot( tg geomOr( nw mosvar))
   drc( te_tg8 tg8_err  enc < 1.80     "GRTG8: ((((PC over RX) touching TG) not touching BP) not touching NW) must be within (TG not over (NW or MOSVAR)) >= 1.80 um.")

 ;RULE TG8a
   tg8a_err  = geomAndNot( geomButtOrOver( gate tg) bp )
   drc( tg tg8a_err  enc < 0.50     "GRTG8a: (((PC over RX) touching TG) not touching BP) must be within TG >= 0.50 um.")

 ;RULE TG9
   drc( gate tg  0 < sep < 1.00     "GRTG9: (PC over RX) to TG space >= 1.000 um.")

 ;RULE TG10
    tg10_err_past = drc( tg nw 0 <= enc < 0.44 )
    errorLayer( tg10_err_past       "GRTG10: TG overlap past NW >= 0.440 um.")

 ;RULE TG11
   tg11_err = drc( tg zerovt 0 < sep < 1.80 )
   tg11_err_1 = geomButtOrOver( tg zerovt )
   errorLayer( tg11_err             "GRTG11: TG  to ZEROVT  >= 1.80 um.")
   errorLayer( tg11_err_1           "GRTG11: TG  cannot touch ZEROVT .")

 ;RULE TG12
   tg12_err_bb = drc( tg bb 0 < sep < 0.44 )
   tg12_err_1 = geomButtOrOver( tg bb)
   errorLayer( tg12_err_bb             "GRTG12: TG  to BB  >= 0.44 um.")
   errorLayer( tg12_err_1              "GRTG12: TG  cannot touch BB .")

   tg12_err_nw = drc( tg nw  sep < 0.44 )
   errorLayer( tg12_err_nw             "GRTG12: TG  to NW  >= 0.44 um.")

   tg12_err_mosvar = drc( tg mosvar  sep < 0.44 )
   errorLayer( tg12_err_mosvar         "GRTG12: TG  to MOSVAR  >= 0.44 um.")

  ;RULE TG13
    drc( tg nw    ovlp < 0.44           "GRTG13: TG overlap of NW >= 0.44 um.")

  ;RULE TG14
   pc_rx_tg14 = geomButtOrOver( geomAndNot( geomOr( rx pc ) geomAnd( geomOr( esdummy esd_cdm ) geomSize( sblk 0.01 ) ) ) op )
   tg14_err   = drc( pc_rx_tg14 tg sep < 1.00 )
   tg14_err_1 = geomButtOrOver( pc_rx_tg14 tg)
   errorLayer( tg14_err                "GRTG14: [((RX or PC) not over ((ESDUMMY or ESD_CDM) over (SBLK sized by 0.01))) touching OP] to TG  >= 1.00 um.")
   errorLayer( tg14_err_1              "GRTG14: [((RX or PC) not over ((ESDUMMY or ESD_CDM) over (SBLK sized by 0.01))) touching OP] cannot touch TG")

  ;RULE TG15
   tg15_err_past = drc( nw tg 0 <= enc < 0.44 )
   errorLayer( tg15_err_past                   "GRTG15: NW overlap past TG >= 0.440 um.")

  ;RULE TG16
   rx_tg    = geomButtOrOver( rx geomOr( tg rx5v ))
   tg16_err = geomButtOrOver( rx_tg geomAndNot( pc tg))
   errorLayer( tg16_err                        "GRTG16: RX touching (TG or RX5V) cannot touch (PC not over TG) ")

  ;RULE TG17
    tg17_err = geomButtOrOver( tg geomOr( bb ns jd rn rr dg rp pd nr pr pcfuse dgv di dipi grlogic))
    errorLayer( tg17_err                       "GRTG17: TG cannot touch ( BB NS JD RN RR DG RP PD NR PR PCFUSE DGV DI DIPI GRLOGIC) ")

 if( avSwitch( "HIRESSUB") then
  ;Rule TG17a
   drc( tg ti  sep < 0.50                      "GRTG17a: TG to TI space >= 0.500 um.")
   errorLayer( geomAnd( tg ti )                "GRTG17a: TG touching Ti found!!")
   )

  ;RULE TG18
    tg18_err = geomAndNot( geomAnd( rx geomOr( bp pd )) nw)
    tg18_err_1 = geomButtOrOver( tg tg18_err)
    errorLayer( drc( tg tg18_err sep < 0.50 )  "GRTG18: TG to (RX over (BP or PD) not over NW)  >= 0.50 um.")
    errorLayer( tg18_err_1                     "GRTG18: TG cannot touch (RX over (BP or PD) not over NW) .")

  ;RULE TG19
    tg19_err = geomButtOrOver( tg pcfuse)
    errorLayer( drc( tg pcfuse sep < 2.50 )    "GRTG19: TG to PCFUSE  >= 2.50 um.")
    errorLayer( tg19_err                       "GRTG19: TG cannot touch PCFUSE .")
  ;RULE TG20
   tg20_err = geomGetAngledEdge( tg 0 < keep < 90 fig )
   errorLayer( tg20_err                        "GRTG20: Non-orthogonal TG shape found!")

  ;RULE TG21
   drc( tg  width < 0.44 withCornerTouch      "GRTG21: TG width >= 0.44  um.")

  ;RULE TG22
   drc( tg  sepNotch < 0.44 withSingularPoint  "GRTG22: TG space >= 0.44  um.")

  ;RULE TG50
   tg50_err = geomAnd( geomAnd( rx pc) tg)
   drc( tg50_err  width < 0.50                   "GRTG50: ((RX over PC) over TG) width >= 0.50  um.")

  ;RULE TG52
   tg52_err = geomButtOrOver( rx geomOr( tg rx5v) )
   drc( tg52_err rx sep < 0.70                  "GRTG52: (RX touching (TG or RX5V)) to RX >= 0.70  um.")

  ;RULE TG104a
   tg104a_err = geomAnd( geomAnd( pc nw) tg )
   pc_and_tg  = geomAnd( pc tg )
   drc( tg104a_err pc_and_tg sep < 0.34 shielded        "GRTG104a: ((PC over NW) over TG) to (PC over TG) >= 0.34 um.")

  ;RULE TG104b
   pc_and_tg_not_nw  = geomAndNot( pc_and_tg nw)
   tg104b_err = drc( pc_and_tg_not_nw pc_and_tg 0 < sep < 0.50  shielded )
   errorLayer( tg104b_err        "GRTG104b: ((PC not over NW) over TG) to (PC over TG) >= 0.50 um.")

 ;RULE TG110
   tg110_err = geomButtOrOver( rx tg )
   tg110_err_past = drc( tg110_err pc 0 <= enc < 0.38 )
   errorLayer( tg110_err_past                   "GRTG110: (RX touching TG) overlap past PC >= 0.380 um.")

 ;RULE TG111
   tg111_err_past = drc( pc geomAnd( tg110_err pc ) 0 < enc < 0.60 )
   tg111_ok       = geomOverlap( tg111_err_past geomAndNot( tg111_err_past pc ) )
   tg111_err_past = geomAndNot( tg111_err_past tg111_ok )
   errorLayer( tg111_err_past                   "GRTG111: PC overlap past (RX touching TG) >= 0.60 um.")
   errtg111_coin  = geomGetEdge( tg110_err coincident pc )
   errorLayer( errtg111_coin                    "GRTG111: PC overlap past RX (RX touching TG) coincident")

  ;RULE TG207
   tg207_err = geomButtOrOver( ca tg )
   drc( tg207_err pc sep < 0.16                 "GRTG207: (CA touching TG ) to PC >= 0.16um.")

  ;RULE TG252
   tg252_err = geomOverlap( gate geomSize( tg 0.01 ) )
   drc( tg252_err nw sep < 1.80                 "GRTG252: ((PC over RX) touching TG ) to (NW or MOSVAR) >= 1.80um.")
   drc( tg252_err mosvar sep < 1.80             "GRTG252: ((PC over RX) touching TG ) to (NW or MOSVAR) >= 1.80um.")

  ;RULE TG252a
   tg252a_err = geomOverlap( geomAndNot( gate mosvar) geomSize( tg 0.01 ) )
   drc( nw tg252a_err  enc < 1.60               "GRTG252a: (((PC over RX) not over MOSVAR) touching TG ) within NW  >= 1.60um.")

  ;Rule TG250
   pitopi_via  = geomAnd( pi )
   lay_1       = geomButtOrOver( pi geomOr( tg rx5v) )
   lay_2       = geomAndNot( pi lay_1 )
   tg_rx5v_pi  = geomAndNot( lay_1 nw )
   nw_pi_tg250 = geomAndNot( lay_2 nw )
   pi_tg250    = geomAndNot( tg_rx5v_pi geomOverlap( tg_rx5v_pi nw_pi_tg250 ) )
   errtg250_0  = drc( pi_tg250 nw_pi_tg250    sep < 1.00 )
   errtg250_1  = drc( pi_tg250                sep < 1.00 )
   errorLayer( geomOr( errtg250_0 errtg250_1 ) "GRTG250: ((PI touching (TG or RX5V) not over NW) to adjacent (PI not over NW))  >= 1.00 um." )

  ;RULE TG260a1
   tg260a1_pdiff_in_nw = geomOverlap( pdiff nw )
   tg260a1_pdiff_in_dg = geomOverlap( tg260a1_pdiff_in_nw geomSize( geomOr( tg rx5v) 0.01))
   drc( nw tg260a1_pdiff_in_dg enc < 0.80        "GRTG260a1: (RX(P+) touching DG) within NW >= 0.80 um.")

  ;RULE TG260a2
   pdiff_tg260a2 = geomOverlap( pdiff geomSize( geomOr( tg rx5v ) 0.01 ))
   nw_tg_0       = geomSize(geomSize( nw -19.995 ) 19.995 ) ; NW >=40um
   nw_tg_1       = geomOverlap(nw nw_tg_0 )
   nw_tg_2       = geomAndNot( nw geomButtOrOver( nw drc( nw sep < 40 ) ) ) ; (not NW) >=40um
   nw_tg_all     = geomAnd( nw_tg_1 nw_tg_2 )
   drc( nw_tg_all pdiff_tg260a2 enc < 0.90       "GRTG260a2: (RX P+ junction touching {TG,RX5V}) within NW for (NW width >=40um) and ((not NW) width >=40um) >= 0.90um" )

 ;RULE TG260c1
   nw_tg260c1 = geomOverlap( nw geomSize( geomOr( tg rx5v) 0.01))
   drc( nw_tg260c1 pdiff enc < 0.80
           "GRTG260c1: RX P+ junction within (NW touching {TG, RX5V}) >=0.80um" )

 ;RULE TG260c2
   nw_tg260c2     = geomOverlap( nw geomSize( geomOr( rx5v tg ) 0.01 ))
   nw_tg260c2_1   = geomOverlap( nw_tg_1 nw_tg260c2 )
   nw_tg260c2_2   = geomOverlap( nw_tg_2 nw_tg260c2 )
   nw_tg260c2_all = geomAnd( nw_tg260c2_1 nw_tg260c2_2 )
   nw_tg260c2_all = geomAndNot( nw_tg260c2_all geomButtOnly( nw_tg260c2_all drc( nw_tg260c2_all nw sep < 40 ) ) )
   drc( nw_tg260c2_all pdiff enc < 0.90
        "GRTG260c2: RX P+ junction within (NW touching {RX5V, TG} for (NW width >=40um) and (not NW width >=40um)) >=0.90um")

 ;Rule TG265a1
  rxnp_junction = geomAndNot( ndiff nw )
  ndiff_tg265a1 = geomOverlap( rxnp_junction geomAnd( geomSize( geomOr( rx5v tg ) 0.01 ) rxnp_junction ) )
  errtg265a1    = geomOutside( drc( ndiff_tg265a1 nw sep < 1.00 ) nw )
  errorLayer( errtg265a1 "GRTG265a1: (RX N+ junction touching {RX5V, TG}) to NW >= 1.00um" )

 ;Rule TG265a2
  ndiff_tg265a2 = geomOverlap( rxnp_junction geomAnd( geomSize( geomOr( rx5v tg ) 0.01 ) rxnp_junction ) )
  drc( ndiff_tg265a2 nw_tg_all sep < 1.10 "GRTG265a2: (RX N+ junction touching {RX5V, TG}) to NW for (NW width >=40um) and ((not NW) width >=40um) >= 1.10um" )

 ;Rule TG265c1
  nw_tg265c1 = geomOverlap( nw geomSize( geomOr( rx5v tg ) 0.01))
  errtg265c1 = geomOutside( drc( rxnp_junction nw_tg265c1 sep < 1.00 ) nw_tg265c1 )
  errorLayer( errtg265c1 "GRTG265c1: RX N+ junction to (NW touching ({RX5V, TG} over RX) not over BP) >=1.00um" )

 ;Rule TG265c2
  nw_tg265c2   = geomOverlap( nw geomSize( geomOr( tg rx5v) 0.01 ) )
  nw_tg265c2_1 = geomOverlap( nw_tg_1 nw_tg265c2 )
  nw_tg265c2_2 = geomOverlap( nw_tg_2 nw_tg265c2 )
  nw_tg265c2_all = geomAnd( nw_tg265c2_1 nw_tg265c2_2 )
  drc( rxnp_junction nw_tg265c2_all sep < 1.10
           "GRTG265c2: RX N+ junction to (NW touching (RX5V,TG) for (NW width >=40um) and ((not NW) width >=40um)) >=1.10um" )

 ;RULE TG265e1
  ndiff_tg265e1 = geomOverlap( rxnp_junction  geomSize( geomOr( tg rx5v) 0.01))
  drc( ndiff_tg265e1 bb sep < 1.00             "GRTG265e1: (RX N+ junction touching {RX5V, TG} ) to BB >= 1.00um.")

 ;Rule TG268a/b
  pdiff_in_nw_tg268a = geomAndNot( geomOverlap( pdiff nw ) geomOr( esdummy esd_cdm ) )
  pdiff_tg268a = geomButtOrOver( pdiff_in_nw_tg268a tg )
  ca_all       = geomOr( ca cabar )
  nwc_fet_tg268= geomAndNot( geomButtOrOver( geomStraddle( ndiff0 nw ) pc ) nw )
  njct_tg268_0 = geomOr( geomOutside( geomButtOrOver( ndiff0 ca_all ) geomOr( nw bb bfmoat ) ) nwc_fet_tg268 )
  njct_tg268   = geomButtOrOver( njct_tg268_0  tg )
  njct_tg268_in_pi=geomAnd( njct_tg268 pi)
  njct_tg268_in_sx=geomAndNot( njct_tg268 pi)
  nw_no_tw_tg268 = geomAndNot( nw geomOverlap( nw pi))
  nwc_over_nw_tg268a = geomAnd( nwcont nw )
 if( avSwitch("HIRESSUB") then
  sx_block_tg268    = geomOr( geomSize( geomSize( nw_no_tw_tg268 0.62 ) -0.62 ) bb bfmoat btgen ti hr )
 else
  sx_block_tg268    = geomOr( geomSize( geomSize( nw_no_tw_tg268 0.62 ) -0.62 ) bb bfmoat )
  )
  sxpicont_tg268b=geomAndNot( geomAndNot( geomAnd( rx geomAndNot( bp geomButtOrOver( bp bb ) ) ) nw ) pc )
  picont_tg268b= geomAnd( sxpicont_tg268b pi)
  sxcont_tg268b= geomAndNot( sxpicont_tg268b pi)

  errtg268a   = geomSepInside( pdiff_tg268a 20.0 nwc_over_nw_tg268a nw )
  errorLayer( errtg268a      "GRTG268a: (RX(in BP)touch TG) to RX(not BP) (same NW) space <= 20.000 um.")

  errtg268b_sx   = geomSepOutside( njct_tg268_in_sx 10.0 sxcont_tg268b sx_block_tg268 )
  errtg268b_pi   = geomSepOutside( njct_tg268_in_pi 10.0 picont_tg268b sx_block_tg268 )
  errtg268b   = geomOr(errtg268b_sx errtg268b_pi)
 if( avSwitch("HIRESSUB") then
  errorLayer( errtg268b      "GRTG268b_HR: (RX(no BP)touch TG) to Substrate Contact space <= 10.000 um.")
 else
  errorLayer( errtg268b      "GRTG268b: (RX(no BP)touch TG) to Substrate Contact space <= 10.000 um.")
 )
 ;RULE TG353
  err_tg353 = geomOverlap( rx geomSize( geomOr( tg rx5v) 0.01 ))
  drc( bp err_tg353  enc < 0.14               "GRTG353: (RX touching (RX5V or TG))  within BP  >= 0.14um.")

 ;RULE TG354b
  nw_tg354b     = geomOverlap( nw  geomSize( geomOr( rx5v tg ) 0.01 ) )
  sxcont_tg354b = geomAnd( sxcont geomSize(nw_tg354b 1.00 ) )
  drc( bp sxcont_tg354b enc < 0.14 "GRTG354b: (RX substrate contact OVER ((NW touching {RX5V, TG})sized by 1.00 per edge)) within BP >= 0.14um")

 ;RULE TG356b
   nw_tg356b           = geomOverlap( nw  geomSize( geomOr( rx5v tg) 0.01 ) )
   nwcont_in_nw_tg356b = geomAnd( nwcont nw_tg356b )
   nwcont_tg356b       = geomAndNot( nwcont_in_nw_tg356b geomSize( nw_tg356b -0.80 ) )
   drc( nwcont_tg356b bp sep < 0.14 "GRTG356b: (RX N-well ( NW touching {RX5V, TG}) contact) not over (( NW touching {RX5V, SPACE5V} sized by -0.80 per edge )) to BP >= 0.14um" )

 ;RULE TG358a
   ;tg358_err = geomOr( te_gen tf_gen nv_gen pv_gen )
   ;drc( tg358_err  width < 0.44            "GRTG358a: (TE,TF,NV,PV) width >= 0.44  um.")
   drc( te_gen  width < 0.44 withCornerTouch  "GRTG358a: TE  width >= 0.44  um.")
   drc( tf_gen  width < 0.44 withCornerTouch  "GRTG358a: TF  width >= 0.44  um.")
   drc( pv_gen  width < 0.44 withCornerTouch  "GRTG358a: PV  width >= 0.44  um.")
   drc( nv_gen  width < 0.44 withCornerTouch  "GRTG358a: NV  width >= 0.44  um.")

 ;RULE TG358b
   ;drc( tg358_err  sep < 0.44               "GRTG358b: (TE,TF,NV,PV) space >= 0.44  um.")
   ;drc( tg358_err  notch < 0.44             "GRTG358b: (TE,TF,NV,PV) notch >= 0.44  um.")
   drc( te_gen  sepNotch  < 0.44 withSingularPoint "GRTG358b: TE  space >= 0.44  um.")
   drc( tf_gen  sepNotch  < 0.44 withSingularPoint "GRTG358b: TF  space >= 0.44  um.")
   drc( nv_gen  sepNotch  < 0.44 withSingularPoint "GRTG358b: NV  space >= 0.44  um.")
   drc( pv_gen  sepNotch  < 0.44 withSingularPoint "GRTG358b: PV  space >= 0.44  um.")

 ;RULE TG358c
  ;tg358c_err = geomOr( tg358_err tg )
  ;drc( tg358c_err  area < 0.387             "GRTG358c: (TG,TE,TF,NV,PV) area >= 0.387 sq.um.")
   drc( te_gen  area  < 0.387           "GRTG358c: TE  area  >= 0.387 sq.um.")
   drc( tf_gen  area  < 0.387           "GRTG358c: TF  area  >= 0.387 sq.um.")
   drc( nv_gen  area  < 0.387           "GRTG358c: NV  area  >= 0.387 sq.um.")
   drc( pv_gen  area  < 0.387           "GRTG358c: PV  area  >= 0.387 sq.um.")
   drc( tg      area  < 0.387           "GRTG358c: TG  area  >= 0.387 sq.um.")

 ;RULE TG358d
   ;tg358_err_enclosure = geomAndNot( geomHoles( tg358c_err ) tg358c_err )
   ;tg358d_err_enc_pv = geomAndNot( geomHoles( pv_gen ) pv_gen )
   tg358d_err_enc_pv = geomAndNot( geomHoles( pv_gen ) pv_gen )
   tg358d_err_enc_nv = geomAndNot( geomHoles( nv_gen ) nv_gen )
   tg358d_err_enc_te = geomAndNot( geomHoles( te_gen ) te_gen )
   tg358d_err_enc_tf = geomAndNot( geomHoles( tf_gen ) tf_gen )
   tg358d_err_enc_tg = geomAndNot( geomHoles( tg ) tg)
   drc( tg358d_err_enc_pv area < 0.387    "GRTG358d: PV enclosed area >= 0.387 sq. um.")
   drc( tg358d_err_enc_nv area < 0.387    "GRTG358d: NV enclosed area >= 0.387 sq. um.")
   drc( tg358d_err_enc_te area < 0.387    "GRTG358d: TE enclosed area >= 0.387 sq. um.")
   drc( tg358d_err_enc_tf area < 0.387    "GRTG358d: TF enclosed area >= 0.387 sq. um.")
   drc( tg358d_err_enc_tg area < 0.387    "GRTG358d: TG enclosed area >= 0.387 sq. um.")

);END of 5V_FET


   ;Rule 5VONLY01
   fivevonly_exists = geomEnclose( bkgnd fivevonly )
   err5vonly01      = geomAnd( geomAndNot( gate tg ) fivevonly_exists )
   errorLayer( err5vonly01 "GR5VONLY01: If 5VONLY shape exists in the layout then all (PC over RX) shapes must be covered by TG" )

   ;Rule 5VONLY02
   err5vonly02 = geomAnd( geomOr( jc as bp2nd dg dgv sbd jd nr pr zerovt geomAndNot( mosvar tg ) schky bipolar ) fivevonly_exists )
   errorLayer( err5vonly02 "GR5VONLY02: 5VONLY cannot exist in the same layout with any of the following levels {JC,AS,BP2ND,DG, DGV, SBD, JD, NR, PR, ZEROVT, (MOSVAR not over TG), SCHKY, BIPOLAR}" )

   ;Rule PLYONCRK1
   err_plyon1 = geomAndNot( geomOr( plyoncrk fivevonly) chipedge )
   errorLayer( err_plyon1  "GRPLYONCRK1: (PLYONCRK,5VONLY) wthin CHIPEDGE >=0.")

   ;Rule PLYONCRK2
   err_plyon2 = geomAvoiding( geomOverlap( chipedge geomSize( plyoncrk 0.01)) fivevonly)
   errorLayer( err_plyon2  "GRPLYONCRK2: (CHIPEDGE touching PLYONCRK) must touch 5VONLY shape.")

   pc_over_rx = geomAnd( pc rx )


;-------------########################## JS eJFET RULES #############----------------
;Rule JS01
 drc( js sepNotch < 0.64 withSingularPoint      "GRJS01: JS space >=0.64.")

;Rule JS02
 drc( js width < 0.52                           "GRJS02: JS width  >=0.52.")

;Rule JS02a
 drc( js area < 2.60                            "GRJS02a: JS min area  >=2.60")

;Rule JS04
 drc( js rx sep < 0.14                          "GRJS04: JS to adjacent RX >=0.14.")

;Rule JS05
 drc( js rx enc < 0.14                          "GRJS05: JS overlap past JRX >= 0.14 um.")

;Rule JS06
 err_js6 = geomAndNot( js jc)
 errorLayer( err_js6                            "GRJS06: JS must be within JC.")

;Rule JS11
  err_js11 = geomOverlap( js bp)
  errorLayer( err_js11                          "GRJS11: JS cannot overlpa BP.")

;Rule JSPN001
  err_jspn001 = geomStraddle( js logobnd)
  errorLayer( err_jspn001                       "GRJSPN001: JS straddling LOGOBND not allowed.")


;-------------########################## NVRAM RULES #############----------------

  ;Rule AS1 (see GR1)

  ;Rule AS10 (see GR10)

  ;Rule AS11
    drc( as width < 1.44       "GRAS11: AS minimum width >= 1.44 um !")

  ;Rule AS12
    drc( as sep < 0.50         "GRAS12: AS minimum space >= 0.50 um.")
    drc( as notch < 0.50       "GRAS12: AS minimum notch >= 0.50 um.")

  ;Rule AS14
    as_encl = geomAndNot( geomHoles( as ) as )
    drc( as_encl area < 0.387  "GRAS14: AS enclosed area >= 0.387 sq.um.")

  ;Rule AS15
    as_not_ortho = geomGetAngledEdge( as 0 < keep < 90 fig )
    errorLayer( as_not_ortho   "GRAS15: Non-orthogonal AS shapes found!")

  ;Rule AS16
    pc_rx_as = geomAnd( geomAnd( pc rx) as )
    erras16 = geomGetNonRectangle( pc_rx_as )
    errorLayer( erras16        "GRAS16: [(PC over RX) over AS] must be rectangular")

  ;Rule AS17
    pc_rx_as17 = geomAvoiding( geomAnd( pc rx) geomOr( dg tg nw nr pr zerovt ))
    erras17 = geomAndNot( as geomButtOrOver( as pc_rx_as17 ) )
    errorLayer( erras17        "GRAS17: AS must touch [(PC over RX) not touching {DG,NW,NR,TG,PR ZEROVT}]")

  ;Rule AS18a
    pc_not_touching_rx = geomAndNot( pc geomButtOrOver( pc rx ) )
    erras18a = geomButtOrOver( as pc_not_touching_rx )
    errorLayer( erras18a       "GRAS18a: AS touching (PC not touching RX) not allowed.")

  ;Rule AS18b
    erras18b = geomButtOrOver( as geomOr( pc_res rx_res ) )
    errorLayer( erras18b       "GRAS18b: AS touching ({RX,PC} touching OP) not allowed.")

  ;Rule AS18c
    bp_as18c = geomButtOrOver( bp geomOr( op pcfuse rr rp ))
    erras18c = geomButtOrOver( as bp_as18c )
    errorLayer( erras18c       "GRAS18c: AS touching (BP touching {OP,PCFUSE,RR,RP}) not allowed.")

  ;Rule AS18d
    erras18d = geomOverlap( as geomSize( geomOr( bb tg dg mosvar zvt_x072 ) 0.01))
    errorLayer( erras18d       "GRAS18d: AS touching {BB,DG,TG,MOSVAR,(ZEROVT sized by 0.72)} not allowed.")

  ;Rule AS18e
    erras18e = geomButtOrOver( as geomOr( pr nr jd rn rr rp pd op tg ))
    errorLayer( erras18e       "GRAS18e: AS touching {PR,NR,JD,RN,RR,RP,PD,OP,TG} not allowed.")

  ;Rule AS18f
    erras18f = geomButtOrOver( as geomOr( bfmoat bondpad bperi di esdummy esdrf ind_filt sblk tline ))
    errorLayer( erras18f       "GRAS18f: AS touching {BFMOAT,BONDPAD,BPERI,DI,ESDUMMY,ESDRF,IND_FILT,SBLK,TLINE} not allowed.")

  ;Rule AS19a
    erras19a = geomAnd( as nw )
    errorLayer( erras19a       "GRAS19a: AS over NW not allowed.")

  ;Rule AS19b
    erras19b = geomAnd( as bp )
    errorLayer( erras19b      "GRAS19b: AS over BP not allowed.")

  ;Rule AS20a
    drc( as nw 0 < sep < 0.44 "GRAS20a: AS to NW space >= 0.44 um.")
    nw_x044  = geomSize( nw 0.44 )
    erras20a = geomButtOrOver( as geomAnd( geomAndNot( as geomButtOnly( as nw ) ) nw_x044 ) )

  ;Rule AS20b
    as_touch_nw = geomButtOnly( as nw )
        erras20b    = geomAndNot( as as_touch_nw )
    erras20b1   = geomAnd( geomAndNot( as as_touch_nw ) erras20a )
        as_ext_nw   = geomAnd( geomSize( as_touch_nw 0.001 ) geomSize( nw 0.001 ) )
        ok_as20b2   = geomGetLength( as_ext_nw keep >= 0.438 fig ) ;0.438 = 0.440 - 2x0.001
        erras20b2   = geomButtOrOver( as_touch_nw geomAndNot( as_ext_nw ok_as20b2 ) )
    errorLayer( geomOr( erras20b1 erras20b2 )    "GRAS20b: AS must abut NW (point touching not allowed and the abutting run length must be >= 0.44 mm).")

  ;Rule AS20_or
    erras20_or = geomOr( erras20a erras20b1 erras20b2 )
    errorLayer( erras20_or    "GRAS20_or: Either {AS to NW space must be >= 0.44 um} or {AS must abut NW (point touching not allowed)}")

  ;Rule AS21a
    drc( as bp 0 < sep < 0.34 "GRAS21a: AS to BP space >= 0.34 um.")
    bp_x034  = geomSize( bp 0.34 )
    erras21a = geomButtOrOver( as geomAnd( geomAndNot( as geomButtOnly( as bp ) ) bp_x034 ) )

  ;Rule AS21b
    as_touch_bp = geomButtOnly( as bp )
    erras21b    = geomAndNot( as as_touch_bp )
    erras21b1   = geomAnd( geomAndNot( as as_touch_bp ) erras21a )
    as_ext_bp   = geomAnd( geomSize( as_touch_bp 0.001 ) geomSize( bp 0.001 ) )
    ok_as21b2   = geomGetLength( as_ext_bp keep >= 0.338 fig ) ; 0.338 = 0.340 - 2x0.001
    erras21b2   = geomButtOrOver( as_touch_bp geomAndNot( as_ext_bp ok_as21b2 ) )
    errorLayer( geomOr( erras21b1 erras21b2 )     "GRAS21b: AS must abut BP (point touching not allowed and the abutting run length must be >= 0.34 mm)")

  ;Rule AS21_or
    erras21_or = geomOr( erras21a erras21b1 erras21b2 )
    errorLayer( erras21_or    "GRAS21_or: Either {AS to BP space must be >= 0.34 um} or {AS must abut BP (point touching not allowed)}")

  ;Rule AS22a
    drc( as tg     0 < sep < 0.44  "GRAS22a: AS to TG     space >= 0.44 um.")
    drc( as dg     0 < sep < 0.44  "GRAS22a: AS to DG     space >= 0.44 um.")
    drc( as mosvar 0 < sep < 0.44  "GRAS22a: AS to MOSVAR space >= 0.44 um.")

  ;Rule AS22b
    bp_pcfuse = geomButtOrOver( bp pcfuse )
    drc( as bp_pcfuse 0 < sep < 0.34  "GRAS22b: AS to (BP touching PCFUSE) space >= 0.34 um.")

  ;Rule AS22c
    drc( as bb 0 < sep < 0.44  "GRAS22c: AS to BB space >= 0.44 um.")

  ;Rule AS22d
    drc( as zerovt 0 < sep < 1.16  "GRAS22d: AS to ZEROVT space >= 1.16 um.")

  ;Rule AS22e
    drc( as rn 0 < sep < 0.34  "GRAS22e: AS to RN space >= 0.34 um.")

  ;Rule AS22f
    drc( as bh3 0 < sep < 0.44  "GRAS22f: AS to BH3 space >= 0.44 um.")

  ;Rule AS104
    pc_over_as = geomAnd( pc as )
    erras104s  = drc( pc_over_as sep < 0.56 )
    erras104n  = drc( pc_over_as notch < 0.56 )
    errorLayer( erras104s      "GRAS104: [(PC to PC) over AS] space >= 0.560 um.")
    errorLayer( erras104n      "GRAS104: [(PC to PC) over AS] notch >= 0.560 um.")

  ;Rule AS353
    rx_strad_as = geomStraddle( rx as )
    errorLayer( rx_strad_as    "GRAS353: RX straddling AS found!")
    drc( as rx enc < 0.72  "GRAS353: RX within AS >= 0.72 um.")

  ;Rule AS355
    drc( as rx 0 < sep < 0.72  "GRAS355: AS to RX space >= 0.72 um." )

  ;Rule AS357
    drc( bhgen geomButtOrOver( bhgen as ) 0 < sep < 0.44  "GRAS357: BH to AS space >= 0.44 um." )

  ;Rule AS370
    drc( as pc_over_rx 0 < sep < 0.80  "GRAS370: (PC over RX) to AS space >= 0.80 um." )

  ;Rule AS371
    pc_over_rx_strad_as = geomStraddle( pc_over_rx as )
    errorLayer( pc_over_rx_strad_as "GRAS371: (PC over RX) straddling AS found!")
    drc( as pc_over_rx  enc < 0.90  "GRAS371: (PC over RX) within AS >= 0.90 um." )

  ;Rule AS942
    drc( dvpad as  sep < 3.00      "GRAS942: DV terminal WB pad to AS >= 3.000 um.")
    drc( tvpad as  sep < 3.00      "GRAS942: TV terminal WB pad to AS >= 3.000 um.")

  ;Rule AS951
    erras951_dv  = geomAnd( dvpad as )
    erras951_tv  = geomAnd( tvpad as )
    errorLayer( erras951_dv           "GRAS951: DV terminal WB pad touching AS not allowed")
    errorLayer( erras951_tv           "GRAS951: TV terminal WB pad touching AS not allowed")

  ;Rule AS990
    erras990 = geomButtOrOver( bp_ring as )
    errorLayer( erras990           "GRAS990: BP in the chip guardring touching AS not allowed")

  ;Rule AS999a
  ; erras999a = geomAndNot( as chipedge )
  ; errorLayer( erras999a          "GRAS999a: AS outside CHIPEDGE found!")
  ; drc( chipedge as enc < 11.02   "GRAS999a: AS must be within CHIPEDGE >= 11.06 um.")

  ;RULE ASPN001
    errorLayer( geomStraddle( as logobnd ) "GRASPN001: AS shape straddling LOGOBND not allowed")

;-------------########################## NVRAM RULES #############----------------


; QCAP1c
  viaQt=geomAnd(qt chipedge)
  viaHt=geomAnd(qt chipedge)
  geomConnect(
       via( viaQt qt chipedge)
       via( viaHt ht chipedge)
  ); end geomConnect
  qtSameChip=geomNodeRelate( qt chipedge conn)
  htSameChip=geomNodeRelate( ht chipedge conn)
  geomConnect(
       via( viaQt qtSameChip chipedge)
       via( viaHt htSameChip chipedge)
  ); end geomConnect
  processAntenna(
      gate(( chipedge qtSameChip ))
      antenna( qtSameChip )
      diffusion(htSameChip)
      qtHt_ratio = ((qtSameChip.area+htSameChip.area)*chipedge.area) / (2000000*chipedge.area)
      qtHt_err = drcAntenna( qtSameChip ( chipedge ) qtHt_ratio ignore <= 1 "GRQCAP1c: (QT+HT) area >= 2000000 sq.um." )
    ); end processAntenna

  ;-------------------------------------------------------------------------------------------
  ;Rule NW5
  pi_not_nw = geomAndNot( pi nw )

  v1_all    = geomOr( v1 v1bar )
  ca_via    = geomAnd( ca_all m1 )
  rx_net    = geomAndNot( rx gate )
  v1_via    = geomAnd( v1_all m2_exists )
  v1_via_mt = geomAnd( v1_all m2_empty )
  v2_via    = geomAnd( v2_all m3_exists )
  v2_via_mt = geomAnd( v2_all m3_empty )
  v3_via    = geomAnd( v3_all m4_exists )
  v3_via_mt = geomAnd( v3_all m4_empty )
  v4_via    = geomAnd( v4_all m5_exists)
  v4_via_mt = geomAnd( v4_all m5_empty )
  v5_via    = geomAnd( v5_all mt)

  geomConnect(
        via( ca_via    ca     m1 )
        via( ca_via    cabar  m1 )
        via( ca_via    rx_net m1 )
        via( ca_via    pc     m1 )
        via( v1_via    v1     m1 )
        via( v1_via    v1bar  m1 )
        via( v1_via    m1     m2 )
        via( v1_via_mt m1     mt )
        via( v2_via    m2     m3 )
        via( v2_via_mt m2     mt )
        via( v3_via    m3     m4 )
        via( v3_via_mt m3     mt )
        via( v4_via    m4     m5 )
        via( v4_via_mt m4     mt )
        via( v5_via    m5     mt )
        via( ft_all    mt     am )
        via( ft_all    mt     ml )
        via( ft_all    mt     e1 )
        via( e2        e1     ma )
        via( ca_via    rx_over_bp     pi_not_nw )

   );END geomConnect STATEMENT
        drc( pi_not_nw sep < 1 diffNet "GRNW5:  (PI not over NW) space (different net) >= 1.00 um" )


  ;-------------------------------------------------------------------------------------------
 ;Rule DG13
   lay_dg13 = geomAndNot( dg geomButtOrOver( dg geomOr( nw bb bh ) ) )
   errdg13  =                geomButtOnly(   dg geomOr( nw bb bh ) )
   drc( lay_dg13 nw             sep < 0.44  "GRDG13: DG to NW space >= 0.440 um.")
   drc( lay_dg13 bb         0 < sep < 0.44  "GRDG13: DG to BB space >= 0.440 um.")
   drc( lay_dg13 bh             sep < 0.44  "GRDG13: DG to BH space >= 0.440 um.")
   errorLayer( errdg13                      "GRDG13: DG touching NW, BB or BH" )
   via_dg13 = geomOr( dg )
     geomConnect(
        via( via_dg13   dg      bhgen )
   );END geomConnect STATEMENT
   drc( dg bhgen                sep < 0.44 diffNet "GRDG13: Layout will cause: DG to BH space >= 0.440 um.")

 ;-------------------------------------------------------------------------------------------
;RELEASE STATEMENT
   bkgnd3 = geomOr( bkgnd )
   errorLayer( bkgnd3 "# INFO: CMRF-7sf ASSURA DRC DECK (REV DATE 12/18/2013) #")
) ;END OF drcExtractRules

