
            Assura (R) Physical Verification Version av4.1:Production:dfII6.1.5-64b:IC6.1.5-64b.500.17
            Release 4.1_USR4_HF6

Copyright (c) Cadence Design Systems. All rights reserved.
@(#)$CDS: assura_64 version av4.1:Production:dfII6.1.5-64b:IC6.1.5-64b.500.17 01/29/2014 13:15 (sjfdl030) $
sub-version 4.1_USR4_HF6, integ signature 2014-01-29-1246

run on xunil-01 from /opt/cadence/ASSURA41/tools.lnx86/assura/bin/64bit/assura on Sat Mar 15 13:14:56 2014


Starting /opt/cadence/ASSURA41//tools/assura/bin/aveng /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.rsf -exec1 -LVS -cdslib /home/DREXEL/jvk27/ECEC472/IBM/cds.lib -libdefs /home/DREXEL/jvk27/ECEC472/IBM/lib.defs
@(#)$CDS: aveng_64 version av4.1:Production:dfII6.1.5-64b:IC6.1.5-64b.500.17 01/29/2014 13:16 (sjfdl030) $
sub-version 4.1_USR4_HF6, integ signature 2014-01-29-1246

run on xunil-01 from /opt/cadence/ASSURA41/tools.lnx86/assura/bin/64bit/aveng on Sat Mar 15 13:14:56 2014

 Summary Report: SL_LVS.sum
 RSF           : /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.rsf
 Library Name  : Julian_Shifts_And_Mux
 CDSLIB Path   : "/home/DREXEL/jvk27/ECEC472/IBM/cds.lib"
 LIBDEFS Path  : "/home/DREXEL/jvk27/ECEC472/IBM/lib.defs"
 Cell Name     : SL
 View Name     : layout
 Rules File    : /home/DREXEL/yt74/ic615_work/IBM/assura/LVS/extract6.rul
 Options       : -exec1 -LVS -cdslib /home/DREXEL/jvk27/ECEC472/IBM/cds.lib -libdefs /home/DREXEL/jvk27/ECEC472/IBM/lib.defs 
 Work Directory: /home/DREXEL/jvk27/ECEC472/IBM/LVS
 Operating Mode: Legacy Mode is Off


Starting dfIIToVdb...
Virtuoso Framework License (111) was checked out successfully. Total checkout time was 0.10s.
*WARNING* lib.defs files and the -libdefs option are no longer supported. The file '/home/DREXEL/jvk27/ECEC472/IBM/lib.defs' will be ignored. The cds.lib file '/home/DREXEL/jvk27/ECEC472/IBM/cds.lib' takes precedence.
@(#)$CDS: dfIIToVdb_64 version av4.1:Production:dfII6.1.5-64b:IC6.1.5-64b.500.17 01/29/2014 13:17 (sjfdl030) $
sub-version 4.1_USR4_HF6, integ signature 2014-01-29-1246

run on xunil-01 from /opt/cadence/ASSURA41/tools.lnx86/assura/bin/64bit/dfIIToVdb on Sat Mar 15 13:14:57 2014

*WARNING* lib.defs files and the -libdefs option are no longer supported. The file '/home/DREXEL/jvk27/ECEC472/IBM/lib.defs' will be ignored. The cds.lib file '/home/DREXEL/jvk27/ECEC472/IBM/cds.lib' takes precedence.
 
Loading IBM PDK cmrf7sf procedures... 
IBM PDK cmrf7sf Device Status Table loaded. 
 
Compiling rules...

WARNING LVS Run detected.
Non-legacy mode has been disabled for this LVS run
Checking out license for Assura_LVS
Checking out license for Assura_DRC

Reading the design data...
*WARNING* lib.defs files and the -libdefs option are no longer supported. The file '/home/DREXEL/jvk27/ECEC472/IBM/lib.defs' will be ignored. The cds.lib file '/home/DREXEL/jvk27/ECEC472/IBM/cds.lib' takes precedence.



Finished dfIIToVdb.

Building the VDB part 2 in background mode.

Building tables for LVS Preprocessing in background mode.


Starting /opt/cadence/ASSURA41/tools/assura/bin/vdbToCells /home/DREXEL/jvk27/ECEC472/IBM/LVS SL_LVS

Finished /opt/cadence/ASSURA41/tools/assura/bin/vdbToCells

Starting Nvn PreExtraction...

Starting /opt/cadence/ASSURA41/tools/assura/bin/nvn /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.rsf -preExtract -exec1 -libdefs /home/DREXEL/jvk27/ECEC472/IBM/lib.defs -cdslib /home/DREXEL/jvk27/ECEC472/IBM/cds.lib
Checking out license for Assura_LVS
@(#)$CDS: nvn_64 version av4.1:Production:dfII6.1.5-64b:IC6.1.5-64b.500.17 01/29/2014 13:17 (sjfdl030) $
sub-version 4.1_USR4_HF6, integ signature 2014-01-29-1246
run on xunil-01 at Sat Mar 15 13:15:12 2014
Reading schematic network
 running dfIIToVldb -cdslib /home/DREXEL/jvk27/ECEC472/IBM/cds.lib -libdefs /home/DREXEL/jvk27/ECEC472/IBM/lib.defs /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.vlr /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.rsf
Virtuoso Framework License (111) was checked out successfully. Total checkout time was 0.10s.
*WARNING* lib.defs files and the -libdefs option are no longer supported. The file '/home/DREXEL/jvk27/ECEC472/IBM/lib.defs' will be ignored. The cds.lib file '/home/DREXEL/jvk27/ECEC472/IBM/cds.lib' takes precedence.
*WARNING* lib.defs files and the -libdefs option are no longer supported. The file '/home/DREXEL/jvk27/ECEC472/IBM/lib.defs' will be ignored. The cds.lib file '/home/DREXEL/jvk27/ECEC472/IBM/cds.lib' takes precedence.
@(#)$CDS: dfIIToVldb_64 version av4.1:Production:dfII6.1.5-64b:IC6.1.5-64b.500.17 01/29/2014 13:17 (sjfdl030) $
sub-version 4.1_USR4_HF6, integ signature 2014-01-29-1246

run on xunil-01 from /opt/cadence/ASSURA41/tools.lnx86/assura/bin/64bit/dfIIToVldb on Sat Mar 15 13:15:13 2014

function calcTermOrder redefined
function getParams redefined
function setModelName redefined
Top Cell Library: "Julian_Shifts_And_Mux"
Top Cell Name: "SL"
Top Cell View: "schematic"
Output Data Base Name: "/home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.sdb"
Simulator Name: "auLvs"
View List: "auLvs schematic symbol"
Stop List: "auLvs"
Net Listing Mode is Analog
 
Loading IBM PDK cmrf7sf procedures... 
IBM PDK cmrf7sf Device Status Table loaded. 
 
Global net gnd! found
Global net vdd! found
writing /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.sdb
 inputting /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.sdb
Reading layout network
 inputting network ./LVS/SL_LVS.ldb
Preprocessing schematic network phase 1
*WARNING* deleteCellPin - Unable to find cell 'nfet50tw'
*WARNING* deleteCellPin - Unable to find cell 'nfet50tw'
*WARNING* deleteCellPin - Unable to find cell 'nfet33tw'
*WARNING* deleteCellPin - Unable to find cell 'nfet33tw'
*WARNING* deleteCellPin - Unable to find cell 'nfettw'
*WARNING* deleteCellPin - Unable to find cell 'nfettw'
Preprocessing layout network phase 1
 WARNING (AVLVSNN-10034) : bindingFile/bind rule - schematic cell 'nfettw' is not found and
 will be considered a dummy cell. The default binding for layout cell 'nfettw(Generic)' will be broken.
 WARNING (AVLVSNN-10034) : bindingFile/bind rule - schematic cell 'nfettw' is not found and
 will be considered a dummy cell. The default binding for layout cell 'nfettw4(Generic)' will be broken.
 WARNING (AVLVSNN-10034) : bindingFile/bind rule - schematic cell 'nfet33tw' is not found and
 will be considered a dummy cell. The default binding for layout cell 'nfet33tw(Generic)' will be broken.
 WARNING (AVLVSNN-10034) : bindingFile/bind rule - schematic cell 'nfet33tw' is not found and
 will be considered a dummy cell. The default binding for layout cell 'nfet33tw4(Generic)' will be broken.
 WARNING (AVLVSNN-10034) : bindingFile/bind rule - schematic cell 'nfet50tw' is not found and
 will be considered a dummy cell. The default binding for layout cell 'nfet50tw(Generic)' will be broken.
 WARNING (AVLVSNN-10034) : bindingFile/bind rule - schematic cell 'nfet50tw' is not found and
 will be considered a dummy cell. The default binding for layout cell 'nfet50tw4(Generic)' will be broken.
Preprocessing schematic network phase 2
Preprocessing layout network phase 2
cpu=0.00m  wall=0.03m  mem=43.29mb

Finished /opt/cadence/ASSURA41/tools/assura/bin/nvn
*WARNING* '?expandCellToParent' list: No cell name match for psbd*
*WARNING* '?expandCellToParent' list: No cell name match for sbd*
*WARNING* '?expandCellToParent' list: No cell name match for corrPoint
*WARNING* '?expandCellToParent' list: No cell name match for coupledwire*
*WARNING* '?expandCellToParent' list: No cell name match for singlewire*
*WARNING* '?expandCellToParent' list: No cell name match for vncap*
*WARNING* '?expandCellToParent' list: No cell name match for esdndsx*
*WARNING* '?expandCellToParent' list: No cell name match for esdvpnpnw*
*WARNING* '?expandCellToParent' list: No cell name match for esdnfet*
*WARNING* '?expandCellToParent' list: No cell name match for k1res*
*WARNING* '?expandCellToParent' list: No cell name match for mosvar*
*WARNING* '?expandCellToParent' list: No cell name match for bondpad*
*WARNING* '?expandCellToParent' list: No cell name match for symind*
*WARNING* '?expandCellToParent' list: No cell name match for ind*
*WARNING* '?expandCellToParent' list: No cell name match for mimhk*
*WARNING* '?expandCellToParent' list: No cell name match for mim*
*WARNING* '?expandCellToParent' list: No cell name match for dualmim*
*WARNING* '?expandCellToParent' list: No cell name match for havar*
*WARNING* '?expandCellToParent' list: No cell name match for mosvar*
*WARNING* '?expandCellToParent' list: No cell name match for diffmosvar*
*WARNING* '?expandCellToParent' list: No cell name match for opn*
*WARNING* '?expandCellToParent' list: No cell name match for oppp*
*WARNING* '?expandCellToParent' list: No cell name match for oprr*
*WARNING* '?expandCellToParent' list: No cell name match for nwpc*
*WARNING* '?expandCellToParent' list: No cell name match for divpnp
*WARNING* '?expandCellToParent' list: No cell name match for dipdnw
*WARNING* '?expandCellToParent' list: No cell name match for zvtnfet*
*WARNING* '?expandCellToParent' list: No cell name match for pfet*
*WARNING* '?expandCellToParent' list: No cell name match for nfet*
*WARNING* '?expandCellToParent' list: No cell name match for efuse*
*WARNING* '?expandCellToParent' list: No cell name match for esdndpi*
*WARNING* '?expandCellToParent' list: No cell name match for esdpnpi*
*WARNING* '?expandCellToParent' list: No cell name match for jfetjc*
*WARNING* '?expandCellToParent' list: No cell name match for vlnpn*
*WARNING* '?expandCellToParent' list: No cell name match for rr_serpentine*
*WARNING* '?expandCellToParent' list: No cell name match for p5pfet50
*WARNING* '?expandCellToParent' list: No cell name match for esdnsh_base*
*WARNING* '?expandCellToParent' list: No cell name match for esdpsh_base*
*WARNING* '?expandCellToParent' list: No cell name match for devicepad*
*WARNING* '?expandCellToParent' list: No cell name match for p5pcdcap*

Building the VDB part 3 in background mode.

Finished building the VDB. VDB build times for main process:
cpu: 0.56  elap: 21  pf: 0  in: 0  out: 102848  virt: 125M  phys: 686M

Running the Task Processor, 2 cells, 21357 steps...

Top Cell is 'SL layout Julian_Shifts_And_Mux'

Executing: bkgnd = geomBkgnd()

Executing: ns = geomAndNot(NS_drawing ti)

Executing: nw = geomAndNot(NW_drawing ti)

Executing: ca = geomOr(CA_drawing_net CABAR_drawing_net CA_bb)

Executing: ca_input = geomOr(ca)

Executing: m1_bb = geomAndNot(m1_bb m1_RES_bb)

Executing: m1 = geomOr(m1 m1_bb M1_pin)

Executing: v1 = geomOr(V1_drawing_net V1BAR_drawing V1_bb)

Executing: v1_input = geomOr(v1)

Executing: m2_bb = geomAndNot(m2_bb m2_RES_bb)

Executing: m2 = geomOr(m2 m2_bb M2_pin)

Executing: v2 = geomOr(V2_drawing_net V2BAR_drawing V2_bb)

Executing: v2_input = geomOr(v2)

Executing: m3_bb = geomAndNot(m3_bb m3_RES_bb)

Executing: m3 = geomOr(m3 m3_bb M3_pin)

Executing: v3 = geomOr(V3_drawing_net V3BAR_drawing V3_bb)

Executing: v3_input = geomOr(v3)

Executing: m4_bb = geomAndNot(m4_bb m4_RES_bb)

Executing: m4 = geomOr(m4 m4_bb M4_pin)

Executing: v4 = geomOr(V4_drawing_net V4BAR_drawing V4_bb)

Executing: v4_input = geomOr(v4)

Executing: mt_bb = geomAndNot(mt_bb mt_RES_bb)

Executing: mt = geomOr(mt mt_bb MT_pin)

Executing: FT_bb = geomAndNot(FT_bb qt_bb)

Executing: ft = geomOr(FT_drawing_net FT_bb)

Executing: ft_input = geomOr(ft)

Executing: bondPadFilter = geomSize(PAD_DEV -0.1)

Executing: wb_pad_dv = geomAnd(dv geomOr(bondPadFilter LVSDG6))

Executing: wb_pad_lv = geomAnd(lv geomOr(bondPadFilter LVSDG6))

Executing: am_bb = geomAndNot(am_bb am_RES_bb)

Executing: am = geomOr(am am_bb AM_pin)

Executing: bondPad = geomAnd(bondPadFilter am)

Executing: bondPad_via = geomAnd(am bondPad)

Executing: bondPad_top = geomOr(bondPad)

Executing: padOverDev = geomAnd(geomOutside(LVSDG6 bondPad) am)

Executing: padOverDev_top = geomOr(padOverDev)

Executing: padOverDev_via = geomAnd(am_padOverDev padOverDev)

Executing: wb_pad_dv_via = geomAnd(wb_pad_dv geomOr(bondPad padOverDev))

Executing: wb_pad_lv_via = geomAnd(wb_pad_lv geomOr(bondPad padOverDev))

Executing: pc = geomOr(pc geomAnd(pc PC_pin) pc_bb)

Executing: pc_input = geomOr(pc)

Executing: rx_input = geomOr(rx)

Executing: pc_ISO = geomOverlap(pc geomOr(ISODEV FLTGATE))

Executing: rx = geomAndNot(rx pc_ISO)

Executing: bp_not_bb = geomAndNot(bp bb)

Executing: pc_fill = geomOutside(geomInside(geomEnclose(pc rx) GRLOGIC) ca)

Executing: rx_fill = geomOutside(rx geomOr(ca pi))

Executing: rx = geomAndNot(rx geomOr(pc_fill))

Executing: rx = geomOr(geomOverlap(rx ca) geomOverlap(rx nw (keep > 1)))

Executing: ind_xy = geomAnd(ind_xy ind)

Executing: RF = geomSize(RF 0.25)

Executing: ESD_ALL = geomOr(ESD_DRC ESD_cdm)

Executing: errorLayer(geomOutside(geomAndNot(sblk op) ESD_ALL) "SBLK without OP")

Executing: op_temp = geomOutside(op sblk)

Executing: sblk = geomAnd(op sblk)

Executing: sblk_over_pc = geomOverlap(sblk pc)

Executing: sblk = geomAndNot(sblk geomSize(pc 0.01))

Executing: op = geomOr(op_temp)

Executing: ESD_nsnw = geomOverlap(geomOr(ns nw) ESD_DEV)

Executing: ESD_pdif = geomOverlap(geomOr(bp pd) ESD_DEV)

Executing: ESD_pdnw = geomOverlap(ESD_DEV geomGetRectangle(geomAnd(ESD_pdif ESD_nsnw)))

Executing: ESD_pdnw_all = geomOr(ESD_pdnw)

Executing: ESD_pdnw_diode = geomOutside(ESD_pdnw GRLOGIC)

Executing: ESD_pdnw_subc = geomOutside(geomOverlap(geomAnd(rx ESD_pdif) ESD_pdnw) ESD_nsnw)

Executing: ESD_pdnw_plus = geomOverlap(geomOverlap(geomAnd(rx ESD_pdif) ESD_pdnw) ESD_nsnw)

Executing: ESD_pdnw_minus = geomOverlap(geomAndNot(rx ESD_pdif) ESD_pdnw)

Executing: geomHoles(ESD_pdnw_minus)

Executing: ESD_pdnw_minus_term = geomOr(ESD_pdnw_minus geomSize(ESD_pdnw_minus_hole 0.1))

Executing: ESD_pdnw_minus_via = geomAnd(ESD_pdnw_minus_term ESD_pdnw_minus)

Executing: rx = geomAndNot(rx ESD_pdnw_plus)

Executing: VPNPnw = geomAnd(ESD_DEV geomEnclose(nw bp))

Executing: ESD_vpnp_pdif = geomOr(VPNPnw ESD_pdif)

Executing: ESD_ndsx = geomOutside(ESD_DEV VPNPnw)

Executing: ESD_ndsx_all = geomOr(ESD_ndsx)

Executing: ESD_ndsx_minus = geomInside(geomOutside(rx ESD_vpnp_pdif) ESD_DEV)

Executing: ESD_ndsx_minus = geomOr(geomOverlap(nw ESD_ndsx_minus) ESD_ndsx_minus)

Executing: ESD_ndsx_plus = geomOutside(ESD_pdif VPNPnw)

Executing: geomHoles(ESD_ndsx_plus)

Executing: ESD_ndsx_plus_term = geomOr(ESD_ndsx_plus geomSize(ESD_ndsx_plus_hole 0.1))

Executing: ESD_ndsx_plus_via = geomAnd(ESD_ndsx_plus_term ESD_ndsx_plus)

Executing: ESD_pdnw_pi = geomOverlap(ESD_pdnw pi)

Executing: ESD_pdnw = geomOutside(ESD_pdnw pi)

Executing: ESD_pdnw_diode = geomOutside(ESD_pdnw_diode pi)

Executing: ESD_ndsx_pi = geomOverlap(ESD_ndsx pi)

Executing: ESD_ndsx_GR_sized = geomOverlap(geomSize(geomAnd(geomOverlap(geomOutside(ESD_...

Executing: ESD_ndsx_GR = geomOutside(geomOverlap(geomOutside(ESD_ndsx pi) GRLOGIC) ESD_n...

Executing: ESD_ndsx = geomOutside(geomOutside(ESD_ndsx pi) GRLOGIC)

Executing: ESD_pdnw_diode_GR_sized = geomOverlap(geomSize(geomAnd(geomOverlap(ESD_pdnw G...

Executing: ESD_pdnw_diode_GR = geomOutside(geomOverlap(ESD_pdnw GRLOGIC) ESD_pdnw_diode_...

Executing: ESD_nw = geomOverlap(nw ESD_DEV)

Executing: nw = geomOutside(nw geomOr(ESD_pdnw ESD_ndsx))

Executing: ESD_ns = geomOverlap(ns ESD_DEV)

Executing: ns = geomOutside(ns geomOr(ESD_DEV ESD_ndsx))

Executing: recognized_device = geomOr(ESD_pdnw ESD_ndsx ESD_pdnw_pi ESD_ndsx_pi ESD_ndsx...

Executing: efuse = geomOr(pcFuse)

Executing: efuse_cath = geomOr(drc(geomButting(pc efuse) (area > 3)))

Executing: efuse_anod = geomOr(drc(geomButting(pc efuse) (area < 3)))

Executing: efuse_err1 = geomOutside(efuse bp)
	   errorLayer(efuse_err1 "efuse device without bp")

Executing: efuse_err2 = geomAnd(efuse geomOr(ns rx jd pi rn nw nr pr bb dg tg rr rp pd op))
	   errorLayer(efuse_err2 "efuse device touching ns,rx,jd,pi,rn,nw,nr,pr,bb,dg,tg,rr,rp,pd,op")

Executing: HAVAR = geomEnclose(ns geomOverlap(jd rx))

Executing: havar_err = geomAndNot(HAVAR bb)
	   errorLayer(havar_err "HAVAR device missing bb")

Executing: hvr_mul = geomOverlap(HAVAR multi)

Executing: hvr_dev = geomOr(HAVAR)

Executing: hvr_cath = geomAnd(HAVAR geomAnd(rx rn))

Executing: hvr_anod = geomAnd(HAVAR geomAndNot(rx rn))

Executing: hvr_dev_err = geomAnd(hvr_dev geomOr(pi nw nr pr dg pc rr rp pd op))
	   errorLayer(hvr_dev_err "HAVAR device touching pi,nw,nr,pr,dg,tg,pc,rr,rp,pd,op")

Executing: recognized_device = geomOr(recognized_device HAVAR)

Executing: diffhavar_dev = geomOverlap(HAVAR DiffMOSvar)

Executing: width_label_h_edge = geomSize(geomGetEdge(width_label coincident hvr_anod) 0.1)

Executing: width_label_dhvr = geomButting(width_label width_label_h_edge (keep == 3))

Executing: hvr_dev = geomOutside(hvr_dev DiffMOSvar)

Executing: var_rx = geomAnd(rx geomOr(hvr_dev diffhavar_dev))

Executing: rx = geomAndNot(rx geomOr(hvr_anod))

Executing: geomHoles(geomAndNot(pd recognized_device))

Executing: SBD = geomOutside(geomOutside(geomEnclose(geomAnd(SBD_in bb) geomAnd(rx pd_ho...

Executing: SBD_A = geomInside(geomStraddle(IBM_LayerCopy(rx) pd_hole) SBD)

Executing: SBD_C = geomAnd(geomAnd(rx rn) SBD)

Executing: pd_hole_sbd = geomAnd(pd_hole SBD_A)

Executing: width_label_s_edge = geomSize(geomGetEdge(width_label coincident pd_hole_sbd)...

Executing: width_label_sbd = geomButting(width_label width_label_s_edge (keep == 3))

Executing: sbd_err = geomOutside(SBD ns)
	   errorLayer(sbd_err "SBD device without NS")

Executing: sbd_err2 = geomStraddle(ns SBD)
	   errorLayer(sbd_err2 "NS straddling SBD device")

Executing: SBD_err3 = geomAnd(SBD geomOr(jd pi nw nr pr dg tg pc rr rp op))
	   errorLayer(SBD_err3 "SBD device touching jd,pi,nw,nr,pr,dg,tg,pc,rr,rp,op")

Executing: recognized_device = geomOr(recognized_device SBD)

Executing: rx = geomAndNot(rx geomOr(SBD_A))

Executing: SBDNW = geomOutside(geomOutside(geomInside(geomEnclose(geomEnclose(SCHKY bb) ...

Executing: SBDNW_A = geomInside(geomAnd(IBM_LayerCopy(rx) bb) SBDNW)

Executing: SBDNW_C = geomInside(geomAndNot(rx SBDNW_A) SBDNW)

Executing: width_label_snw_edge = geomSize(geomGetEdge(width_label coincident SBDNW_A) 0.1)

Executing: width_label_sbdnw = geomButting(width_label width_label_snw_edge (keep == 3))

Executing: sbdnw_err = geomAndNot(SBDNW nw)
	   errorLayer(sbdnw_err "SBDNW device must be covered by NW")

Executing: sbdnw_err3 = geomAnd(SBDNW geomOr(ns jd pi rn nr pr dg tg pc rr rp op))
	   errorLayer(sbdnw_err3 "SBDNW device touching ns,jd,pi,rn,nr,pr,dg,tg,pc,rr,rp,op")

Executing: recognized_device = geomOr(recognized_device SBDNW)

Executing: rx = geomAndNot(rx geomOr(SBDNW_A))

Executing: psbd_rev = geomGetTexted(SBD_in DEVICE_ID_TXT "PSBD-DEVICE")

Executing: PSBD = geomOutside(geomOutside(geomOverlap(geomEnclose(geomEnclose(geomEnclos...

Executing: PSBD_A = geomInside(geomAnd(IBM_LayerCopy(rx) pd) PSBD)

Executing: PSBD_C = geomInside(geomAndNot(rx PSBD_A) PSBD)

Executing: width_lbl_psbd_edge = geomSize(geomGetEdge(width_label coincident PSBD_C) 0.1)

Executing: width_label_psbd = geomButting(width_label width_lbl_psbd_edge (keep == 3))

Executing: psbd_err = geomAnd(PSBD geomOr(ns jd rn nr pr dg tg pc rr rp op))
	   errorLayer(psbd_err "PSBD device touching ns,jd,rn,nr,pr,dg,tg,pc,rr,rp,op")

Executing: psbd_err2 = geomOutside(PSBD bb)
	   errorLayer(psbd_err2 "PSBD device missing bb")

Executing: recognized_device = geomOr(recognized_device PSBD)

Executing: rx = geomAndNot(rx geomOr(PSBD_A PSBD_C))

Executing: DI_diode = geomOverlap(nw di)

Executing: DI_anode = geomOverlap(geomInside(IBM_LayerCopy(rx) di) DI_diode)

Executing: DI_cathode = geomAnd(geomOutside(rx di) DI_diode)

Executing: DI_FILTER = geomSize(DI_diode 0.94)

Executing: DI_vpnp_sharing_coll = geomSize(DI_diode 0.5)

Executing: DI_VPNP = geomOverlap(DI_vpnp_sharing_coll bperi)

Executing: DI_coll = geomOutside(geomOverlap(IBM_LayerCopy(rx) DI_VPNP) DI_diode)

Executing: DI_diode = geomOutside(DI_diode DI_VPNP)

Executing: DI_diode_err1 = geomOutside(DI_diode bp)
	   errorLayer(DI_diode_err1 "DI Diode device without bp")

Executing: DI_diode_err2 = geomAnd(DI_diode geomOr(ns jd pi rn nr pr bb dg tg pc rr rp p...
	   errorLayer(DI_diode_err2 "DI Diode device touching ns,jd,pi,rn,nr,pr,bb,dg,tg,pc,rr,rp,pd,op")

Executing: recognized_device = geomOr(recognized_device DI_FILTER DI_VPNP)

Executing: DIPI_diode1 = geomEnclose(pi DIPI)

Executing: DIPI_diode_pd = geomAnd(bp DIPI_diode1)

Executing: bp = geomAndNot(bp DIPI_diode_pd)

Executing: DIPI_diode = geomSize(DIPI_diode1 1.6)

Executing: DIPI_FILTER = geomSize(DIPI_diode1 2.1)

Executing: DIPI_cathode = geomOverlap(geomInside(IBM_LayerCopy(rx) DIPI) DIPI_diode)

Executing: DIPI_anode = geomOverlap(geomAnd(rx DIPI_diode_pd) DIPI_diode)

Executing: DIPI_iso_node = geomAnd(geomAnd(rx nw) DIPI_diode)

Executing: DIPI_subc = geomOverlap(geomAnd(rx bp) DIPI_diode)

Executing: DIPI_diode_err2 = geomAnd(DIPI_diode geomOr(ns jd rn nr pr bb dg rr rp pd op))
	   errorLayer(DIPI_diode_err2 "DIPI Diode device touching ns,jd,rn,nr,pr,bb,dg,rr,rp,pd,op")

Executing: DIPI_diode_err3 = geomAnd(DIPI geomOr(nw bp))
	   errorLayer(DIPI_diode_err3 "DIPI Diode device touching nw,bp")

Executing: recognized_device = geomOr(recognized_device DIPI_diode DIPI_FILTER)

Executing: pcap_dev = geomOutside(geomAnd(geomOverlap(pi geomOutside(geomAnd(pc rx) geom...

Executing: pcap_dev_pd = geomAnd(bp pcap_dev)

Executing: pcap_pc = geomOverlap(IBM_LayerCopy(pc) pcap_dev)

Executing: pcap_pdiff = geomOverlap(geomAnd(IBM_LayerCopy(rx) pcap_dev_pd) pcap_dev)

Executing: pcap_rxpc = geomAnd(pcap_pdiff pc)

Executing: pcap_rx = geomAndNot(pcap_pdiff pcap_rxpc)

Executing: pcap_gates = geomOverlap(geomAnd(IBM_LayerCopy(rx) IBM_LayerCopy(pc)) pcap_dev)

Executing: pcap_pc_length = geomSize(geomGetEdge(pcap_gates inside IBM_LayerCopy(pc)) -0...

Executing: pcap_rx_width = geomSize(geomGetEdge(pcap_gates inside IBM_LayerCopy(rx)) -0.05)

Executing: pcap_mul = geomOverlap(pcap_dev multi)

Executing: pcap_err = geomAnd(pcap_dev geomOr(ns jd rn nr pr bb dg rr rp pd op))
	   errorLayer(pcap_err "pcap device touching ns,jd,rn,nr,pr,bb,dg,rr,rp,pd,op")

Executing: pcap_err2 = geomAnd(pcap_dev tg)
	   errorLayer(pcap_err2 "pcap device touching tg")

Executing: pcap_pw = geomOverlap(geomAndNot(pi nw) pcap_dev)

Executing: rx = geomAndNot(rx pcap_rxpc)

Executing: nplus_in_pcap_pw = geomAnd(pcap_pw geomAndNot(rx bp))
	   errorLayer(nplus_in_pcap_pw "N+ diffusion in pcap pwell found")

Executing: recognized_device = geomOr(recognized_device pcap_dev)

Executing: vlnpn_rev = geomGetTexted(MOSvar DEVICE_ID_TXT "VLNPN-DEVICE")

Executing: vlnpn_dev = geomOutside(geomEnclose(bperi geomEnclose(pi geomEnclose(bipolar ...

Executing: ndiff_vlnpn = geomInside(geomOverlap(geomAndNot(rx bp) MOSvar) vlnpn_dev)

Executing: vlnpn_g = geomAndNot(geomAnd(pc ndiff_vlnpn) nw)

Executing: vlnpn_g_via = geomOr(vlnpn_g)

Executing: vlnpn_ce = geomButting(geomAndNot(geomAndNot(ndiff_vlnpn nw) pc) vlnpn_g)

Executing: vlnpn_c = geomOutside(vlnpn_ce drain_filter)

Executing: vlnpn_e = geomOverlap(vlnpn_ce drain_filter)

Executing: vlnpn_sub = geomOutside(geomOverlap(geomAnd(rx bp) vlnpn_dev) pi)

Executing: vlnpn_area = geomInside(geomAnd(pc rx) vlnpn_dev)

Executing: vlnpn_exl = geomSize(geomGetEdge(vlnpn_g butting vlnpn_e) -0.1)

Executing: vlnpn_err2 = geomAnd(vlnpn_dev geomOr(ns jd rn nr pr bb dg rr rp pd op))
	   errorLayer(vlnpn_err2 "vlnpn device touching ns,jd,rn,nr,pr,bb,dg,rr,rp,pd,op")

Executing: recognized_device = geomOr(recognized_device vlnpn_dev)

Executing: MOSVAR = geomOverlap(nw geomOutside(geomAnd(pc rx) geomOr(bp rn)))

Executing: mosvar_dev = geomOverlap(geomOverlap(MOSVAR geomAnd(pc rx)) MOSvar)

Executing: mosvar_pc = geomOverlap(IBM_LayerCopy(pc) mosvar_dev)

Executing: mosvar_nw = geomOverlap(IBM_LayerCopy(nw) mosvar_dev)

Executing: pc = geomAndNot(pc mosvar_pc)

Executing: mosvar_rx = geomAnd(geomAndNot(geomOverlap(IBM_LayerCopy(rx) mosvar_dev) pc) ...

Executing: mosvar_RX = geomOr(mosvar_rx)

Executing: mosvar_gates = geomOverlap(geomAnd(rx mosvar_pc) mosvar_dev)

Executing: mosvar_pc_length = geomSize(geomGetEdge(mosvar_gates inside mosvar_pc) -0.1)

Executing: mosvar_rx_width = geomSize(geomGetEdge(mosvar_gates inside rx) -0.05)

Executing: mosvar_mul = geomOverlap(mosvar_dev multi)

Executing: mosvar_err = geomAnd(mosvar_dev geomOr(dg))
	   errorLayer(mosvar_err "mosvar device touching dg")

Executing: recognized_device = geomOr(recognized_device mosvar_dev)

Executing: nw = geomAndNot(nw mosvar_nw)

Executing: mosvar50_dev = geomOverlap(mosvar_dev tg)

Executing: p5pcdcap50_d = geomOverlap(mosvar50_dev DECAP)

Executing: mosvar50_dev = geomOutside(mosvar50_dev DECAP)

Executing: p5pcdcap50_dev = geomGetTexted(p5pcdcap50_d DEVICE_ID_TXT "P5PCDCAP50-DEVICE")

Executing: mosvar_dev = geomOutside(mosvar_dev geomOr(tg))

Executing: diffmosvar_dev = geomOverlap(mosvar_dev DiffMOSvar)

Executing: mosvar_dev = geomOutside(mosvar_dev geomOr(DiffMOSvar))

Executing: ncap_dev = geomOutside(geomAnd(MOSVAR geomAnd(pc rx)) MOSvar)

Executing: ncap_pc = geomOverlap(IBM_LayerCopy(pc) ncap_dev)

Executing: ncap_nw = geomOverlap(IBM_LayerCopy(nw) ncap_dev)

Executing: ncap_rx = geomAnd(geomAndNot(geomOverlap(rx ncap_dev) geomOr(pc bp)) ncap_nw)

Executing: ncap_gates = geomOverlap(geomAnd(rx pc) ncap_dev)

Executing: decap_rx = geomAnd(geomOverlap(geomAnd(rx pc) ncap_dev) ncap_nw)

Executing: ncap_rx = geomOr(ncap_rx geomAnd(GRLOGIC decap_rx))

Executing: ndiff_in_ncap_nw = geomAnd(geomAndNot(geomOutside(rx ncap_dev) geomOr(pc bp))...

Executing: ncap_ndiff = geomOr(ncap_rx ndiff_in_ncap_nw)

Executing: pplus_in_ncap_nw = geomAnd(ncap_nw geomAnd(rx bp))
	   errorLayer(pplus_in_ncap_nw "P+ diffusion in ncap nwell found")

Executing: ncap_pc_length = geomSize(geomGetEdge(ncap_gates inside pc) -0.1)

Executing: ncap_rx_width = geomSize(geomGetEdge(ncap_gates inside rx) -0.1)

Executing: ncap_mul = geomOverlap(ncap_dev multi)

Executing: MOSVAR_err2 = geomAnd(MOSVAR geomOr(ns jd pi rn nr pr bp rr rp pd op))
	   errorLayer(MOSVAR_err2 "mosvar or ncap device touching ns,jd,pi,rn,nr,pr,bp,rr,rp,pd,op")

Executing: pc = geomAndNot(pc ncap_pc)

Executing: nw = geomAndNot(nw ncap_nw)

Executing: recognized_device = geomOr(recognized_device ncap_dev)

Executing: ncap33_dev = geomOverlap(ncap_dev dg)

Executing: ncap_dev = geomOutside(ncap_dev dg)

Executing: ncap50_dev = geomOverlap(ncap_dev tg)

Executing: ncap_dev = geomOutside(ncap_dev tg)

Executing: ncap_n1 = geomGetEdge(geomOr(mosvar_nw ncap_nw) inside rx)

Executing: ncap_ndo = geomSize(ncap_n1 0.01)

Executing: ncap_ndi = geomSize(ncap_n1 -0.01)

Executing: ncap_nd = geomOr(ncap_ndo ncap_ndi)

Executing: rx = geomAndNot(rx mosvar_rx)

Executing: rx = geomAndNot(rx geomOr(ncap_rx decap_rx))

Executing: JFET = geomOverlap(jc geomAnd(rx bp))

Executing: jfet_err = geomAndNot(JFET pi)
	   errorLayer(jfet_err "JFET device not over pi")

Executing: jfet_dev = geomOr(JFET)

Executing: jfet_dev_sized = geomSize(jfet_dev 2.0)

Executing: jfet_rx = geomOverlap(rx JFET)

Executing: jfet_gate = geomAnd(jfet_rx bp)

Executing: jfet_G = geomAnd(jfet_gate JFET)

Executing: jfet_sd = geomAndNot(jfet_rx bp)

Executing: jfet_drain = geomOverlap(jfet_sd drain_filter)

Executing: jfet_source = geomOutside(jfet_sd drain_filter)

Executing: width_lbl_jfet_edge = geomSize(geomGetEdge(width_label coincident jfet_sd) 0.1)

Executing: width_label_jfet = geomButting(width_label width_lbl_jfet_edge (keep >= 3))

Executing: width_label_jfet_sd = geomAnd(jfet_sd width_label_jfet)

Executing: jfet_dev_err = geomAnd(jfet_dev geomOr(ns jd rn nr pr bb dg tg pc rr rp pd op))
	   errorLayer(jfet_dev_err "JFET device touching ns,jd,rn,nr,pr,bb,dg,tg,pc,rr,rp,pd,op")

Executing: recognized_device = geomOr(recognized_device JFET)

Executing: butt_rx = geomGetEdge(bp inside rx)

Executing: butt_rxn = geomSize(butt_rx 0.1 edges)

Executing: butt_rxp = geomSize(butt_rx -0.1 edges)

Executing: butt_top = geomOr(butt_rxn butt_rxp)

Executing: ndiff = geomAndNot(rx bp)

Executing: nfet_gate = geomOutside(geomAndNot(geomAnd(pc ndiff) nw) recognized_device)

Executing: nfet_dev_polygon = geomGetPolygon(nfet_gate)

Executing: nfet_gate_gns = geomOverlap(sblk_over_pc nfet_gate)

Executing: nfet_dev_b = geomOutside(geomOr(nfet_dev_polygon) nr)

Executing: nfet_dev = geomOutside(nfet_gate geomOr(nfet_dev_b dg dgv tg ZVT nr))

Executing: nfet_dev_TG = geomAndNot(geomAnd(geomOutside(geomAndNot(nfet_gate nfet_dev_b)...

Executing: nfet_dev_MV = geomAndNot(geomAnd(geomAnd(geomOutside(geomAndNot(nfet_gate nfe...

Executing: nfet_dev_HV = geomAndNot(geomAnd(geomOutside(geomAndNot(nfet_gate nfet_dev_b)...

Executing: nfet_dev_HVT = geomAndNot(geomAnd(geomAndNot(nfet_gate nfet_dev_polygon) nr) ...

Executing: nfet_dev_HVT_b = geomAndNot(geomAnd(nfet_dev_polygon nr) geomOr(dg dgv))

Executing: nfzv_dev = geomOverlap(geomAndNot(nfet_gate geomOr(nfet_dev_polygon nfet_dev_...

Executing: nfzv_dev_HV = geomOverlap(geomAndNot(nfet_gate geomOr(nfet_dev_polygon nfet_d...

Executing: nfet_sd = geomButting(geomAndNot(geomAndNot(ndiff nw) geomOr(pc rn op sblk)) ...

Executing: nfet_fingers = geomInside(nfet_dev multi)

Executing: nfzv_fingers = geomInside(nfzv_dev multi)

Executing: nfzv_fingers_HV = geomInside(nfzv_dev_HV multi)

Executing: nfet_fingers_MV = geomInside(nfet_dev_MV multi)

Executing: nfet_fingers_TG = geomInside(nfet_dev_TG multi)

Executing: nfet_fingers_HV = geomInside(nfet_dev_HV multi)

Executing: nfet_fingers_HVT = geomInside(nfet_dev_HVT multi)

Executing: nfet_mul = geomStraddle(rx nfet_fingers)

Executing: nfzv_mul = geomStraddle(rx nfzv_fingers)

Executing: nfzv_mul_HV = geomStraddle(rx nfzv_fingers_HV)

Executing: nfet_mul_MV = geomStraddle(rx nfet_fingers_MV)

Executing: nfet_mul_HV = geomStraddle(rx nfet_fingers_HV)

Executing: nfet_mul_TG = geomStraddle(rx nfet_fingers_TG)

Executing: nfet_mul_HVT = geomStraddle(rx nfet_fingers_HVT)

Executing: nfet_dev = geomOutside(nfet_dev multi)

Executing: nfzv_dev = nfzv_dev = nfzv_dev = geomOutside(nfzv_dev multi)

Executing: nfzv_dev_HV = nfzv_dev_HV = nfzv_dev_HV = geomOutside(nfzv_dev_HV multi)

Executing: nfet_dev_TG = geomOutside(nfet_dev_TG multi)

Executing: nfet_dev_MV = geomOutside(nfet_dev_MV multi)

Executing: nfet_dev_HV = geomOutside(nfet_dev_HV multi)

Executing: nfet_dev_HVT = geomOutside(nfet_dev_HVT multi)

Executing: nfRF_dev_psp = geomOverlap(geomOverlap(rx geomOverlap(nfet_dev RF)) psp_model)

Executing: nfRF_mul_psp = geomOverlap(geomOverlap(rx geomOverlap(nfet_mul RF)) psp_model)

Executing: nfRF_dev_psp_MV = geomOverlap(geomOverlap(rx geomOverlap(nfet_dev_MV RF)) psp...

Executing: nfRF_mul_psp_MV = geomOverlap(geomOverlap(rx geomOverlap(nfet_mul_MV RF)) psp...

Executing: nfRF_dev_psp_HV = geomOverlap(geomOverlap(rx geomOverlap(nfet_dev_HV RF)) psp...

Executing: nfRF_mul_psp_HV = geomOverlap(geomOverlap(rx geomOverlap(nfet_mul_HV RF)) psp...

Executing: nfRF_dev = geomOutside(geomOverlap(rx geomOverlap(nfet_dev RF)) psp_model)

Executing: nfRF_mul = geomOutside(geomOverlap(rx geomOverlap(nfet_mul RF)) psp_model)

Executing: nfRF_dev_MV = geomOutside(geomOverlap(rx geomOverlap(nfet_dev_MV RF)) psp_model)

Executing: nfRF_mul_MV = geomOutside(geomOverlap(rx geomOverlap(nfet_mul_MV RF)) psp_model)

Executing: nfRF_dev_HV = geomOutside(geomOverlap(rx geomOverlap(nfet_dev_HV RF)) psp_model)

Executing: nfRF_mul_HV = geomOutside(geomOverlap(rx geomOverlap(nfet_mul_HV RF)) psp_model)

Executing: nfRF_dev_TG = geomOverlap(rx geomOverlap(nfet_dev_TG RF))

Executing: nfRF_mul_TG = geomOverlap(rx geomOverlap(nfet_mul_TG RF))

Executing: nfet_dev_psp_b = geomOverlap(geomOutside(nfet_dev_b RF) psp_model)

Executing: nfet_dev_psp = geomOverlap(geomOutside(nfet_dev RF) psp_model)

Executing: nfet_mul_psp = geomOverlap(geomOutside(nfet_mul RF) psp_model)

Executing: nfet_dev_psp_MV = geomOverlap(geomOutside(nfet_dev_MV RF) psp_model)

Executing: nfet_mul_psp_MV = geomOverlap(geomOutside(nfet_mul_MV RF) psp_model)

Executing: nfet_dev_psp_HV = geomOverlap(geomOutside(nfet_dev_HV RF) psp_model)

Executing: nfet_mul_psp_HV = geomOverlap(geomOutside(nfet_mul_HV RF) psp_model)

Executing: nfet_dev_b = geomOutside(geomOutside(nfet_dev_b RF) psp_model)

Executing: nfet_dev = geomOutside(geomOutside(nfet_dev RF) psp_model)

Executing: nfet_mul = geomOutside(geomOutside(nfet_mul RF) psp_model)

Executing: nfet_dev_MV = geomOutside(geomOutside(nfet_dev_MV RF) psp_model)

Executing: nfet_mul_MV = geomOutside(geomOutside(nfet_mul_MV RF) psp_model)

Executing: nfet_dev_HV = geomOutside(geomOutside(nfet_dev_HV RF) psp_model)

Executing: nfet_mul_HV = geomOutside(geomOutside(nfet_mul_HV RF) psp_model)

Executing: nfet_dev_HVT = nfet_dev_HVT = nfet_dev_HVT = geomOutside(nfet_dev_HVT RF)

Executing: nfet_dev_HVT_b = nfet_dev_HVT_b = nfet_dev_HVT_b = geomOutside(nfet_dev_HVT_b...

Executing: nfet_mul_TG = geomOutside(nfet_mul_TG RF)

Executing: nfet_dev_TG = geomOutside(nfet_dev_TG RF)

Executing: nfet_mul_HVT = geomOutside(nfet_mul_HVT RF)

Executing: nfeti_bottom_iso = geomSize(pi 1.0)

Executing: pwell_base = geomAndNot(pi geomOr(nw geomOr(DIPI_diode PSBD)))

Executing: pwell_ndpi = geomOverlap(pwell_base ESD_ndsx_pi)

Executing: pwell = geomAndNot(pwell_base pwell_ndpi)

Executing: pwell_diff = geomAnd(pwell geomOr(ESD_ndsx_plus geomAnd(rx bp)))

Executing: nfettw_all = geomOverlap(nfet_gate six_term)

Executing: nfeti_dev_psp = nfeti_dev_psp = nfeti_dev_psp = geomOverlap(nfet_dev_psp six_...

Executing: nfet6_dev_psp = nfet6_dev_psp = nfet6_dev_psp = geomEmpty()

Executing: nfeti_mul_psp = geomOverlap(nfet_mul_psp six_term)

Executing: nfet6_mul_psp = geomEmpty()

Executing: nfeti_dev_psp_MV = nfeti_dev_psp_MV = nfeti_dev_psp_MV = geomOverlap(nfet_dev...

Executing: nfet6_dev_psp_MV = nfet6_dev_psp_MV = nfet6_dev_psp_MV = geomEmpty()

Executing: nfeti_mul_psp_MV = geomOverlap(nfet_mul_psp_MV six_term)

Executing: nfet6_mul_psp_MV = geomEmpty()

Executing: nfeti_dev_psp_HV = nfeti_dev_psp_HV = nfeti_dev_psp_HV = geomOverlap(nfet_dev...

Executing: nfet6_dev_psp_HV = nfet6_dev_psp_HV = nfet6_dev_psp_HV = geomEmpty()

Executing: nfeti_mul_psp_HV = geomOverlap(nfet_mul_psp_HV six_term)

Executing: nfet6_mul_psp_HV = geomEmpty()

Executing: nfeti_dev_psp_b = nfeti_dev_psp_b = nfeti_dev_psp_b = geomOverlap(nfet_dev_ps...

Executing: nfet6_dev_psp_b = nfet6_dev_psp_b = nfet6_dev_psp_b = geomEmpty()

Executing: nfeti_dev = nfeti_dev = nfeti_dev = geomOverlap(nfet_dev six_term)

Executing: nfet6_dev = nfet6_dev = nfet6_dev = geomEmpty()

Executing: nfeti_mul = geomOverlap(nfet_mul six_term)

Executing: nfet6_mul = geomEmpty()

Executing: nfeti_dev_MV = nfeti_dev_MV = nfeti_dev_MV = geomOverlap(nfet_dev_MV six_term)

Executing: nfet6_dev_MV = nfet6_dev_MV = nfet6_dev_MV = geomEmpty()

Executing: nfeti_mul_MV = geomOverlap(nfet_mul_MV six_term)

Executing: nfet6_mul_MV = geomEmpty()

Executing: nfeti_dev_HV = nfeti_dev_HV = nfeti_dev_HV = geomOverlap(nfet_dev_HV six_term)

Executing: nfet6_dev_HV = nfet6_dev_HV = nfet6_dev_HV = geomEmpty()

Executing: nfeti_mul_HV = geomOverlap(nfet_mul_HV six_term)

Executing: nfet6_mul_HV = geomEmpty()

Executing: nfeti_dev_TG = nfeti_dev_TG = nfeti_dev_TG = geomOverlap(nfet_dev_TG six_term)

Executing: nfet6_dev_TG = nfet6_dev_TG = nfet6_dev_TG = geomEmpty()

Executing: nfeti_mul_TG = geomOverlap(nfet_mul_TG six_term)

Executing: nfet6_mul_TG = geomEmpty()

Executing: nfeti_dev_b = nfeti_dev_b = nfeti_dev_b = geomOverlap(nfet_dev_b six_term)

Executing: nfet6_dev_b = nfet6_dev_b = nfet6_dev_b = geomEmpty()

Executing: nfRFi_dev_psp = geomOverlap(nfRF_dev_psp six_term)

Executing: nfRF6_dev_psp = geomEmpty()

Executing: nfRFi_mul_psp = geomOverlap(nfRF_mul_psp six_term)

Executing: nfRF6_mul_psp = geomEmpty()

Executing: nfRFi_dev_psp_MV = geomOverlap(nfRF_dev_psp_MV six_term)

Executing: nfRF6_dev_psp_MV = geomEmpty()

Executing: nfRFi_mul_psp_MV = geomOverlap(nfRF_mul_psp_MV six_term)

Executing: nfRF6_mul_psp_MV = geomEmpty()

Executing: nfRFi_dev_psp_HV = geomOverlap(nfRF_dev_psp_HV six_term)

Executing: nfRF6_dev_psp_HV = geomEmpty()

Executing: nfRFi_mul_psp_HV = geomOverlap(nfRF_mul_psp_HV six_term)

Executing: nfRF6_mul_psp_HV = geomEmpty()

Executing: nfRFi_dev = geomOverlap(nfRF_dev six_term)

Executing: nfRF6_dev = geomEmpty()

Executing: nfRFi_mul = geomOverlap(nfRF_mul six_term)

Executing: nfRF6_mul = geomEmpty()

Executing: nfRFi_dev_MV = geomOverlap(nfRF_dev_MV six_term)

Executing: nfRF6_dev_MV = geomEmpty()

Executing: nfRFi_mul_MV = geomOverlap(nfRF_mul_MV six_term)

Executing: nfRF6_mul_MV = geomEmpty()

Executing: nfRFi_dev_HV = geomOverlap(nfRF_dev_HV six_term)

Executing: nfRF6_dev_HV = geomEmpty()

Executing: nfRFi_mul_HV = geomOverlap(nfRF_mul_HV six_term)

Executing: nfRF6_mul_HV = geomEmpty()

Executing: nfRFi_dev_TG = geomOverlap(nfRF_dev_TG six_term)

Executing: nfRF6_dev_TG = geomEmpty()

Executing: nfRFi_mul_TG = geomOverlap(nfRF_mul_TG six_term)

Executing: nfRF6_mul_TG = geomEmpty()

Executing: nfet_dev_psp_b = geomOutside(nfet_dev_psp_b geomOr(nfet6_dev_psp_b nfeti_dev_...

Executing: nfet_dev_b = geomOutside(nfet_dev_b geomOr(nfet6_dev_b nfeti_dev_b))

Executing: nfet_dev_psp = geomOutside(nfet_dev_psp geomOr(nfet6_dev_psp nfeti_dev_psp))

Executing: nfet_mul_psp = geomOutside(nfet_mul_psp geomOr(nfet6_mul_psp nfeti_mul_psp))

Executing: nfet_dev_psp_MV = geomOutside(nfet_dev_psp_MV geomOr(nfet6_dev_psp_MV nfeti_d...

Executing: nfet_mul_psp_MV = geomOutside(nfet_mul_psp_MV geomOr(nfet6_mul_psp_MV nfeti_m...

Executing: nfet_dev_psp_HV = geomOutside(nfet_dev_psp_HV geomOr(nfet6_dev_psp_HV nfeti_d...

Executing: nfet_mul_psp_HV = geomOutside(nfet_mul_psp_HV geomOr(nfet6_mul_psp_HV nfeti_m...

Executing: nfet_dev = geomOutside(nfet_dev geomOr(nfet6_dev nfeti_dev))

Executing: nfet_mul = geomOutside(nfet_mul geomOr(nfet6_mul nfeti_mul))

Executing: nfet_dev_MV = geomOutside(nfet_dev_MV geomOr(nfet6_dev_MV nfeti_dev_MV))

Executing: nfet_mul_MV = geomOutside(nfet_mul_MV geomOr(nfet6_mul_MV nfeti_mul_MV))

Executing: nfet_dev_HV = geomOutside(nfet_dev_HV geomOr(nfet6_dev_HV nfeti_dev_HV))

Executing: nfet_mul_HV = geomOutside(nfet_mul_HV geomOr(nfet6_mul_HV nfeti_mul_HV))

Executing: nfet_dev_TG = geomOutside(nfet_dev_TG geomOr(nfet6_dev_TG nfeti_dev_TG))

Executing: nfet_mul_TG = geomOutside(nfet_mul_TG geomOr(nfet6_mul_TG nfeti_mul_TG))

Executing: nfRF_dev_psp = geomOutside(nfRF_dev_psp geomOr(nfRF6_dev_psp nfRFi_dev_psp))

Executing: nfRF_mul_psp = geomOutside(nfRF_mul_psp geomOr(nfRF6_mul_psp nfRFi_mul_psp))

Executing: nfRF_dev_psp_MV = geomOutside(nfRF_dev_psp_MV geomOr(nfRF6_dev_psp_MV nfRFi_d...

Executing: nfRF_mul_psp_MV = geomOutside(nfRF_mul_psp_MV geomOr(nfRF6_mul_psp_MV nfRFi_m...

Executing: nfRF_dev_psp_HV = geomOutside(nfRF_dev_psp_HV geomOr(nfRF6_dev_psp_HV nfRFi_d...

Executing: nfRF_mul_psp_HV = geomOutside(nfRF_mul_psp_HV geomOr(nfRF6_mul_psp_HV nfRFi_m...

Executing: nfRF_dev = geomOutside(nfRF_dev geomOr(nfRF6_dev nfRFi_dev))

Executing: nfRF_mul = geomOutside(nfRF_mul geomOr(nfRF6_mul nfRFi_mul))

Executing: nfRF_dev_MV = geomOutside(nfRF_dev_MV geomOr(nfRF6_dev_MV nfRFi_dev_MV))

Executing: nfRF_mul_MV = geomOutside(nfRF_mul_MV geomOr(nfRF6_mul_MV nfRFi_mul_MV))

Executing: nfRF_dev_HV = geomOutside(nfRF_dev_HV geomOr(nfRF6_dev_HV nfRFi_dev_HV))

Executing: nfRF_mul_HV = geomOutside(nfRF_mul_HV geomOr(nfRF6_mul_HV nfRFi_mul_HV))

Executing: nfRF_dev_TG = geomOutside(nfRF_dev_TG geomOr(nfRF6_dev_TG nfRFi_dev_TG))

Executing: nfRF_mul_TG = geomOutside(nfRF_mul_TG geomOr(nfRF6_mul_TG nfRFi_mul_TG))

Executing: nfet_dpw_b = nfet_dpw_b = nfet_dpw_b = geomOverlap(nfet_dev_b pi)

Executing: nfet_dev_b = nfet_dev_b = nfet_dev_b = geomOutside(nfet_dev_b pi)

Executing: nfet_dpw_psp_b = nfet_dpw_psp_b = nfet_dpw_psp_b = geomOverlap(nfet_dev_psp_b...

Executing: nfet_dev_psp_b = nfet_dev_psp_b = nfet_dev_psp_b = geomOutside(nfet_dev_psp_b...

Executing: nfet_dpw = nfet_dpw = nfet_dpw = geomOverlap(nfet_dev pi)

Executing: nfet_dev = nfet_dev = nfet_dev = geomOutside(nfet_dev pi)

Executing: nfet_dpw_psp = nfet_dpw_psp = nfet_dpw_psp = geomOverlap(nfet_dev_psp pi)

Executing: nfet_dev_psp = nfet_dev_psp = nfet_dev_psp = geomOutside(nfet_dev_psp pi)

Executing: nfet_dpw_MV = nfet_dpw_MV = nfet_dpw_MV = geomOverlap(nfet_dev_MV pi)

Executing: nfet_dev_MV = nfet_dev_MV = nfet_dev_MV = geomOutside(nfet_dev_MV pi)

Executing: nfet_dpw_psp_MV = nfet_dpw_psp_MV = nfet_dpw_psp_MV = geomOverlap(nfet_dev_ps...

Executing: nfet_dev_psp_MV = nfet_dev_psp_MV = nfet_dev_psp_MV = geomOutside(nfet_dev_ps...

Executing: nfet_dpw_HV = nfet_dpw_HV = nfet_dpw_HV = geomOverlap(nfet_dev_HV pi)

Executing: nfet_dev_HV = nfet_dev_HV = nfet_dev_HV = geomOutside(nfet_dev_HV pi)

Executing: nfet_dpw_psp_HV = nfet_dpw_psp_HV = nfet_dpw_psp_HV = geomOverlap(nfet_dev_ps...

Executing: nfet_dev_psp_HV = nfet_dev_psp_HV = nfet_dev_psp_HV = geomOutside(nfet_dev_ps...

Executing: nfet_dpw_TG = nfet_dpw_TG = nfet_dpw_TG = geomOverlap(nfet_dev_TG pi)

Executing: nfet_dev_TG = nfet_dev_TG = nfet_dev_TG = geomOutside(nfet_dev_TG pi)

Executing: dual_poly_err = geomAnd(geomOutside(geomAndNot(geomStraddle(pc geomInside(geo...
	   errorLayer(dual_poly_err "Dual gate poly device without M1/CA connection")

Executing: dual_poly = geomInside(geomAnd(rx_input pc) dual_poly)

Executing: nfRF_drain = geomOverlap(geomAnd(nfet_sd RF) drain_filter)

Executing: nfRF_source = geomOutside(geomAnd(nfet_sd RF) drain_filter)

Executing: nfet_sd = geomOutside(nfet_sd RF)

Executing: RF_BULK = geomOverlap(RF nfet_gate)

Executing: ndiff = geomAndNot(ndiff pc)

Executing: res6n_bar = geomStraddle(ndiff geomOr(op sblk))

Executing: res6n_term = geomAndNot(res6n_bar geomOr(op sblk nfet_sd))

Executing: res6n_dev = geomAnd(res6n_bar op)

Executing: res6n_sblk = geomAnd(res6n_bar sblk)

Executing: res6n_err = geomAnd(geomOr(res6n_dev res6n_sblk) geomOr(ns nw nr pr))
	   errorLayer(res6n_err "N+ Diffused Resistor device touching ns,nw,nr,pr")

Executing: ndiff_dc_fet = geomOr(nfet_sd)

Executing: ndiff = geomAndNot(ndiff ndiff_dc_fet)

Executing: nfet_sd = geomOr(nfet_sd geomAnd(res6n_term geomOverlap(res6n_bar res6n_sblk)))

Executing: res6n_term = geomAndNot(res6n_term geomAnd(res6n_term geomOverlap(res6n_bar r...

Executing: ndiff = geomAndNot(ndiff res6n_bar)

Executing: ndiff_tie = geomAvoiding(geomAndNot(ndiff geomOr(nw ncap_nw mosvar_nw)) nfet_...

Executing: ntie_device = geomOverlap(ndiff_tie diode)

Executing: ntie_top = geomOr(ntie_device)

Executing: ndiff_tie = geomOutside(ndiff_tie ntie_device)

Executing: nwell_diff = geomAnd(ndiff nw)

Executing: nstap = geomAnd(geomAnd(geomAndNot(rx bp) rn) ns)

Executing: pdiff = geomAndNot(geomAnd(rx bp) geomOr(rn))

Executing: pfet_gate = geomOutside(geomAnd(geomAnd(pc pdiff) nw) di)

Executing: pfet_dev_polygon = geomGetPolygon(pfet_gate)

Executing: pfet_dev_b = geomOutside(geomOr(pfet_dev_polygon) pr)

Executing: pfet_dev = geomAndNot(geomAndNot(pfet_gate pfet_dev_b) geomOr(dg dgv tg pr sc...

Executing: pfet_dev_TG = geomAndNot(geomAnd(geomAndNot(pfet_gate pfet_dev_b) tg) geomOr(...

Executing: pfet_dev_SCG = geomAndNot(geomAnd(geomAnd(geomAndNot(pfet_gate pfet_dev_b) tg...

Executing: pfet_dev_MV = geomAndNot(geomAnd(geomAnd(geomAndNot(pfet_gate pfet_dev_b) dg)...

Executing: pfet_dev_HV = geomAndNot(geomAnd(geomAndNot(pfet_gate pfet_dev_b) dg) geomOr(...

Executing: pfet_dev_HVT = geomAndNot(geomAnd(geomAndNot(pfet_gate pfet_dev_polygon) pr) ...

Executing: pfet_dev_HVT_b = geomAndNot(geomAnd(pfet_dev_polygon pr) geomOr(dg dgv scgate))

Executing: pfet_sd = geomButting(geomAndNot(geomAnd(pdiff nw) geomOr(pc op sblk)) pfet_g...

Executing: pfet_fingers = geomInside(pfet_dev multi)

Executing: pfet_fingers_TG = geomInside(pfet_dev_TG multi)

Executing: pfet_fingers_SCG = geomInside(pfet_dev_SCG multi)

Executing: pfet_fingers_MV = geomInside(pfet_dev_MV multi)

Executing: pfet_fingers_HV = geomInside(pfet_dev_HV multi)

Executing: pfet_fingers_HVT = geomInside(pfet_dev_HVT multi)

Executing: pfet_mul = geomStraddle(rx pfet_fingers)

Executing: pfet_mul_TG = geomStraddle(rx pfet_fingers_TG)

Executing: pfet_mul_SCG = geomStraddle(rx pfet_fingers_SCG)

Executing: pfet_mul_MV = geomStraddle(rx pfet_fingers_MV)

Executing: pfet_mul_HV = geomStraddle(rx pfet_fingers_HV)

Executing: pfet_mul_HVT = geomStraddle(rx pfet_fingers_HVT)

Executing: pfet_dev = geomOutside(pfet_dev multi)

Executing: pfet_dev_TG = geomOutside(pfet_dev_TG multi)

Executing: pfet_dev_SCG = geomOutside(pfet_dev_SCG multi)

Executing: pfet_dev_MV = geomOutside(pfet_dev_MV multi)

Executing: pfet_dev_HV = geomOutside(pfet_dev_HV multi)

Executing: pfet_dev_HVT = geomOutside(pfet_dev_HVT multi)

Executing: pfRF_dev_psp = geomOverlap(geomOverlap(rx geomOverlap(pfet_dev RF)) psp_model)

Executing: pfRF_mul_psp = geomOverlap(geomOverlap(rx geomOverlap(pfet_mul RF)) psp_model)

Executing: pfRF_dev_psp_MV = geomOverlap(geomOverlap(rx geomOverlap(pfet_dev_MV RF)) psp...

Executing: pfRF_mul_psp_MV = geomOverlap(geomOverlap(rx geomOverlap(pfet_mul_MV RF)) psp...

Executing: pfRF_dev_psp_HV = geomOverlap(geomOverlap(rx geomOverlap(pfet_dev_HV RF)) psp...

Executing: pfRF_mul_psp_HV = geomOverlap(geomOverlap(rx geomOverlap(pfet_mul_HV RF)) psp...

Executing: pfRF_dev = geomOutside(geomOverlap(rx geomOverlap(pfet_dev RF)) psp_model)

Executing: pfRF_mul = geomOutside(geomOverlap(rx geomOverlap(pfet_mul RF)) psp_model)

Executing: pfRF_dev_MV = geomOutside(geomOverlap(rx geomOverlap(pfet_dev_MV RF)) psp_model)

Executing: pfRF_mul_MV = geomOutside(geomOverlap(rx geomOverlap(pfet_mul_MV RF)) psp_model)

Executing: pfRF_dev_HV = geomOutside(geomOverlap(rx geomOverlap(pfet_dev_HV RF)) psp_model)

Executing: pfRF_mul_HV = geomOutside(geomOverlap(rx geomOverlap(pfet_mul_HV RF)) psp_model)

Executing: pfRF_dev_TG = geomOverlap(rx geomOverlap(pfet_dev_TG RF))

Executing: pfRF_mul_TG = geomOverlap(rx geomOverlap(pfet_mul_TG RF))

Executing: pfRF_dev_SCG = geomOverlap(rx geomOverlap(pfet_dev_SCG RF))

Executing: pfRF_mul_SCG = geomOverlap(rx geomOverlap(pfet_mul_SCG RF))

Executing: pfet_dev_psp_b = pfet_dev_psp_b = pfet_dev_psp_b = geomOverlap(pfet_dev_b psp...

Executing: pfet_dev_b = pfet_dev_b = pfet_dev_b = geomOutside(pfet_dev_b psp_model)

Executing: pfet_dev_psp = pfet_dev_psp = pfet_dev_psp = geomOverlap(geomOutside(pfet_dev...

Executing: pfet_mul_psp = geomOverlap(geomOutside(pfet_mul RF) psp_model)

Executing: pfet_dev_psp_MV = pfet_dev_psp_MV = pfet_dev_psp_MV = geomOverlap(geomOutside...

Executing: pfet_mul_psp_MV = geomOverlap(geomOutside(pfet_mul_MV RF) psp_model)

Executing: pfet_dev_psp_HV = pfet_dev_psp_HV = pfet_dev_psp_HV = geomOverlap(geomOutside...

Executing: pfet_mul_psp_HV = geomOverlap(geomOutside(pfet_mul_HV RF) psp_model)

Executing: pfet_dev = pfet_dev = pfet_dev = geomOutside(geomOutside(pfet_dev RF) psp_model)

Executing: pfet_mul = geomOutside(geomOutside(pfet_mul RF) psp_model)

Executing: pfet_dev_MV = pfet_dev_MV = pfet_dev_MV = geomOutside(geomOutside(pfet_dev_MV...

Executing: pfet_mul_MV = geomOutside(geomOutside(pfet_mul_MV RF) psp_model)

Executing: pfet_dev_HV = pfet_dev_HV = pfet_dev_HV = geomOutside(geomOutside(pfet_dev_HV...

Executing: pfet_mul_HV = geomOutside(geomOutside(pfet_mul_HV RF) psp_model)

Executing: pfet_dev_HVT = pfet_dev_HVT = pfet_dev_HVT = geomOutside(pfet_dev_HVT RF)

Executing: pfet_dev_HVT_b = pfet_dev_HVT_b = pfet_dev_HVT_b = geomOutside(pfet_dev_HVT_b...

Executing: pfet_mul_HVT = geomOutside(pfet_mul_HVT RF)

Executing: pfet_dev_TG = pfet_dev_TG = pfet_dev_TG = geomOutside(pfet_dev_TG RF)

Executing: pfet_mul_TG = geomOutside(pfet_mul_TG RF)

Executing: pfet_dev_SCG = pfet_dev_SCG = pfet_dev_SCG = geomOutside(pfet_dev_SCG RF)

Executing: pfet_mul_SCG = geomOutside(pfet_mul_SCG RF)

Executing: pfRF_drain = geomOverlap(geomAnd(pfet_sd RF) drain_filter)

Executing: pfRF_source = geomOutside(geomAnd(pfet_sd RF) drain_filter)

Executing: pfet_sd = geomOutside(pfet_sd RF)

Executing: FET_DEV = geomOr(nfet_gate pfet_gate)

Executing: FET_err = geomAnd(FET_DEV geomOr(ns jd rn bb rr rp pd op))
	   errorLayer(FET_err "FET device touching ns,jd,rn,bb,rr,rp,pd,op")

Executing: pdiff = geomAndNot(pdiff pc)

Executing: res6p_bar = geomStraddle(pdiff geomOr(op sblk))

Executing: res6p_term = geomAndNot(res6p_bar geomOr(op sblk pfet_sd))

Executing: res6p_dev = geomAnd(res6p_bar op)

Executing: res6p_sblk = geomAnd(res6p_bar sblk)

Executing: pdiff = geomAndNot(pdiff res6p_bar)

Executing: diff_RES_dev = geomOr(res6n_dev res6p_dev res6n_sblk res6p_sblk)

Executing: diff_RES_err = geomOutside(geomAnd(diff_RES_dev geomOr(bb dg pc)) ESD_ALL)
	   errorLayer(diff_RES_err "Diffused Resistor device touching bb,dg,pc")

Executing: diff_RES_err2 = geomOutside(geomAnd(diff_RES_dev geomOr(ns jd rn pd rr rp nr ...
	   errorLayer(diff_RES_err2 "Diffused Resistor device touching ns,jd,rn,pd,rr,rp,nr,pr")

Executing: pdiff_dc_fet = geomOr(pfet_sd)

Executing: pdiff = geomAndNot(pdiff pdiff_dc_fet)

Executing: pfet_sd = geomOr(pfet_sd geomAnd(res6p_term geomOverlap(res6p_bar res6p_sblk)))

Executing: res6p_term = geomAndNot(res6p_term geomAnd(res6p_term geomOverlap(res6p_bar r...

Executing: nfetnsh_rev = geomGetTexted(ESD_ALL DEVICE_ID_TXT "ESDNSH_BASE-DEVICE")

Executing: esdnsh_nfet = geomOr(nfet6_dev nfet6_dev_MV nfet6_dev_HV nfet6_dev_TG nfeti_d...

Executing: esdnsh_dev = geomOverlap(geomOr(esdnsh_nfet geomButtOnly(nfet_sd nfet_gate) r...

Executing: esdnsh_gate = geomOverlap(nfet_gate esdnsh_dev)

Executing: esdnsh_drain = geomButtOnly(geomOverlap(nfet_sd drain_filter) esdnsh_gate)

Executing: esdnsh_source = geomButtOnly(geomOutside(nfet_sd drain_filter) esdnsh_gate)

Executing: pfetpsh_rev = geomGetTexted(ESD_ALL DEVICE_ID_TXT "ESDPSH_BASE-DEVICE")

Executing: esdpsh_pfet = geomOr(pfet_dev pfet_dev_MV pfet_dev_HV pfet_dev_TG)

Executing: esdpsh_dev = geomOverlap(geomOr(esdpsh_pfet geomButtOnly(pfet_sd pfet_gate) r...

Executing: esdpsh_gate = geomOverlap(pfet_gate esdpsh_dev)

Executing: esdpsh_drain = geomButtOnly(geomOverlap(pfet_sd drain_filter) esdpsh_gate)

Executing: esdpsh_source = geomButtOnly(geomOutside(pfet_sd drain_filter) esdpsh_gate)

Executing: esdnpsh_gate = geomOr(esdnsh_gate esdpsh_gate)

Executing: esdnpsh_drain = geomOr(esdnsh_drain esdpsh_drain)

Executing: esdnpsh_source = geomOr(esdnsh_source esdpsh_source)

Executing: esdnpsh_base = geomOr(esdnsh_dev esdpsh_dev)

Executing: esdnpsh_base50 = geomAnd(esdnpsh_base tg)

Executing: esdnpsh_base25 = geomAnd(geomAnd(esdnpsh_base dg) dgv)

Executing: esdnpsh_base33 = geomAndNot(geomAnd(esdnpsh_base dg) dgv)

Executing: esdnpsh_base = geomAndNot(esdnpsh_base geomOr(esdnpsh_base50 esdnpsh_base33 e...

Executing: ind_bb_term = geomOutside(geomOverlap(geomOr(tline ind symIND0) bb) m1)

Executing: bond_bb_term = geomOverlap(bondPadFilter bb)

Executing: ind_hr_term = geomOverlap(geomOr(tline ind symIND0) hr_gnd)

Executing: bond_hr_term = geomOverlap(bondPadFilter hr_gnd)

Executing: res6pc_bar = geomStraddle(pc op)

Executing: res6pc_term = geomAndNot(res6pc_bar op)

Executing: res6pc_dev = geomAnd(res6pc_bar op)

Executing: resistor_m = geomOverlap(geomOr(res6pc_dev res6n_dev res6p_dev) multi)

Executing: resistor_bb = geomOverlap(res6pc_dev bb)

Executing: resistor_op = geomOverlap(res6pc_dev op)

Executing: pc = geomAndNot(pc res6pc_bar)

Executing: poly_RES_err = geomAnd(res6pc_bar geomOr(ns jd rx rx_fill rn tg))
	   errorLayer(poly_RES_err "Polysilicon Resistor device touching ns,jd,rx,rn,tg")

Executing: poly_bp_err = geomAndNot(res6pc_dev geomOr(geomAndNot(bp bb) geomAnd(geomOr(r...
	   errorLayer(poly_bp_err "Polysilicon Resistor device not covered by P+ implant")

Executing: res6pc_err = geomAnd(res6pc_dev geomAnd(bb geomOr(pi nw nr pr)))
	   errorLayer(res6pc_err "Polysilicon Resistor device BB touching pi,nw,nr,pr")

Executing: res6pc_err2 = geomAnd(res6pc_dev geomAnd(geomOr(rr rp) geomOr(nr pr)))
	   errorLayer(res6pc_err2 "Polysilicon Resistor device RR or RP touching nr,pr")

Executing: rnw6pc_dev = geomOverlap(res6pc_dev nw)

Executing: res6pc_dev = geomOutside(res6pc_dev nw)

Executing: res_serp_one_pc = geomEnclose(geomAnd(rr res_hv) res6pc_dev (1 < ignore))

Executing: res_serpentine = geomOverlap(res6pc_dev res_serp_one_pc)

Executing: res6pc_corner = geomGetCorner(res6pc_dev angleMulti90 concave)

Executing: res6pc_growcorner = geomGrowCorner(res6pc_corner 0.05 inside)

Executing: res6pc_reshv = geomOverlap(res6pc_dev res6pc_growcorner)

Executing: res6pc_dev = geomOutside(res6pc_dev geomOr(res6pc_reshv geomAnd(rr res_hv)))

Executing: res6rr_dev = geomOverlap(res6pc_dev rr)

Executing: res6rp_dev = geomOverlap(res6pc_dev rp)

Executing: res6pc_dev = geomOutside(res6pc_dev geomOr(rr rp))

Executing: resnw_serpentine = geomOverlap(rnw6pc_dev geomAnd(rr res_hv))

Executing: rnw6pc_dev = geomOutside(rnw6pc_dev resnw_serpentine)

Executing: rnw6rr_dev = geomOverlap(rnw6pc_dev rr)

Executing: rnw6rp_dev = geomOverlap(rnw6pc_dev rp)

Executing: rnw6pc_dev = geomOutside(rnw6pc_dev geomOr(rr rp))

Executing: resbb_serpentine = geomAnd(res_serpentine bb)

Executing: ressub_serpentine = geomAndNot(res_serpentine resbb_serpentine)

Executing: pdiff_tie = geomAvoiding(geomAnd(pdiff nw) pfet_gate)

Executing: ptie_device = geomOverlap(pdiff_tie diode)

Executing: ptie_top = geomOr(ptie_device)

Executing: pdiff_tie = geomOutside(pdiff_tie ptie_device)

Executing: ca = geomAnd(ca geomAnd(m1 geomOr(pc_input rx_input)))

Executing: sub_diff_top1 = geomOutside(geomOverlap(geomAndNot(pdiff geomOr(ncap_nw nw DI...

Executing: sub_diff_exclude = geomOr(RF NOSUBC)

Executing: sub_diff = geomAndNot(sub_diff_top1 sub_diff_exclude)

Executing: GRLOGIC = geomOr(geomStraddle(sub_diff GRLOGIC) GRLOGIC)

Executing: GRLOGIC_pi = geomInside(GRLOGIC nfeti_bottom_iso)

Executing: GRLOGIC = geomAndNot(GRLOGIC GRLOGIC_pi)

Executing: sub_diff_grlogic = geomAnd(sub_diff GRLOGIC)

Executing: SXCUT_GRLOGIC = geomInside(SXCUT GRLOGIC)

Executing: SXCUT_pi = geomInside(SXCUT nfeti_bottom_iso)

Executing: SXCUT = geomAndNot(SXCUT SXCUT_pi)

Executing: SXCUTout = geomSize(geomAndNot(SXCUT GRLOGIC) -0.01)

Executing: GRLOGIC = geomOr(geomAndNot(GRLOGIC geomSize(SXCUT_GRLOGIC 0.005)) SXCUT_GRLO...

Executing: sub_dev = geomOutside(sub_diff GRLOGIC)

Executing: SXCUT = geomOr(SXCUTout GRLOGIC)

Executing: sub_diff = geomOutside(sub_diff sub_dev)

Executing: sub_diff_top = geomOr(sub_dev)

Executing: sub_diff_grlogic = geomAnd(sub_diff_grlogic GRLOGIC)

Executing: substrate = geomOr(geomAndNot(bkgnd geomSize(SXCUT 0.002)) SXCUT)

Executing: sub50 = geomXor(geomEmpty() LAYER)

Executing: sub1K = geomEmpty()

Executing: substrate_ptap = geomOverlap(substrate sub_diff)

Executing: substrate_text = geomOutside(substrate sub_diff)

Executing: subvia = geomOr(subterm)

Executing: sub_m1 = geomOverlap(m1 sub_diff_top)

Executing: dummy_via = geomAnd(sub_m1 IND_AC_WIRE)

Executing: ind_ac_via = geomAnd(geomOr(ind_bb_term ind_hr_term bond_bb_term bond_hr_term...

Executing: subs_sti = geomOr(substrate)

Executing: GateCon = geomOr(Gate)

Executing: corrPoint_dev_PD = geomAnd(corrPoint geomOr(pfet_sd pfRF_source pfRF_drain))

Executing: corrPoint_term_PD = geomOr(corrPoint_dev_PD)

Executing: corrPoint = geomAndNot(corrPoint corrPoint_dev_PD)

Executing: corrPoint_dev_ND = geomAnd(corrPoint geomOr(nfet_sd nfRF_source nfRF_drain))

Executing: corrPoint_term_ND = geomOr(corrPoint_dev_ND)

Executing: corrPoint = geomAndNot(corrPoint corrPoint_dev_ND)

Executing: corrPoint_dev_PC = geomAnd(corrPoint pc)

Executing: corrPoint_term_PC = geomAnd(corrPoint pc)

Executing: corrPoint = geomAndNot(corrPoint corrPoint_dev_PC)

Executing: corrPoint_dev_M1 = geomAnd(corrPoint m1)

Executing: corrPoint_term_M1 = geomAnd(corrPoint m1)

Executing: corrPoint = geomAndNot(corrPoint corrPoint_dev_M1)

Executing: corrPoint_dev_M2 = geomAnd(corrPoint m2)

Executing: corrPoint_term_M2 = geomAnd(corrPoint m2)

Executing: errorLayer(geomAndNot(am_RES am) "(AM res) not covered by mask AM")

Executing: errorLayer(geomAndNot(mt_RES mt) "(MT res) not covered by mask MT")

Executing: errorLayer(geomAndNot(m4_RES m4) "(M4 res) not covered by mask M4")

Executing: errorLayer(geomAndNot(m3_RES m3) "(M3 res) not covered by mask M3")

Executing: errorLayer(geomAndNot(m2_RES m2) "(M2 res) not covered by mask M2")

Executing: errorLayer(geomAndNot(m1_RES m1) "(M1 res) not covered by mask M1")

Executing: Edges_m1_RES = geomGetEdge(m1_RES inside m1)

Executing: Edges_inside_m1_RES = geomSize(Edges_m1_RES -0.004)

Executing: Edges_outside_m1_RES = geomSize(Edges_m1_RES 0.004)

Executing: Edges_m1_RES_Size = geomOr(Edges_inside_m1_RES Edges_outside_m1_RES)

Executing: m1_RES_grow = geomGrow(m1_RES 0 0 0.004 0.004)

Executing: m1_RES_reduced = geomAnd(Edges_m1_RES_Size m1_RES_grow)

Executing: m1_RES_min = geomInside(m1_RES_reduced m1_RES)

Executing: m1 = geomAndNot(m1 m1_RES_min)

Executing: rcxLayer(m1_RES_min)

Executing: Edges_m2_RES = geomGetEdge(m2_RES inside m2)

Executing: Edges_inside_m2_RES = geomSize(Edges_m2_RES -0.004)

Executing: Edges_outside_m2_RES = geomSize(Edges_m2_RES 0.004)

Executing: Edges_m2_RES_Size = geomOr(Edges_inside_m2_RES Edges_outside_m2_RES)

Executing: m2_RES_grow = geomGrow(m2_RES 0 0 0.004 0.004)

Executing: m2_RES_reduced = geomAnd(Edges_m2_RES_Size m2_RES_grow)

Executing: m2_RES_min = geomInside(m2_RES_reduced m2_RES)

Executing: m2 = geomAndNot(m2 m2_RES_min)

Executing: rcxLayer(m2_RES_min)

Executing: Edges_m3_RES = geomGetEdge(m3_RES inside m3)

Executing: Edges_inside_m3_RES = geomSize(Edges_m3_RES -0.004)

Executing: Edges_outside_m3_RES = geomSize(Edges_m3_RES 0.004)

Executing: Edges_m3_RES_Size = geomOr(Edges_inside_m3_RES Edges_outside_m3_RES)

Executing: m3_RES_grow = geomGrow(m3_RES 0 0 0.004 0.004)

Executing: m3_RES_reduced = geomAnd(Edges_m3_RES_Size m3_RES_grow)

Executing: m3_RES_min = geomInside(m3_RES_reduced m3_RES)

Executing: m3 = geomAndNot(m3 m3_RES_min)

Executing: rcxLayer(m3_RES_min)

Executing: Edges_m4_RES = geomGetEdge(m4_RES inside m4)

Executing: Edges_inside_m4_RES = geomSize(Edges_m4_RES -0.004)

Executing: Edges_outside_m4_RES = geomSize(Edges_m4_RES 0.004)

Executing: Edges_m4_RES_Size = geomOr(Edges_inside_m4_RES Edges_outside_m4_RES)

Executing: m4_RES_grow = geomGrow(m4_RES 0 0 0.004 0.004)

Executing: m4_RES_reduced = geomAnd(Edges_m4_RES_Size m4_RES_grow)

Executing: m4_RES_min = geomInside(m4_RES_reduced m4_RES)

Executing: m4 = geomAndNot(m4 m4_RES_min)

Executing: rcxLayer(m4_RES_min)

Executing: Edges_mt_RES = geomGetEdge(mt_RES inside mt)

Executing: Edges_inside_mt_RES = geomSize(Edges_mt_RES -0.004)

Executing: Edges_outside_mt_RES = geomSize(Edges_mt_RES 0.004)

Executing: Edges_mt_RES_Size = geomOr(Edges_inside_mt_RES Edges_outside_mt_RES)

Executing: mt_RES_grow = geomGrow(mt_RES 0 0 0.004 0.004)

Executing: mt_RES_reduced = geomAnd(Edges_mt_RES_Size mt_RES_grow)

Executing: mt_RES_min = geomInside(mt_RES_reduced mt_RES)

Executing: mt = geomAndNot(mt mt_RES_min)

Executing: rcxLayer(mt_RES_min)

Executing: Edges_am_RES = geomGetEdge(am_RES inside am)

Executing: Edges_inside_am_RES = geomSize(Edges_am_RES -0.004)

Executing: Edges_outside_am_RES = geomSize(Edges_am_RES 0.004)

Executing: Edges_am_RES_Size = geomOr(Edges_inside_am_RES Edges_outside_am_RES)

Executing: am_RES_grow = geomGrow(am_RES 0 0 0.004 0.004)

Executing: am_RES_reduced = geomAnd(Edges_am_RES_Size am_RES_grow)

Executing: am_RES_min = geomInside(am_RES_reduced am_RES)

Executing: am = geomAndNot(am am_RES_min)

Executing: rcxLayer(am_RES_min)

Executing: symIND = geomOverlap(ind symIND0)

Executing: ind = geomOutside(ind symIND)

Executing: tline = geomAndNot(tline geomOr(ind symIND))

Executing: am_trans = geomAnd(am tline)

Executing: errorLayer(geomAnd(am_trans amTerm) "Overlapping transmission lines - terminals must abut filters")

Executing: am_trans2 = geomAndNot(am_trans amTerm)

Executing: am_transmission = geomButting(am_trans2 amTerm (keep == 2))

Executing: am = geomAndNot(am am_transmission)

Executing: trans_in_am = geomGetTexted(amTerm am_text "in")

Executing: trans_out_am = geomGetTexted(amTerm am_text "out")

Executing: trans_in_mt = geomGetTexted(mtTerm mt_text "in")

Executing: trans_out_mt = geomGetTexted(mtTerm mt_text "out")

Executing: symind_in_am = geomGetTexted(amTerm am_text_symind "outpr")

Executing: symind_out_am = geomGetTexted(amTerm am_text_symind "outse")

Executing: symind_mid_m2 = geomGetTexted(m2Term m2_text "ct")

Executing: symind_mid_m4 = geomGetTexted(m4Term m4_text "ct")

Executing: symind_in = geomOr(symind_in_am)

Executing: symind_out = geomOr(symind_out_am)

Executing: All_in = geomOr(geomOr(trans_in_am trans_in_mt) symind_in)

Executing: All_out = geomOr(geomOr(trans_out_am trans_out_mt) symind_out)

Executing: symind_ct = geomOr(symind_mid_m2 symind_mid_m4)

Executing: symind_ct1 = geomOr(symind_mid_m2)

Executing: symind_ct2 = geomOr(symind_mid_m4)

Executing: ind_sym = geomOverlap(symIND symind_in)

Executing: dummy_ct = geomOutside(ind_sym symind_ct)

Executing: via_ct = geomOr(dummy_ct)

Executing: symind3 = geomAnd(geomAnd(geomOverlap(ind_sym symind_in (keep == 1)) geomOver...

Executing: symind2 = geomAnd(geomAnd(geomOverlap(ind_sym symind_in (keep == 1)) geomOver...

Executing: allSyminds = geomOr(symind3 symind2)

Executing: inductor2 = geomAnd(geomOverlap(ind All_in (keep == 1)) geomOverlap(ind All_o...

Executing: allInds = geomOr(inductor2 allSyminds)

Executing: ind_err2 = geomAnd(allInds geomOr(ns jd pi rn nw nr pr dg tg pc rr rp pd op))
	   errorLayer(ind_err2 "inductor device touching ns,jd,pi,rn,nw,nr,pr,dg,tg,pc,rr,rp,pd,op")

Executing: amTRan = geomOverlap(amTerm allInds)

Executing: mtTRan = geomOverlap(mtTerm allInds)

Executing: allInd_Mt = geomAnd(allInds mt)

Executing: am_intern = geomAnd(am allInds)

Executing: am = geomOr(geomAndNot(am allInds) amTRan)

Executing: mt_intern = geomOverlap(geomAnd(mt allInds) mtTRan)

Executing: mt_intern2 = geomOr(geomOverlap(mt_intern_all symind_ct) geomGetNonRectangle(...

Executing: mt_ind = geomInside(mt allInds)

Executing: mt = geomOr(geomOr(geomAndNot(mt allInds) mt_ind) mtTRan)

Executing: ft_ind = geomInside(ft allInds)

Executing: ft_intern = geomAnd(ft allInds)

Executing: ft = geomAndNot(ft allInds)

Executing: allInd_Mt_45 = geomSize(geomGetNon90(allInd_Mt) 0.1)

Executing: mt_BentArea = geomButting(mt allInd_Mt_45)

Executing: mt_XArea = geomOutside(geomAnd(mt_BentArea am_intern) ft_ind)

Executing: m2TRan = geomOverlap(m2Term allInds)

Executing: m4TRan = geomOverlap(m4Term allInds)

Executing: allInd_M3 = geomAnd(allInds m3)

Executing: allInd_M4 = geomAnd(allInds m4)

Executing: m3_ind = geomInside(m3 allInds)

Executing: m3 = geomOr(geomAndNot(m3 allInds) m3_ind)

Executing: m4_ind = geomInside(m4 allInds)

Executing: m4 = geomOr(geomOr(geomAndNot(m4 allInds) m4_ind) m4TRan)

Executing: allInd_M3_45 = geomSize(geomGetNon90(allInd_M3) 0.1)

Executing: allInd_M4_45 = geomSize(geomGetNon90(allInd_M4) 0.1)

Executing: m3_BentArea = geomButting(m3 allInd_M3_45)

Executing: m3_XArea = geomOutside(geomAnd(m3_BentArea am_intern) ft_ind)

Executing: m4_BentArea = geomButting(m4 allInd_M4_45)

Executing: m4_XArea = geomOutside(geomAnd(m4_BentArea am_intern) ft_ind)

Executing: errorLayer(geomAnd(geomOr(geomXor(m3_XArea mt_XArea) geomXor(m4_XArea mt_XArea)) ind_xov) "M3 and M4 inside enhanced Inductor model must have the same dimension as MT")

Executing: errorLayer(geomAndNot(geomOr(geomAnd(m3_XArea mt_XArea) geomAnd(m4_XArea mt_XArea)) ind_xov) "M3/M4 inside standard inductor model is not allowed")

Executing: v2_intern = geomAnd(v2 allInds)

Executing: v2 = geomAndNot(v2 v2_intern)

Executing: m3_intern = geomAnd(m3 allInds)

Executing: v3_intern = geomAnd(v3 allInds)

Executing: v3 = geomAndNot(v3 v3_intern)

Executing: m4_intern = geomAnd(m4 allInds)

Executing: v4_intern = geomAnd(v4 allInds)

Executing: v4 = geomAndNot(v4 v4_intern)

Executing: m3_v3_m4_NotConn_symind = geomOutside(geomOverlap(geomAnd(m3_intern m4_intern...

Executing: m4_v4_mt_NotConn_symind = geomOutside(geomOr(geomGetRectangle(geomAnd(m4_inte...

Executing: mt_ft_am_NotConn_ind = geomOutside(geomAnd(geomAndNot(mt_intern2 mtTerm) am_i...

Executing: mt_ft_am = geomOutside(geomAnd(mt_intern2 am_intern) ft_intern)

Executing: mt_ft_am_NotConn_symind = geomAndNot(mt_ft_am geomOr(geomGetRectangle(mt_ft_a...

Executing: m1_over_ind = geomAnd(m1 geomOr(symind3 symind2 inductor2))

Executing: m1_ind_groundplane = geomGetBBox(geomGetVertex(m1_over_ind (keep > 20)))

Executing: symind3_amam_m1 = geomOutside(geomOutside(geomOverlap(geomOverlap(geomOverlap...

Executing: symind3_amam_bb = geomOutside(geomOutside(geomOverlap(geomOverlap(geomOverlap...

Executing: symind3_amam_hr = geomOverlap(geomOutside(geomOutside(geomOverlap(geomOverlap...

Executing: symind2_amam_m1 = geomOutside(geomOutside(geomOverlap(geomOverlap(geomOverlap...

Executing: symind2_amam_bb = geomOutside(geomOutside(geomOverlap(geomOverlap(geomOverlap...

Executing: symind2_amam_hr = geomOverlap(geomOutside(geomOutside(geomOverlap(geomOverlap...

Executing: ind2_mtam_m1 = geomOutside(geomOutside(geomOverlap(geomOverlap(geomOverlap(in...

Executing: ind2_mtam_bb = geomOutside(geomOutside(geomOverlap(geomOverlap(geomOverlap(in...

Executing: ind2_mtam_hr = geomOverlap(geomOutside(geomOutside(geomOverlap(geomOverlap(in...

Executing: symind3_amam_err_3 = geomAnd(geomOr(symind3_amam_m1 symind3_amam_bb symind3_a...
	   errorLayer(symind3_amam_err_3 "Missing v3 vias on symind coils between m3 and m4")

Executing: symind3_amam_err_4 = geomAnd(geomOr(symind3_amam_m1 symind3_amam_bb symind3_a...
	   errorLayer(symind3_amam_err_4 "Missing v4 vias on symind coils between m4 and mt")

Executing: symind2_amam_err_3 = geomAnd(geomOr(symind2_amam_m1 symind2_amam_bb symind2_a...
	   errorLayer(symind2_amam_err_3 "Missing v3 vias on symind coils between m3 and m4")

Executing: symind2_amam_err_4 = geomAnd(geomOr(symind2_amam_m1 symind2_amam_bb symind2_a...
	   errorLayer(symind2_amam_err_4 "Missing v4 vias on symind coils between m4 and mt")

Executing: symind3_amam_err_T = geomAnd(geomOr(symind3_amam_m1 symind3_amam_bb symind3_a...
	   errorLayer(symind3_amam_err_T "Missing ft vias on symind coils between mt and am")

Executing: symind2_amam_err_T = geomAnd(geomOr(symind2_amam_m1 symind2_amam_bb symind2_a...
	   errorLayer(symind2_amam_err_T "Missing ft vias on symind coils between mt and am")

Executing: ind2_mtam_err_T = geomAnd(geomOr(ind2_mtam_m1 ind2_mtam_bb ind2_mtam_hr) mt_f...
	   errorLayer(ind2_mtam_err_T "Missing ft vias on ind coils between mt and am")

Executing: ind_space = geomInside(geomOr(drc(trans_out_am am_intern (sep < 5.2) opposite...

Executing: symind_space_s1 = geomInside(geomOr(drc(symind_out geomOr(mt am_intern) (sep ...

Executing: symind_space_no_s = geomButtOrCoin(symind_space_s1 symIND)

Executing: symind_space_s1 = geomAndNot(symind_space_s1 geomOr(am_intern symind_space_no...

Executing: symind_space_s2 = geomButtOnly(symind_space_s1 symind_out)

Executing: symind_space_cnr = geomGetCorner(symind_space_s2 manhattanOnly)

Executing: symind_space_corner = geomInside(geomGrowCorner(symind_space_cnr 0.1 manhatta...

Executing: symind_space_cont = geomOr(geomInside(drc(symind_space_corner (sep <= 25) opp...

Executing: symind_space_s = geomGetBBox(symind_space_cont)

Executing: Symind_edge_sp1 = geomSize(geomGetEdge(symind_space_s butting geomOr(symind_o...

Executing: Symind_edge_sp2 = geomSize(geomGetEdge(symind_space_s outside geomOr(symind_o...

Executing: Symind_edge_space = geomOutside(Symind_edge_sp2 Symind_edge_sp1)

Executing: am_am_intern = geomSize(geomGetEdge(am butting am_intern) 0.1)

Executing: am_sep_in_out = geomOr(drc(symind_in symind_out (sep <= 75) opposite parallel))

Executing: am_pin_err = geomAndNot(am_am_intern geomAnd(geomInside(am_sep_in_out symIND)...
	   errorLayer(am_pin_err "AM signal wire exiting symetrical inductor straddling metal coil outside the pin")

Executing: m4_butt_symind = geomSize(geomGetEdge(m4 butting symIND) 0.1)

Executing: ct_m4_pin_err = geomButtOrCoin(m4_butt_symind symind_ct)
	   errorLayer(ct_m4_pin_err "Center tap signal wire exiting symetrical inductor outside CT pin")

Executing: bondPad_PC = geomInside(bondPad pc)

Executing: bondPad_BB = geomAndNot(geomOverlap(bondPad bond_bb_term) bondPad_PC)

Executing: bondPad_HR = geomAndNot(geomAndNot(geomOverlap(bondPad bond_hr_term) bondPad_...

Executing: bond_dummy_gp = geomOr(bondPad_HR)

Executing: bond_dummy_via = geomOr(bond_dummy_gp)

Executing: VNCAP = geomAnd(VNCAP geomOr(VNCAP_M1 VNCAP_M2 VNCAP_M3 VNCAP_M4 VNCAP_MT))

Executing: VNCAP_new = geomSize(VNCAP -0.4)

Executing: vncap_gap = geomOr(geomAndNot(VNCAP_M1 m1) geomAndNot(VNCAP_M2 m2) geomAndNot...

Executing: nw_vncap = geomInside(VNCAP nw)

Executing: bb_vncap = geomInside(VNCAP bb)

Executing: nohr_vncap = geomAndNot(geomAndNot(geomInside(VNCAP nohr) nw_vncap) bb_vncap)

Executing: sub_vncap = geomAndNot(VNCAP geomOr(nw_vncap bb_vncap nohr_vncap))

Executing: vncap_edge = geomAndNot(VNCAP geomSize(VNCAP -0.01))

Executing: vncap_sides = geomSize(geomGetEdge(VNCAP) 0.01)

Executing: vncap_edge2 = geomButting(vncap_sides geomSize(geomGetEdge(VNCAP coincident v...

Executing: vncap_L_edge = geomSize(geomGetEdge(VNCAP butting vncap_edge2) -0.1)

Executing: vncap_topt = geomOr(VNCAP_MT)

Executing: vncap_top1 = geomOutside(VNCAP_M1 VNCAP_M2)

Executing: vncap_termt = geomAnd(geomAnd(vncap_topt mt) vncap_edge)

Executing: vncap_term1 = geomAnd(geomAnd(vncap_top1 m1) vncap_edge)

Executing: vncap_bot1 = geomOr(VNCAP_M1)

Executing: vncap_top4 = geomOutside(VNCAP_M4 VNCAP_MT)

Executing: vncap_top3 = geomOutside(VNCAP_M3 VNCAP_M4)

Executing: vncap_top2 = geomOutside(VNCAP_M2 VNCAP_M3)

Executing: vncap_bot4 = geomOutside(VNCAP_M4 VNCAP_M3)

Executing: vncap_bot3 = geomOutside(VNCAP_M3 VNCAP_M2)

Executing: vncap_bot2 = geomOutside(VNCAP_M2 VNCAP_M1)

Executing: vncap_bott = geomOutside(VNCAP_MT VNCAP_M4)

Executing: vncap_term2 = geomAnd(geomAnd(vncap_top2 m2) vncap_edge)

Executing: vncap_term3 = geomAnd(geomAnd(vncap_top3 m3) vncap_edge)

Executing: vncap_term4 = geomAnd(geomAnd(vncap_top4 m4) vncap_edge)

Executing: vncap_via1 = geomOr(vncap_term1)

Executing: vncap_viat = geomOr(vncap_termt)

Executing: vncap_via2 = geomOr(vncap_term2)

Executing: vncap_via3 = geomOr(vncap_term3)

Executing: vncap_via4 = geomOr(vncap_term4)

Executing: vncap_tnw1 = geomInside(vncap_top1 nw)

Executing: vncap_top1 = geomOutside(vncap_top1 vncap_tnw1)

Executing: vncap_tnwt = geomInside(vncap_topt nw)

Executing: vncap_topt = geomOutside(vncap_topt vncap_tnwt)

Executing: vncap_tnw2 = geomInside(vncap_top2 nw)

Executing: vncap_top2 = geomOutside(vncap_top2 vncap_tnw2)

Executing: vncap_tnw3 = geomInside(vncap_top3 nw)

Executing: vncap_top3 = geomOutside(vncap_top3 vncap_tnw3)

Executing: vncap_tnw4 = geomInside(vncap_top4 nw)

Executing: vncap_top4 = geomOutside(vncap_top4 vncap_tnw4)

Executing: transmission = geomAnd(transmission1 geomSize(drc(transmission1 ((0.28 < widt...

Executing: amTerm = geomOr(geomOutside(amTerm transmission) geomAnd(amTerm transmission))

Executing: mtTerm = geomOr(geomOutside(mtTerm transmission) geomAnd(mtTerm transmission))

Executing: m2Term = geomOr(geomOutside(m2Term transmission) geomAnd(m2Term transmission))

Executing: m3Term = geomOr(geomOutside(m3Term transmission) geomAnd(m3Term transmission))

Executing: m4Term = geomOr(geomOutside(m4Term transmission) geomAnd(m4Term transmission))

Executing: allPins = geomOr(geomOr(geomOr(geomOr(amTerm mtTerm) m4Term) m3Term) m2Term)

Executing: singleEnd2 = geomStraddle(transmission m2Term (keep == 2))

Executing: coupled2 = geomStraddle(transmission m2Term (keep == 4))

Executing: singleEnd3 = geomStraddle(transmission m3Term (keep == 2))

Executing: coupled3 = geomStraddle(transmission m3Term (keep == 4))

Executing: singleEnd4 = geomStraddle(transmission m4Term (keep == 2))

Executing: coupled4 = geomStraddle(transmission m4Term (keep == 4))

Executing: singleEndT = geomStraddle(transmission mtTerm (keep == 2))

Executing: coupledT = geomStraddle(transmission mtTerm (keep == 4))

Executing: singleEndA = geomStraddle(transmission amTerm (keep == 2))

Executing: coupledA = geomStraddle(transmission amTerm (keep == 4))

Executing: am_coupled = geomAnd(am coupledA)

Executing: am_single = geomAnd(am singleEndA)

Executing: am_shield = geomOverlap(geomAvoiding(geomOr(am_coupled am_single) amTerm) ft)

Executing: am_signal = geomOverlap(geomOr(am_coupled am_single) amTerm)

Executing: am = geomOr(geomAndNot(am am_signal) amTerm)

Executing: am_err = geomOr(geomCoincident(geomAndNot(am_signal amTerm) geomOr(coupledA s...
	   errorLayer(am_err "AM signal wire not exiting transmission line at port, shorted, or open")

Executing: trans_va_am = geomGetTexted(amTerm OUT_label "va")

Executing: trans_vb_am = geomGetTexted(amTerm OUT_label "vb")

Executing: trans_va1_am = geomGetTexted(amTerm OUT_label "va1")

Executing: trans_va2_am = geomGetTexted(amTerm OUT_label "va2")

Executing: trans_vb1_am = geomGetTexted(amTerm OUT_label "vb1")

Executing: trans_vb2_am = geomGetTexted(amTerm OUT_label "vb2")

Executing: m4_coupled = geomAnd(m4 coupled4)

Executing: m4_single = geomAnd(m4 singleEnd4)

Executing: m4_shield = geomOverlap(geomAvoiding(geomOr(m4_coupled m4_single) m4Term) v3)

Executing: m4_signal = geomOverlap(geomOr(m4_coupled m4_single) m4Term)

Executing: m4 = geomOr(geomAndNot(m4 m4_signal) m4Term)

Executing: m4_err = geomOr(geomCoincident(geomAndNot(m4_signal m4Term) geomOr(coupled4 s...
	   errorLayer(m4_err "M4 signal wire not exiting transmission line at port, shorted, or open")

Executing: trans_va_m4 = geomGetTexted(m4Term OUT_label "va")

Executing: trans_vb_m4 = geomGetTexted(m4Term OUT_label "vb")

Executing: trans_va1_m4 = geomGetTexted(m4Term OUT_label "va1")

Executing: trans_va2_m4 = geomGetTexted(m4Term OUT_label "va2")

Executing: trans_vb1_m4 = geomGetTexted(m4Term OUT_label "vb1")

Executing: trans_vb2_m4 = geomGetTexted(m4Term OUT_label "vb2")

Executing: mt_coupled = geomAnd(mt coupledT)

Executing: mt_single = geomAnd(mt singleEndT)

Executing: mt_signal = geomOverlap(geomOr(mt_coupled mt_single) mtTerm)

Executing: mt = geomOr(geomAndNot(mt mt_signal) mtTerm)

Executing: mt_err = geomOr(geomCoincident(geomAndNot(mt_signal mtTerm) geomOr(coupledT s...
	   errorLayer(mt_err "MT signal wire not exiting transmission line at port, shorted, or open")

Executing: mt_shield = geomOverlap(geomAvoiding(geomOr(mt_coupled mt_single) mtTerm) v4)

Executing: trans_va_mt = geomGetTexted(mtTerm OUT_label "va")

Executing: trans_vb_mt = geomGetTexted(mtTerm OUT_label "vb")

Executing: trans_va1_mt = geomGetTexted(mtTerm OUT_label "va1")

Executing: trans_va2_mt = geomGetTexted(mtTerm OUT_label "va2")

Executing: trans_vb1_mt = geomGetTexted(mtTerm OUT_label "vb1")

Executing: trans_vb2_mt = geomGetTexted(mtTerm OUT_label "vb2")

Executing: m3_coupled = geomAnd(m3 coupled3)

Executing: m3_single = geomAnd(m3 singleEnd3)

Executing: m3_shield = geomOverlap(geomAvoiding(geomOr(m3_coupled m3_single) m3Term) v2)

Executing: m3_signal = geomOverlap(geomOr(m3_coupled m3_single) m3Term)

Executing: m3 = geomOr(geomAndNot(m3 m3_signal) m3Term)

Executing: m3_err = geomOr(geomCoincident(geomAndNot(m3_signal m3Term) geomOr(coupled3 s...
	   errorLayer(m3_err "M3 signal wire not exiting transmission line at port, shorted, or open")

Executing: trans_va_m3 = geomGetTexted(m3Term OUT_label "va")

Executing: trans_vb_m3 = geomGetTexted(m3Term OUT_label "vb")

Executing: trans_va1_m3 = geomGetTexted(m3Term OUT_label "va1")

Executing: trans_va2_m3 = geomGetTexted(m3Term OUT_label "va2")

Executing: trans_vb1_m3 = geomGetTexted(m3Term OUT_label "vb1")

Executing: trans_vb2_m3 = geomGetTexted(m3Term OUT_label "vb2")

Executing: m2_coupled = geomAnd(m2 coupled2)

Executing: m2_single = geomAnd(m2 singleEnd2)

Executing: m2_shield = geomOverlap(geomAvoiding(geomOr(m2_coupled m2_single) m2Term) v1)

Executing: m2_signal = geomOverlap(geomOr(m2_coupled m2_single) m2Term)

Executing: m2 = geomOr(geomAndNot(m2 m2_signal) m2Term)

Executing: m2_err = geomOr(geomCoincident(geomAndNot(m2_signal m2Term) geomOr(coupled2 s...
	   errorLayer(m2_err "M2 signal wire not exiting transmission line at port, shorted, or open")

Executing: trans_va_m2 = geomGetTexted(m2Term OUT_label "va")

Executing: trans_vb_m2 = geomGetTexted(m2Term OUT_label "vb")

Executing: trans_va1_m2 = geomGetTexted(m2Term OUT_label "va1")

Executing: trans_va2_m2 = geomGetTexted(m2Term OUT_label "va2")

Executing: trans_vb1_m2 = geomGetTexted(m2Term OUT_label "vb1")

Executing: trans_vb2_m2 = geomGetTexted(m2Term OUT_label "vb2")

Executing: all_shield = geomOr(am_shield mt_shield m4_shield m3_shield m2_shield)

Executing: all_signal = geomOr(am_signal mt_signal m4_signal m3_signal m2_signal)

Executing: transmission_edges = geomSize(geomGetEdge(transmission over substrate) 0.01)

Executing: transmission_perim = geomAndNot(transmission geomSize(transmission -0.1))

Executing: coupledSpace = geomButting(geomGetRectangle(geomAndNot(geomAnd(transmission_p...

Executing: shieldSpace = geomButting(geomGetRectangle(geomAnd(transmission_perim drc(all...

Executing: signalWidth = geomAnd(transmission_perim allPins)

Executing: shield1 = geomButting(geomAnd(m1 transmission) transmission_edges (keep > 3))

Executing: trans_s1 = geomOr(shield1)

Executing: shield2 = geomButting(geomAnd(m2 transmission) transmission_edges (keep > 3))

Executing: trans_s2 = geomOr(shield2)

Executing: shield3 = geomButting(geomAnd(m3 transmission) transmission_edges (keep > 3))

Executing: trans_s3 = geomOr(shield3)

Executing: shield4 = geomButting(geomAnd(m4 transmission) transmission_edges (keep > 3))

Executing: trans_s4 = geomOr(shield4)

Executing: shieldT = geomButting(geomAnd(mt transmission) transmission_edges (keep > 3))

Executing: trans_sT = geomOr(shieldT)

Executing: amTran = geomOverlap(amTerm transmission)

Executing: mtTran = geomOverlap(mtTerm transmission)

Executing: m4Tran = geomOverlap(m4Term transmission)

Executing: m3Tran = geomOverlap(m3Term transmission)

Executing: m2Tran = geomOverlap(m2Term transmission)

Executing: mim_top = geomOverlap(geomAnd(qt am) ft)

Executing: dualtop = geomOverlap(geomAnd(ht am) ft)

Executing: qtblk = geomOr(qt)

Executing: MIM = geomOutside(qt ht)

Executing: width_label_m_edge = geomSize(geomGetEdge(width_label coincident MIM) 0.1)

Executing: width_label_mim = geomButting(width_label width_label_m_edge (keep == 3))

Executing: MIMHK = geomOverlap(MIM MIMHK)

Executing: MIM = geomAndNot(MIM MIMHK)

Executing: MIMnw_all = geomInside(MIM nw)

Executing: MIMnw = geomOr(MIMnw_all)

Executing: MIMpi_all = geomAndNot(geomInside(MIM pi) MIMnw)

Executing: MIMpi = geomOr(MIMpi_all)

Executing: MIMsx_all = geomAndNot(MIM geomOr(MIMnw MIMpi))

Executing: MIMsx = geomOr(MIMsx_all)

Executing: MIMhdnw = geomOverlap(MIMnw mimhd)

Executing: MIMnw = geomOutside(MIMnw mimhd)

Executing: MIMhdpi = geomOverlap(MIMpi mimhd)

Executing: MIMpi = geomOutside(MIMpi mimhd)

Executing: MIMhdsx = geomOverlap(MIMsx mimhd)

Executing: MIMsx = geomOutside(MIMsx mimhd)

Executing: MIMHKnw = geomInside(MIMHK nw)

Executing: MIMHKpi = geomAndNot(geomInside(MIMHK pi) MIMHKnw)

Executing: MIMHKpc = geomAndNot(geomInside(MIMHK pc) geomOr(MIMHKnw MIMHKpi))

Executing: MIMHKsx = geomAndNot(MIMHK geomOr(MIMHKnw MIMHKpi MIMHKpc))

Executing: DUALMIM = geomOr(ht)

Executing: width_label_d_edge = geomSize(geomGetEdge(width_label coincident DUALMIM) 0.1)

Executing: width_label_dmim = geomButting(width_label width_label_d_edge (keep == 3))

Executing: DUALMIMnw_all = geomInside(DUALMIM nw)

Executing: DUALMIMnw = geomOr(DUALMIMnw_all)

Executing: DUALMIMpi_all = geomAndNot(geomInside(DUALMIM pi) DUALMIMnw)

Executing: DUALMIMpi = geomOr(DUALMIMpi_all)

Executing: DUALMIMsx_all = geomAndNot(DUALMIM geomOr(DUALMIMnw DUALMIMpi))

Executing: DUALMIMsx = geomOr(DUALMIMsx_all)

Executing: DUALMIMhdnw = geomOverlap(DUALMIMnw mimhd)

Executing: DUALMIMnw = geomOutside(DUALMIMnw mimhd)

Executing: DUALMIMhdpi = geomOverlap(DUALMIMpi mimhd)

Executing: DUALMIMpi = geomOutside(DUALMIMpi mimhd)

Executing: DUALMIMhdsx = geomOverlap(DUALMIMsx mimhd)

Executing: DUALMIMsx = geomOutside(DUALMIMsx mimhd)

Executing: all_mim = geomOr(MIM MIMHK DUALMIM)

Executing: bb_mim = geomOutside(geomOutside(geomOutside(geomInside(all_mim bb) nw) pc) pi)

Executing: nw_mim = geomOutside(geomOutside(geomInside(all_mim nw) bb) pc)

Executing: pc_mim = geomOutside(geomOutside(geomInside(all_mim pc) bb) nw)

Executing: nohr_mim = geomAndNot(geomAndNot(geomInside(all_mim nohr) bb_mim) nw_mim)

Executing: sub_mim = geomAndNot(geomAndNot(geomAndNot(geomAndNot(all_mim bb_mim) nw_mim)...

Executing: dualmid = geomAnd(geomAndNot(qt ht) mt)

Executing: dualbot = geomAnd(qt mt)

Executing: mimVtop = geomAnd(mim_top ft)

Executing: mimVbot = geomAnd(mim_bot ft)

Executing: duaVtop = geomAnd(dualtop ft)

Executing: duaVmid = geomAnd(dualmid ft)

Executing: duaVbot = geomAnd(dualbot ft)

Executing: errorLayer(geomOutside(ht ft) "No FT via over HT")

Executing: errorLayer(geomOutside(qt ft) "No FT via over QT")

Executing: ft = geomAndNot(ft qt)

Executing: k1_via = geomSize(geomSize(geomAnd(v1 k1) 0.5) -0.5)

Executing: v1 = geomAndNot(v1 k1)

Executing: k1_term = geomOr(k1_via drc(k1 k1_via (enc < 1.6) opposite))

Executing: k1_dev = geomAndNot(k1 k1_term)

Executing: k1_dev = geomButting(k1_dev k1_via (keep > 1))

Executing: k1_dev_bb = geomInside(k1_dev bb)

Executing: k1_dev_sx = geomOutside(k1_dev bb)

Executing: k1_model = geomOverlap(k1 geomOr(m1 rx pc))
	   errorLayer(k1_model "MODEL concern - K1 resistor not totally over STI substrate")

Executing: sub_diff_RF = geomOutside(geomAnd(geomOverlap(geomAndNot(pdiff nw) geomOr(ca ...

Executing: RF_via = geomAnd(RF_BULK sub_diff_RF)

Executing: ca1 = geomAnd(ca geomOr(ntie_top ptie_top ESD_pdnw_subc))

Executing: ca2 = geomAnd(ca geomOr(nfRF_drain nfRF_source DI_anode DI_cathode DI_coll DI...

Executing: ca3 = geomAnd(ca geomOr(efuse_anod efuse_cath ESD_pdnw_plus ESD_ndsx_plus))

Executing: ca4 = geomAnd(ca geomOr(pc pfet_sd nfet_sd esdnsh_drain esdnsh_source esdpsh_...

Executing: ca5 = geomAnd(ca geomOr(res6pc_term pdiff_tie ndiff_tie res6n_term res6p_term))

Executing: ca6 = geomAnd(ca geomOr(sub_diff pwell_diff nwell_diff nstap sub_diff_top sub...

Executing: ca7 = geomAnd(ca geomOr(pfRF_drain pfRF_source SBD_A SBD_C SBDNW_A SBDNW_C))

Executing: ca8 = geomAnd(ca geomOr(mosvar_pc mosvar_rx hvr_cath hvr_anod))

Executing: ca9 = geomAnd(ca geomOr(ncap_pc ncap_rx ncap_ndiff ESD_pdnw_minus ESD_ndsx_mi...

Executing: ca10 = geomAnd(ca geomOr(pcap_pc pcap_rx jfet_gate jfet_source jfet_drain))

Executing: ca11 = geomAnd(ca geomOr(vlnpn_c vlnpn_e vlnpn_g vlnpn_sub PSBD_A PSBD_C))

Executing: nd_comx = geomAndNot(geomBkgnd() geomNot(nfet_sd))

Executing: pd_comx = geomAndNot(geomBkgnd() geomNot(pfet_sd))

Executing: nd_fet = geomButting(nd_comx nfet_gate)

Executing: pd_fet = geomButting(pd_comx pfet_gate)

Executing: nd_tie = geomSize(ndiff_tie -0.03)

Executing: nd_tie_via = geomOr(nd_tie)

Executing: pd_tie = geomSize(pdiff_tie -0.03)

Executing: pd_tie_via = geomOr(pd_tie)

Executing: nd_comp = geomAndNot(geomBkgnd() geomNot(geomAnd(nd_comx geomOr(drc(geomSize(...

Executing: pd_comp = geomAndNot(geomBkgnd() geomNot(geomAnd(pd_comx geomOr(drc(geomSize(...

Executing: nd_via = geomAnd(nfet_sd nd_comp)

Executing: pd_via = geomAnd(pfet_sd pd_comp)

Executing: ndRF_scx = geomAndNot(geomBkgnd() geomNot(nfRF_source))

Executing: ndRF_drx = geomAndNot(geomBkgnd() geomNot(nfRF_drain))

Executing: ndRF_fet_sc = geomButting(ndRF_scx nfet_gate)

Executing: ndRF_fet_dr = geomButting(ndRF_drx nfet_gate)

Executing: ndRF_comp_sc = geomAndNot(geomBkgnd() geomNot(geomAnd(ndRF_scx geomOr(drc(geo...

Executing: ndRF_comp_dr = geomAndNot(geomBkgnd() geomNot(geomAnd(ndRF_drx geomOr(drc(geo...

Executing: ndRF_via_sc = geomAnd(nfRF_source ndRF_comp_sc)

Executing: ndRF_via_dr = geomAnd(nfRF_drain ndRF_comp_dr)

Executing: pdRF_scx = geomAndNot(geomBkgnd() geomNot(pfRF_source))

Executing: pdRF_drx = geomAndNot(geomBkgnd() geomNot(pfRF_drain))

Executing: pdRF_fet_sc = geomButting(pdRF_scx pfet_gate)

Executing: pdRF_fet_dr = geomButting(pdRF_drx pfet_gate)

Executing: pdRF_comp_sc = geomAndNot(geomBkgnd() geomNot(geomAnd(pdRF_scx geomOr(drc(geo...

Executing: pdRF_comp_dr = geomAndNot(geomBkgnd() geomNot(geomAnd(pdRF_drx geomOr(drc(geo...

Executing: pdRF_via_sc = geomAnd(pfRF_source pdRF_comp_sc)

Executing: pdRF_via_dr = geomAnd(pfRF_drain pdRF_comp_dr)

Executing: npd_comp = geomOr(nd_comp pd_comp)

Executing: FET_drain = geomOr(pdRF_comp_dr ndRF_comp_dr)

Executing: FET_source = geomOr(pdRF_comp_sc ndRF_comp_sc)

Executing: m1LV = geomGetTexted(m1 LV_NET "low_voltage_net")

Executing: pcLV = geomGetTexted(pc LV_NET "low_voltage_net")

Executing: m1LVCon = geomOr(m1LV)

Executing: pcLVCon = geomOr(pcLV)

Executing: LVgate = geomAndNot(Gate geomOr(dg tg))

Executing: LVgateCon = geomOr(LVgate)

Executing: fetDiff = geomOr(ndRF_comp_sc ndRF_comp_dr pdRF_comp_dr pdRF_comp_sc nfet_sd ...

Executing: HVdiff = geomAnd(geomOr(fetDiff) geomOr(dg tg))

Executing: HVdiffCon = geomOr(HVdiff)

Executing: bondpad_rect = geomOverlap(geomGetRectangle(PAD_DEV) bondPad_PC)

Executing: bondpad_poly = geomOverlap(geomGetBBox(geomAndNot(PAD_DEV bondpad_rect)) bond...

Executing: All_bondpad = geomSize(geomOr(bondpad_rect bondpad_poly) 5.18)

Executing: bondpad_pc_model = geomOr(All_bondpad)

Executing: rcxLayer(bondpad_pc_model)

Executing: fet_pc_model = geomOr(geomSize(geomOutside(geomOr(nfet_gate pfet_gate) tg) 0....

Executing: rcxLayer(fet_pc_model)

Executing: psbd_m1_model = geomAnd(geomOverlap(m1 geomOr(PSBD_A PSBD_C)) MOSvar)

Executing: sbd_m1_model = geomAnd(m1 geomOr(geomSize(SBD -1.2) geomSize(SBDNW -0.6)))

Executing: dipdnw_m1_model = geomAnd(m1 DI_diode)

Executing: divpnp_m1_model = geomAnd(m1 DI_VPNP)

Executing: dindpw_m1_model = geomAnd(m1 DIPI_diode)

Executing: mosvar_pcap_pc_model = geomOr(pcap_pc mosvar_pc)

Executing: mosvar_pcap_m1_model = geomAnd(m1 MOSvar)

Executing: pcdcap_pc_model = geomAnd(pc geomSize(geomOr(ncap_dev ncap33_dev) 0.24))

Executing: pcdcap_m1_model = geomAnd(m1 ncap_rx)

Executing: havar_m1_model = geomAnd(m1 geomOr(geomSize(hvr_dev -0.56) geomSize(diffhavar...

Executing: esd_m1_model = geomAnd(m1 geomOr(ESD_ndsx ESD_ndsx_GR_sized ESD_ndsx_GR ESD_n...

Executing: wire_m1_model = geomSize(shield1 0.02)

Executing: vncap_m1_model = geomAnd(geomOr(vncap_tnw1 vncap_top1) vncap_bot1)

Executing: rcxLayer(vncap_m1_model)

Executing: wire_m2_model = geomSize(geomOr(shield1 shield2) 0.02)

Executing: vncap_m2_model = geomAnd(geomOr(vncap_tnw2 vncap_top2) vncap_bot2)

Executing: rcxLayer(vncap_m2_model)

Executing: vncap_m2m1_model = geomAnd(geomOr(vncap_tnw2 vncap_top2) vncap_bot1)

Executing: rcxLayer(vncap_m2m1_model)

Executing: wire_m3_model = geomSize(geomOr(shield1 shield2 shield3) 0.02)

Executing: vncap_m3_model = geomAnd(geomOr(vncap_tnw3 vncap_top3) vncap_bot3)

Executing: rcxLayer(vncap_m3_model)

Executing: vncap_m3m2_model = geomAnd(geomOr(vncap_tnw3 vncap_top3) vncap_bot2)

Executing: rcxLayer(vncap_m3m2_model)

Executing: vncap_m3m1_model = geomAnd(geomOr(vncap_tnw3 vncap_top3) vncap_bot1)

Executing: rcxLayer(vncap_m3m1_model)

Executing: wire_m4_model = geomSize(geomOr(shield1 shield2 shield3 shield4) 0.02)

Executing: vncap_m4_model = geomAnd(geomOr(vncap_tnw4 vncap_top4) vncap_bot4)

Executing: rcxLayer(vncap_m4_model)

Executing: vncap_m4m3_model = geomAnd(geomOr(vncap_tnw4 vncap_top4) vncap_bot3)

Executing: rcxLayer(vncap_m4m3_model)

Executing: vncap_m4m2_model = geomAnd(geomOr(vncap_tnw4 vncap_top4) vncap_bot2)

Executing: rcxLayer(vncap_m4m2_model)

Executing: vncap_m4m1_model = geomAnd(geomOr(vncap_tnw4 vncap_top4) vncap_bot1)

Executing: rcxLayer(vncap_m4m1_model)

Executing: wire_mt_model = geomSize(geomOr(shield1 shield2 shield3 shield4 shieldT) 0.02)

Executing: vncap_mt_model = geomAnd(geomOr(vncap_tnwt vncap_topt) vncap_bott)

Executing: rcxLayer(vncap_mt_model)

Executing: vncap_mtm4_model = geomAnd(geomOr(vncap_tnwt vncap_topt) vncap_bot4)

Executing: rcxLayer(vncap_mtm4_model)

Executing: vncap_mtm3_model = geomAnd(geomOr(vncap_tnwt vncap_topt) vncap_bot3)

Executing: rcxLayer(vncap_mtm3_model)

Executing: vncap_mtm2_model = geomAnd(geomOr(vncap_tnwt vncap_topt) vncap_bot2)

Executing: rcxLayer(vncap_mtm2_model)

Executing: vncap_mtm1_model = geomAnd(geomOr(vncap_tnwt vncap_topt) vncap_bot1)

Executing: rcxLayer(vncap_mtm1_model)

Executing: RfDevice_pc_model = geomAnd(geomButtOrOver(pc Gate) geomSize(RF 0.2))

Executing: rcxLayer(RfDevice_pc_model)

Executing: RfDevice_m1_model = geomAnd(m1 geomSize(RF 0.2))

Executing: rcxLayer(RfDevice_m1_model)

Executing: RfDevice_m2_model = geomAnd(geomOverlap(m2 geomAnd(v1 RfDevice_m1_model)) geo...

Executing: rcxLayer(RfDevice_m2_model)

Executing: vlnpn_pc_model = geomOverlap(pc vlnpn_g)

Executing: rcxLayer(vlnpn_pc_model)

Executing: vlnpn_m1_model = geomAnd(geomOverlap(m1 geomOr(ca4 ca6 ca7 ca11)) geomSize(vl...

Executing: rcxLayer(vlnpn_m1_model)

Executing: vlnpn_m2_model = geomAnd(geomOverlap(m2 geomAnd(v1 geomOr(vlnpn_c vlnpn_e))) ...

Executing: rcxLayer(vlnpn_m2_model)

Executing: jfet_m1_model = geomAnd(m1 geomOr(jfet_drain jfet_source jfet_gate))

Executing: rcxLayer(jfet_m1_model)

Executing: jfet_m2_model = geomAnd(m2 geomOr(jfet_drain jfet_source))

Executing: rcxLayer(jfet_m2_model)

Executing: pc_device_model = geomOr(fet_pc_model pcdcap_pc_model mosvar_pcap_pc_model vl...

Executing: pc_model = geomAnd(pc pc_device_model)

Executing: pc_resistive = geomAndNot(pc pc_model)

Executing: m1_device_model = geomOr(m1_ind_groundplane esd_m1_model havar_m1_model pcdca...

Executing: m1_model = geomAnd(m1 m1_device_model)

Executing: m1_resistive = geomAndNot(m1 m1_model)

Executing: m2_device_model = geomOr(vlnpn_m2_model RfDevice_m2_model ndiff_vlnpn jfet_m2...

Executing: m2_model = geomAnd(m2 m2_device_model)

Executing: m2_resistive = geomAndNot(m2 m2_model)

Executing: m3_device_blockage = geomOr(VNCAP_M3 wire_m3_model)

Executing: m3_model = geomAnd(m3 m3_device_blockage)

Executing: m3_resistive = geomAndNot(m3 m3_model)

Executing: m4_device_blockage = geomOr(VNCAP_M4 wire_m4_model)

Executing: m4_model = geomAnd(m4 m4_device_blockage)

Executing: m4_resistive = geomAndNot(m4 m4_model)

Executing: mt_device_model = geomOr(VNCAP_MT wire_mt_model geomSize(MIM 2.0) geomSize(MI...

Executing: mt_model = geomAnd(mt mt_device_model)

Executing: mt_resistive = geomAndNot(mt mt_model)

Executing: pc_columbus = geomOr(pc_model)

Executing: m1_columbus = geomOr(m1_model)

Executing: mt_columbus = geomOr(mt_model)

Executing: m2_columbus = geomOr(m2_model)

Executing: m3_columbus = geomOr(m3_model)

Executing: m4_columbus = geomOr(m4_model)

Executing: geomConnect((via vncap_via1 m1_model m1_resistive vncap_term1) (via vncap_via...
 See the label report in "SL_LVS.erc" file for details.


Executing: geomHoles(nw)

Executing: nw_ring = geomButting(nw nw_hole)

Executing: NWbias_device = geomOr(pfet_gate VPNPnw ESD_nw DI_diode MOSVAR res6p_bar res6...

Executing: TWbias_device = geomOr(ntie_device nfettw_all pcap_dev DIPI_diode PSBD)

Executing: nw_ring = geomAndNot(nw_ring geomButting(nw_ring geomOverlap(nw_hole TWbias_d...

Executing: nw_ring = geomAndNot(nw_ring geomOverlap(nw_ring NWbias_device))

Executing: nw_ring = geomCat(nw_ring)

Executing: geomStamp(nw_ring nwell_diff multConnect "nw_StampErrorConnect" majority)

Executing: nw_StampErrorFloat = geomOutside(nw_ring nwell_diff)
	   errorLayer(nw_StampErrorFloat "nw_StampErrorFloat")

Executing: nw_StampErrorMult = geomOverlap(nw_ring nw_StampErrorConnect)
	   errorLayer(nw_StampErrorMult "nw_StampErrorMult")

Executing: nw = geomCat(nw)

Executing: geomStamp(nw nwell_diff multConnect "nw_StampErrorConnect" majority)

Executing: nw_StampErrorFloat = geomOutside(nw nwell_diff)
	   errorLayer(nw_StampErrorFloat "nw_StampErrorFloat")

Executing: nw_StampErrorMult = geomOverlap(nw nw_StampErrorConnect)
	   errorLayer(nw_StampErrorMult "nw_StampErrorMult")

Executing: ncap_nw = geomCat(ncap_nw)

Executing: geomStamp(ncap_nw ncap_ndiff multConnect "ncap_nw_StampErrorConnect" majority)

Executing: ncap_nw_StampErrorFloat = geomOutside(ncap_nw ncap_ndiff)
	   errorLayer(ncap_nw_StampErrorFloat "ncap_nw_StampErrorFloat")

Executing: ncap_nw_StampErrorMult = geomOverlap(ncap_nw ncap_nw_StampErrorConnect)
	   errorLayer(ncap_nw_StampErrorMult "ncap_nw_StampErrorMult")

Executing: well = geomCat(nw)

Executing: geomStamp(well nwell_diff multConnect "well_StampErrorConnect" majority)

Executing: well_StampErrorFloat = geomOutside(well nwell_diff)
	   errorLayer(well_StampErrorFloat "well_StampErrorFloat")

Executing: well_StampErrorMult = geomOverlap(well well_StampErrorConnect)
	   errorLayer(well_StampErrorMult "well_StampErrorMult")

Executing: nfeti_bottom_iso = geomCat(nfeti_bottom_iso)

Executing: geomStamp(nfeti_bottom_iso nw multConnect "pi_StampErrorConnect" majority)

Executing: pi_StampErrorFloat = geomOutside(nfeti_bottom_iso nw)
	   errorLayer(pi_StampErrorFloat "pi_StampErrorFloat")

Executing: pi_StampErrorMult = geomOverlap(nfeti_bottom_iso pi_StampErrorConnect)
	   errorLayer(pi_StampErrorMult "pi_StampErrorMult")

Executing: pwell = geomCat(pwell)

Executing: geomStamp(pwell pwell_diff multConnect "pwell_StampErrorConnect" majority)

Executing: pwell_StampErrorFloat = geomOutside(pwell pwell_diff)
	   errorLayer(pwell_StampErrorFloat "pwell_StampErrorFloat")

Executing: pwell_StampErrorMult = geomOverlap(pwell pwell_StampErrorConnect)
	   errorLayer(pwell_StampErrorMult "pwell_StampErrorMult")

Executing: ns = geomCat(ns)

Executing: geomStamp(ns nstap multConnect "ns_StampErrorConnect" majority)

Executing: ns_StampErrorFloat = geomOutside(ns nstap)
	   errorLayer(ns_StampErrorFloat "ns_StampErrorFloat")

Executing: ns_StampErrorMult = geomOverlap(ns ns_StampErrorConnect)
	   errorLayer(ns_StampErrorMult "ns_StampErrorMult")

Executing: geomStamp(substrate_ptap sub_diff multConnect "substrate_ptap_StampErrorCon" majority)

Executing: geomStamp(substrate substrate_ptap multConnect "substrate_StampErrorCon" majority)

Executing: geomStamp(subs_sti substrate multConnect "sub_sti_StampErrorCon" majority)

Executing: geomStamp(sub1K substrate multConnect majority)

Executing: geomStamp(sub50 substrate multConnect majority)

Executing: mixed_voltage_net = geomNodeRelate(LVgate HVdiff conn)

Executing: mixed_voltage_OK_M1 = geomNodeRelate(LVgate m1LV conn)

Executing: mixed_voltage_OK_PC = geomNodeRelate(LVgate pcLV conn)

Executing: mixed_voltage_net_err = geomAndNot(mixed_voltage_net geomOr(mixed_voltage_OK_...
	   errorLayer(mixed_voltage_net_err "Mixed voltage net found : 3V3 or 5V diffusion is connected to 1.8V gate")

Executing: geomPathCheck((layer sub_diff sub_diff_top) pwr "ptap connected to POWER net found !")

Executing: geomPathCheck((layer pwell_diff) pwr "pwtap connected to POWER net found !")

Executing: geomPathCheck((layer nw) gnd "nw connected to ground ")

Executing: geomPathCheck((layer pdiff_tie ptie_top) pwr "ptie connected to power ")

Executing: fwd_biased_ptie_err = geomOverlap(nw_to_ground ptie_to_power)
	   errorLayer(fwd_biased_ptie_err "forward biased ptie device found ! [tdpdnw/diodepnw] ")

Executing: geomPathCheck((layer pwell) pwr "pwell connected to power ")

Executing: geomPathCheck((layer ndiff_tie ntie_top) gnd "ntie connected to ground ")

Executing: fwd_biased_ntie_err = geomOverlap(pwell_to_power ntie_to_ground)
	   errorLayer(fwd_biased_ntie_err "forward biased ntie device found ! [tdndsx,tdndpw/diodenx,diodendpw] ")

Executing: geomPathCheck((layer nw_ring) noPwr "NW ring not connected to a power net found !")

Executing: end_fet_rx_edge = geomSize(geomButting(geomOr(nd_comx pd_comx) Gate (keep == ...

Executing: extractDevice("nfettw4" nfeti_dev (pc_model "G") (nfet_sd "S" "D") (pwell "B"...

Executing: extractDevice("nfettw4" nfeti_dev_psp (pc_model "G") (nfet_sd "S" "D") (pwell...

Executing: extractDevice("nfettw4" nfeti_dev_b (pc_model "G") (nfet_sd "S" "D") (pwell "...

Executing: extractDevice("nfettw4" nfeti_dev_psp_b (pc_model "G") (nfet_sd "S" "D") (pwe...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfeti_dev "tw" 1)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: sti = measureParameter(area (nfeti_dev over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfeti_dev_psp "tw" 1)

Executing: saveProperty(nfeti_dev_psp "model" "nfetpsp")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: sti = measureParameter(area (nfeti_dev_psp over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfeti_dev_b "tw" 1)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: sti = measureParameter(area (nfeti_dev_b over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: nfet_bends = measureParameter(bends_all (nfeti_dev_b coincident pc))

Executing: nameParameter(nfet_bends "bentgate")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfeti_dev_psp_b "tw" 1)

Executing: saveProperty(nfeti_dev_psp_b "model" "nfetpsp")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: sti = measureParameter(area (nfeti_dev_psp_b over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: nfet_bends = measureParameter(bends_all (nfeti_dev_psp_b coincident pc))

Executing: nameParameter(nfet_bends "bentgate")

Executing: extractDevice("nfettw" nfet6_dev (pc_model "G") (nfet_sd "S" "D") (pwell "B")...

Executing: extractDevice("nfettw" nfet6_dev_psp (pc_model "G") (nfet_sd "S" "D") (pwell ...

Executing: extractDevice("nfettw" nfet6_dev_b (pc_model "G") (nfet_sd "S" "D") (pwell "B...

Executing: extractDevice("nfettw" nfet6_dev_psp_b (pc_model "G") (nfet_sd "S" "D") (pwel...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: sti = measureParameter(area (nfet6_dev over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: sti = measureParameter(area (nfet6_dev_psp over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: saveProperty(nfet6_dev_psp "model" "nfettwpsp")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: sti = measureParameter(area (nfet6_dev_b over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: nfet_bends = measureParameter(bends_all (nfet6_dev_b coincident pc))

Executing: nameParameter(nfet_bends "bentgate")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: sti = measureParameter(area (nfet6_dev_psp_b over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: saveProperty(nfet6_dev_psp_b "model" "nfettwpsp")

Executing: nfet_bends = measureParameter(bends_all (nfet6_dev_psp_b coincident pc))

Executing: nameParameter(nfet_bends "bentgate")

Executing: extractDevice("nfet33tw4" nfeti_dev_MV (pc_model "G") (nfet_sd "S" "D") (pwel...

Executing: extractDevice("nfet33tw4" nfeti_dev_psp_MV (pc_model "G") (nfet_sd "S" "D") (...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfeti_dev_MV "tw" 1)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfeti_dev_psp_MV "tw" 1)

Executing: saveProperty(nfeti_dev_psp_MV "model" "nfet33psp")

Executing: extractDevice("nfet33tw" nfet6_dev_MV (pc_model "G") (nfet_sd "S" "D") (pwell...

Executing: extractDevice("nfet33tw" nfet6_dev_psp_MV (pc_model "G") (nfet_sd "S" "D") (p...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfet6_dev_psp_MV "model" "nfet33twpsp")

Executing: extractDevice("nfet33tw4" nfeti_dev_HV (pc_model "G") (nfet_sd "S" "D") (pwel...

Executing: extractDevice("nfet33tw4" nfeti_dev_psp_HV (pc_model "G") (nfet_sd "S" "D") (...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfeti_dev_HV "tw" 1)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfeti_dev_psp_HV "tw" 1)

Executing: saveProperty(nfeti_dev_psp_HV "model" "nfet33psp")

Executing: extractDevice("nfet33tw" nfet6_dev_HV (pc_model "G") (nfet_sd "S" "D") (pwell...

Executing: extractDevice("nfet33tw" nfet6_dev_psp_HV (pc_model "G") (nfet_sd "S" "D") (p...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfet6_dev_psp_HV "model" "nfet33twpsp")

Executing: extractDevice("nfet50tw4" nfeti_dev_TG (pc_model "G") (nfet_sd "S" "D") (pwel...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfeti_dev_TG "tw" 1)

Executing: extractDevice("nfet50tw" nfet6_dev_TG (pc_model "G") (nfet_sd "S" "D") (pwell...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: extractDevice("nfet" nfet_dpw (pc_model "G") (nfet_sd "S" "D") (pwell "B") fl...

Executing: extractDevice("nfet" nfet_dev (pc_model "G") (nfet_sd "S" "D") (substrate "B"...
         1 'nfet' created in cell 'BUFFER_J layout cmrf7sf_digital_layout'.

Executing: extractDevice("nfet" nfet_dpw_psp (pc_model "G") (nfet_sd "S" "D") (pwell "B"...

Executing: extractDevice("nfet" nfet_dev_psp (pc_model "G") (nfet_sd "S" "D") (substrate...

Executing: extractDevice("zvtnfet" nfzv_dev (pc_model "G") (nfet_sd "S" "D") (substrate ...

Executing: extractDevice("zvtnfet33" nfzv_dev_HV (pc_model "G") (nfet_sd "S" "D") (subst...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: sti = measureParameter(area (nfet_dev over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: sti = measureParameter(area (nfet_dev_psp over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: saveProperty(nfet_dev_psp "model" "nfetpsp")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: sti = measureParameter(area (nfet_dpw over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: sti = measureParameter(area (nfet_dpw_psp over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: saveProperty(nfet_dpw_psp "model" "nfetpsp")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: extractDevice("nfet33" nfet_dpw_MV (pc_model "G") (nfet_sd "S" "D") (pwell "B...

Executing: extractDevice("nfet33" nfet_dev_MV (pc_model "G") (nfet_sd "S" "D") (substrat...

Executing: extractDevice("nfet33" nfet_dpw_psp_MV (pc_model "G") (nfet_sd "S" "D") (pwel...

Executing: extractDevice("nfet33" nfet_dev_psp_MV (pc_model "G") (nfet_sd "S" "D") (subs...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfet_dpw_psp_MV "model" "nfet33psp")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfet_dev_psp_MV "model" "nfet33psp")

Executing: extractDevice("nfet33" nfet_dpw_HV (pc_model "G") (nfet_sd "S" "D") (pwell "B...

Executing: extractDevice("nfet33" nfet_dev_HV (pc_model "G") (nfet_sd "S" "D") (substrat...

Executing: extractDevice("nfet33" nfet_dpw_psp_HV (pc_model "G") (nfet_sd "S" "D") (pwel...

Executing: extractDevice("nfet33" nfet_dev_psp_HV (pc_model "G") (nfet_sd "S" "D") (subs...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfet_dpw_psp_HV "model" "nfet33psp")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(nfet_dev_psp_HV "model" "nfet33psp")

Executing: extractDevice("nfet50" nfet_dpw_TG (pc_model "G") (nfet_sd "S" "D") (pwell "B...

Executing: extractDevice("nfet50" nfet_dev_TG (pc_model "G") (nfet_sd "S" "D") (substrat...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: extractDevice("nfethv" nfet_dev_HVT (pc_model "G") (nfet_sd "S" "D") (substra...

Executing: extractDevice("nfethv" nfet_dev_HVT_b (pc_model "G") (nfet_sd "S" "D") (subst...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: nfet_bends = measureParameter(bends_all (nfet_dev_HVT_b coincident pc))

Executing: nameParameter(nfet_bends "bentgate")

Executing: extractDevice("nfet" nfet_dpw_b (pc_model "G") (nfet_sd "S" "D") (pwell "B") ...

Executing: extractDevice("nfet" nfet_dev_b (pc_model "G") (nfet_sd "S" "D") (substrate "...
         4 'nfet' created in cell 'BUFFER_J layout cmrf7sf_digital_layout'.

Executing: extractDevice("nfet" nfet_dpw_psp_b (pc_model "G") (nfet_sd "S" "D") (pwell "...

Executing: extractDevice("nfet" nfet_dev_psp_b (pc_model "G") (nfet_sd "S" "D") (substra...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_bends = measureParameter(bends_all (nfet_dpw_b coincident pc))

Executing: nameParameter(nfet_bends "bentgate")

Executing: sti = measureParameter(area (nfet_dpw_b over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_bends = measureParameter(bends_all (nfet_dpw_psp_b coincident pc))

Executing: nameParameter(nfet_bends "bentgate")

Executing: sti = measureParameter(area (nfet_dpw_psp_b over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: saveProperty(nfet_dpw_psp_b "model" "nfetpsp")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_bends = measureParameter(bends_all (nfet_dev_b coincident pc))

Executing: nameParameter(nfet_bends "bentgate")

Executing: sti = measureParameter(area (nfet_dev_b over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_bends = measureParameter(bends_all (nfet_dev_psp_b coincident pc))

Executing: nameParameter(nfet_bends "bentgate")

Executing: sti = measureParameter(area (nfet_dev_psp_b over end_fet_rx_edge) 0.0001)

Executing: sti_stress = calculateParameter(((sti / width) + (length - length)))

Executing: nameParameter(sti_stress "stis")

Executing: saveProperty(nfet_dev_psp_b "model" "nfetpsp")

Executing: extractDevice("pfet" pfet_dev (pc_model "G") (pfet_sd "S" "D") (nw "B") flagM...
         1 'pfet' created in cell 'BUFFER_J layout cmrf7sf_digital_layout'.

Executing: extractDevice("pfet" pfet_dev_psp (pc_model "G") (pfet_sd "S" "D") (nw "B") f...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(pfet_dev_psp "model" "pfetpsp")

Executing: extractDevice("pfet33" pfet_dev_MV (pc_model "G") (pfet_sd "S" "D") (nw "B") ...

Executing: extractDevice("pfet33" pfet_dev_psp_MV (pc_model "G") (pfet_sd "S" "D") (nw "...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(pfet_dev_psp_MV "model" "pfet33psp")

Executing: extractDevice("pfet33" pfet_dev_HV (pc_model "G") (pfet_sd "S" "D") (nw "B") ...

Executing: extractDevice("pfet33" pfet_dev_psp_HV (pc_model "G") (pfet_sd "S" "D") (nw "...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(pfet_dev_psp_HV "model" "pfet33psp")

Executing: extractDevice("pfet50" pfet_dev_TG (pc_model "G") (pfet_sd "S" "D") (nw "B") ...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: extractDevice("p5pfet50" pfet_dev_SCG (pc_model "G") (pfet_sd "S" "D") (nw "B...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: extractDevice("pfethv" pfet_dev_HVT (pc_model "G") (pfet_sd "S" "D") (nw "B")...

Executing: extractDevice("pfethv" pfet_dev_HVT_b (pc_model "G") (pfet_sd "S" "D") (nw "B...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: pfet_bends = measureParameter(bends_all (pfet_dev_HVT_b coincident pc))

Executing: nameParameter(pfet_bends "bentgate")

Executing: extractDevice("pfet" pfet_dev_b (pc_model "G") (pfet_sd "S" "D") (nw "B") fla...
         4 'pfet' created in cell 'BUFFER_J layout cmrf7sf_digital_layout'.

Executing: extractDevice("pfet" pfet_dev_psp_b (pc_model "G") (pfet_sd "S" "D") (nw "B")...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: pfet_bends = measureParameter(bends_all (pfet_dev_b coincident pc))

Executing: nameParameter(pfet_bends "bentgate")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: width = measureParameter(length (dev_ID coincident pc) 5e-07)

Executing: nameParameter(width "w")

Executing: nameParameter(width "wt")

Executing: area = measureParameter(area (dev_ID over rx) 1e-12)

Executing: length = calculateParameter((area / width))

Executing: nameParameter(length "l")

Executing: nc = measureParameter(figCount (dev_ID enclosing dual_poly))

Executing: gcon = calculateParameter((nc + 1.0 + (length - length)))

Executing: nameParameter(gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 0)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "nf" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: pfet_bends = measureParameter(bends_all (pfet_dev_psp_b coincident pc))

Executing: nameParameter(pfet_bends "bentgate")

Executing: saveProperty(pfet_dev_psp_b "model" "pfetpsp")

Executing: extractDevice("nfettw4" nfeti_mul (pc_model "G") (nfet_sd "S" "D") (pwell "B"...

Executing: extractDevice("nfettw4" nfeti_mul_psp (pc_model "G") (nfet_sd "S" "D") (pwell...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfeti_mul "tw" 1)

Executing: saveProperty(nfeti_mul "stis" 2)

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfeti_mul_psp "tw" 1)

Executing: saveProperty(nfeti_mul_psp "stis" 2)

Executing: saveProperty(nfeti_mul_psp "model" "nfetpsp")

Executing: extractDevice("nfettw" nfet6_mul (pc_model "G") (nfet_sd "S" "D") (pwell "B")...

Executing: extractDevice("nfettw" nfet6_mul_psp (pc_model "G") (nfet_sd "S" "D") (pwell ...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfet6_mul "stis" 2)

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfet6_mul_psp "stis" 2)

Executing: saveProperty(nfet6_mul_psp "model" "nfettwpsp")

Executing: extractDevice("nfet33tw4" nfeti_mul_MV (pc_model "G") (nfet_sd "S" "D") (pwel...

Executing: extractDevice("nfet33tw4" nfeti_mul_psp_MV (pc_model "G") (nfet_sd "S" "D") (...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfeti_mul_MV "tw" 1)

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfeti_mul_psp_MV "tw" 1)

Executing: saveProperty(nfeti_mul_psp_MV "model" "nfet33psp")

Executing: extractDevice("nfet33tw" nfet6_mul_MV (pc_model "G") (nfet_sd "S" "D") (pwell...

Executing: extractDevice("nfet33tw" nfet6_mul_psp_MV (pc_model "G") (nfet_sd "S" "D") (p...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfet6_mul_psp_MV "model" "nfet33twpsp")

Executing: extractDevice("nfet33tw4" nfeti_mul_HV (pc_model "G") (nfet_sd "S" "D") (pwel...

Executing: extractDevice("nfet33tw4" nfeti_mul_psp_HV (pc_model "G") (nfet_sd "S" "D") (...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfeti_mul_HV "tw" 1)

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfeti_mul_psp_HV "tw" 1)

Executing: saveProperty(nfeti_mul_psp_HV "model" "nfet33psp")

Executing: extractDevice("nfet33tw" nfet6_mul_HV (pc_model "G") (nfet_sd "S" "D") (pwell...

Executing: extractDevice("nfet33tw" nfet6_mul_psp_HV (pc_model "G") (nfet_sd "S" "D") (p...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfet6_mul_psp_HV "model" "nfet33twpsp")

Executing: extractDevice("nfet50tw4" nfeti_mul_TG (pc_model "G") (nfet_sd "S" "D") (pwel...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfeti_mul_TG "tw" 1)

Executing: extractDevice("nfet50tw" nfet6_mul_TG (pc_model "G") (nfet_sd "S" "D") (pwell...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: extractDevice("nfet" nfet_mul (pc_model "G") (nfet_sd "S" "D") (pwell "B") fl...
           extractDevice("nfet" nfet_mul (pc_model "G") (nfet_sd "S" "D") (substrate "B"...

Executing: extractDevice("nfet" nfet_mul_psp (pc_model "G") (nfet_sd "S" "D") (pwell "B"...
           extractDevice("nfet" nfet_mul_psp (pc_model "G") (nfet_sd "S" "D") (substrate...

Executing: extractDevice("zvtnfet" nfzv_mul (pc_model "G") (nfet_sd "S" "D") (substrate ...

Executing: extractDevice("zvtnfet33" nfzv_mul_HV (pc_model "G") (nfet_sd "S" "D") (subst...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfet_mul "stis" 2)

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfet_mul_psp "stis" 2)

Executing: saveProperty(nfet_mul_psp "model" "nfetpsp")

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: extractDevice("nfet33" nfet_mul_MV (pc_model "G") (nfet_sd "S" "D") (pwell "B...
           extractDevice("nfet33" nfet_mul_MV (pc_model "G") (nfet_sd "S" "D") (substrat...

Executing: extractDevice("nfet33" nfet_mul_psp_MV (pc_model "G") (nfet_sd "S" "D") (pwel...
           extractDevice("nfet33" nfet_mul_psp_MV (pc_model "G") (nfet_sd "S" "D") (subs...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfet_mul_psp_MV "model" "nfet33psp")

Executing: extractDevice("nfet33" nfet_mul_HV (pc_model "G") (nfet_sd "S" "D") (pwell "B...
           extractDevice("nfet33" nfet_mul_HV (pc_model "G") (nfet_sd "S" "D") (substrat...

Executing: extractDevice("nfet33" nfet_mul_psp_HV (pc_model "G") (nfet_sd "S" "D") (pwel...
           extractDevice("nfet33" nfet_mul_psp_HV (pc_model "G") (nfet_sd "S" "D") (subs...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(nfet_mul_psp_HV "model" "nfet33psp")

Executing: extractDevice("nfet50" nfet_mul_TG (pc_model "G") (nfet_sd "S" "D") (pwell "B...
           extractDevice("nfet50" nfet_mul_TG (pc_model "G") (nfet_sd "S" "D") (substrat...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: extractDevice("nfethv" nfet_mul_HVT (pc_model "G") (nfet_sd "S" "D") (substra...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: extractDevice("pfet" pfet_mul (pc_model "G") (pfet_sd "S" "D") (nw "B") flagM...

Executing: extractDevice("pfet" pfet_mul_psp (pc_model "G") (pfet_sd "S" "D") (nw "B") f...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(pfet_mul_psp "model" "pfetpsp")

Executing: extractDevice("pfet33" pfet_mul_MV (pc_model "G") (pfet_sd "S" "D") (nw "B") ...

Executing: extractDevice("pfet33" pfet_mul_psp_MV (pc_model "G") (pfet_sd "S" "D") (nw "...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(pfet_mul_psp_MV "model" "pfet33psp")

Executing: extractDevice("pfet33" pfet_mul_HV (pc_model "G") (pfet_sd "S" "D") (nw "B") ...

Executing: extractDevice("pfet33" pfet_mul_psp_HV (pc_model "G") (pfet_sd "S" "D") (nw "...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(pfet_mul_psp_HV "model" "pfet33psp")

Executing: extractDevice("pfet50" pfet_mul_TG (pc_model "G") (pfet_sd "S" "D") (nw "B") ...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: extractDevice("p5pfet50" pfet_mul_SCG (pc_model "G") (pfet_sd "S" "D") (nw "B...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: extractDevice("pfethv" pfet_mul_HVT (pc_model "G") (pfet_sd "S" "D") (nw "B")...

Executing: saveProperty(dev_ID "rf" 0)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: GNS_M = geomOverlap(dev_ID nfet_gate_gns)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: gns_shape = measureParameter(figCount (dev_ID enclosing GNS_M))

Executing: gns = calculateParameter((gns_shape + (length - length)))

Executing: nameParameter(gns "gns")

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: n_peri = measureParameter(perimeter (dev_ID over npd_comp))

Executing: n_area = measureParameter(area (dev_ID over npd_comp))

Executing: nb_dx = measureParameter(figCount (dev_ID enclosing npd_comp))

Executing: nb_d = calculateParameter(floor((nb_dx / 2)))

Executing: nb_s = calculateParameter((nb_d + (fmod nb_dx 2)))

Executing: ad = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: as = calculateParameter(((((n_area * 1e-12) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: pd = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_d) / (nb_dx - 1)))

Executing: ps = calculateParameter(((((n_peri * 1e-06) / nb_dx) * nb_s) / (nb_dx - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: extractDevice("nfettw4" nfRFi_dev (pc_model "G") (ndRF_comp_dr "D") (ndRF_com...

Executing: extractDevice("nfettw4" nfRFi_dev_psp (pc_model "G") (ndRF_comp_dr "D") (ndRF...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_dev "tw" 1)

Executing: saveProperty(nfRFi_dev "stis" 2)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_dev_psp "tw" 1)

Executing: saveProperty(nfRFi_dev_psp "stis" 2)

Executing: saveProperty(nfRFi_dev_psp "model" "nfetpsp")

Executing: extractDevice("nfettw" nfRF6_dev (pc_model "G") (ndRF_comp_dr "D") (ndRF_comp...

Executing: extractDevice("nfettw" nfRF6_dev_psp (pc_model "G") (ndRF_comp_dr "D") (ndRF_...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF6_dev "stis" 2)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF6_dev_psp "stis" 2)

Executing: saveProperty(nfRF6_dev_psp "model" "nfettwpsp")

Executing: extractDevice("nfet33tw4" nfRFi_dev_MV (pc_model "G") (ndRF_comp_dr "D") (ndR...

Executing: extractDevice("nfet33tw4" nfRFi_dev_psp_MV (pc_model "G") (ndRF_comp_dr "D") ...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_dev_MV "tw" 1)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_dev_psp_MV "tw" 1)

Executing: saveProperty(nfRFi_dev_psp_MV "model" "nfet33psp")

Executing: extractDevice("nfet33tw" nfRF6_dev_MV (pc_model "G") (ndRF_comp_dr "D") (ndRF...

Executing: extractDevice("nfet33tw" nfRF6_dev_psp_MV (pc_model "G") (ndRF_comp_dr "D") (...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF6_dev_psp_MV "model" "nfet33twpsp")

Executing: extractDevice("nfet33tw4" nfRFi_dev_HV (pc_model "G") (ndRF_comp_dr "D") (ndR...

Executing: extractDevice("nfet33tw4" nfRFi_dev_psp_HV (pc_model "G") (ndRF_comp_dr "D") ...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_dev_HV "tw" 1)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_dev_psp_HV "tw" 1)

Executing: saveProperty(nfRFi_dev_psp_HV "model" "nfet33psp")

Executing: extractDevice("nfet33tw" nfRF6_dev_HV (pc_model "G") (ndRF_comp_dr "D") (ndRF...

Executing: extractDevice("nfet33tw" nfRF6_dev_psp_HV (pc_model "G") (ndRF_comp_dr "D") (...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF6_dev_psp_HV "model" "nfet33twpsp")

Executing: extractDevice("nfet50tw4" nfRFi_dev_TG (pc_model "G") (ndRF_comp_dr "D") (ndR...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_dev_TG "tw" 1)

Executing: extractDevice("nfet50tw" nfRF6_dev_TG (pc_model "G") (ndRF_comp_dr "D") (ndRF...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: extractDevice("nfet" nfRF_dev (pc_model "G") (ndRF_comp_dr "D") (ndRF_comp_sc...
           extractDevice("nfet" nfRF_dev (pc_model "G") (ndRF_comp_dr "D") (ndRF_comp_sc...

Executing: extractDevice("nfet" nfRF_dev_psp (pc_model "G") (ndRF_comp_dr "D") (ndRF_com...
           extractDevice("nfet" nfRF_dev_psp (pc_model "G") (ndRF_comp_dr "D") (ndRF_com...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF_dev "stis" 2)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF_dev_psp "stis" 2)

Executing: saveProperty(nfRF_dev_psp "model" "nfetpsp")

Executing: extractDevice("nfet33" nfRF_dev_MV (pc_model "G") (ndRF_comp_dr "D") (ndRF_co...
           extractDevice("nfet33" nfRF_dev_MV (pc_model "G") (ndRF_comp_dr "D") (ndRF_co...

Executing: extractDevice("nfet33" nfRF_dev_psp_MV (pc_model "G") (ndRF_comp_dr "D") (ndR...
           extractDevice("nfet33" nfRF_dev_psp_MV (pc_model "G") (ndRF_comp_dr "D") (ndR...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF_dev_psp_MV "model" "nfet33psp")

Executing: extractDevice("nfet33" nfRF_dev_HV (pc_model "G") (ndRF_comp_dr "D") (ndRF_co...
           extractDevice("nfet33" nfRF_dev_HV (pc_model "G") (ndRF_comp_dr "D") (ndRF_co...

Executing: extractDevice("nfet33" nfRF_dev_psp_HV (pc_model "G") (ndRF_comp_dr "D") (ndR...
           extractDevice("nfet33" nfRF_dev_psp_HV (pc_model "G") (ndRF_comp_dr "D") (ndR...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF_dev_psp_HV "model" "nfet33psp")

Executing: extractDevice("nfet50" nfRF_dev_TG (pc_model "G") (ndRF_comp_dr "D") (ndRF_co...
           extractDevice("nfet50" nfRF_dev_TG (pc_model "G") (ndRF_comp_dr "D") (ndRF_co...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: extractDevice("pfet" pfRF_dev (pc_model "G") (pdRF_comp_dr "D") (pdRF_comp_sc...

Executing: extractDevice("pfet" pfRF_dev_psp (pc_model "G") (pdRF_comp_dr "D") (pdRF_com...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(pfRF_dev_psp "model" "pfetpsp")

Executing: extractDevice("pfet33" pfRF_dev_MV (pc_model "G") (pdRF_comp_dr "D") (pdRF_co...

Executing: extractDevice("pfet33" pfRF_dev_psp_MV (pc_model "G") (pdRF_comp_dr "D") (pdR...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(pfRF_dev_psp_MV "model" "pfet33psp")

Executing: extractDevice("pfet33" pfRF_dev_HV (pc_model "G") (pdRF_comp_dr "D") (pdRF_co...

Executing: extractDevice("pfet33" pfRF_dev_psp_HV (pc_model "G") (pdRF_comp_dr "D") (pdR...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(pfRF_dev_psp_HV "model" "pfet33psp")

Executing: extractDevice("pfet50" pfRF_dev_TG (pc_model "G") (pdRF_comp_dr "D") (pdRF_co...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: extractDevice("p5pfet50" pfRF_dev_SCG (pc_model "G") (pdRF_comp_dr "D") (pdRF...

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (length - length)))

Executing: nameParameter(psp "psp")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: saveProperty(dev_ID "rf" 1)

Executing: saveProperty(dev_ID "gcon" 2)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: extractDevice("nfettw4" nfRFi_mul (pc_model "G") (ndRF_comp_dr "D") (ndRF_com...

Executing: extractDevice("nfettw4" nfRFi_mul_psp (pc_model "G") (ndRF_comp_dr "D") (ndRF...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_mul "tw" 1)

Executing: saveProperty(nfRFi_mul "stis" 2)

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_mul_psp "tw" 1)

Executing: saveProperty(nfRFi_mul_psp "stis" 2)

Executing: saveProperty(nfRFi_mul_psp "model" "nfetpsp")

Executing: extractDevice("nfettw" nfRF6_mul (pc_model "G") (ndRF_comp_dr "D") (ndRF_comp...

Executing: extractDevice("nfettw" nfRF6_mul_psp (pc_model "G") (ndRF_comp_dr "D") (ndRF_...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF6_mul "stis" 2)

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF6_mul_psp "stis" 2)

Executing: saveProperty(nfRF6_mul_psp "model" "nfettwpsp")

Executing: extractDevice("nfet33tw4" nfRFi_mul_MV (pc_model "G") (ndRF_comp_dr "D") (ndR...

Executing: extractDevice("nfet33tw4" nfRFi_mul_psp_MV (pc_model "G") (ndRF_comp_dr "D") ...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_mul_MV "tw" 1)

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_mul_psp_MV "tw" 1)

Executing: saveProperty(nfRFi_mul_psp_MV "model" "nfet33psp")

Executing: extractDevice("nfet33tw" nfRF6_mul_MV (pc_model "G") (ndRF_comp_dr "D") (ndRF...

Executing: extractDevice("nfet33tw" nfRF6_mul_psp_MV (pc_model "G") (ndRF_comp_dr "D") (...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF6_mul_psp_MV "model" "nfet33twpsp")

Executing: extractDevice("nfet33tw4" nfRFi_mul_HV (pc_model "G") (ndRF_comp_dr "D") (ndR...

Executing: extractDevice("nfet33tw4" nfRFi_mul_psp_HV (pc_model "G") (ndRF_comp_dr "D") ...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_mul_HV "tw" 1)

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_mul_psp_HV "tw" 1)

Executing: saveProperty(nfRFi_mul_psp_HV "model" "nfet33psp")

Executing: extractDevice("nfet33tw" nfRF6_mul_HV (pc_model "G") (ndRF_comp_dr "D") (ndRF...

Executing: extractDevice("nfet33tw" nfRF6_mul_psp_HV (pc_model "G") (ndRF_comp_dr "D") (...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF6_mul_psp_HV "model" "nfet33twpsp")

Executing: extractDevice("nfet50tw4" nfRFi_mul_TG (pc_model "G") (ndRF_comp_dr "D") (ndR...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRFi_mul_TG "tw" 1)

Executing: extractDevice("nfet50tw" nfRF6_mul_TG (pc_model "G") (ndRF_comp_dr "D") (ndRF...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: extractDevice("nfet" nfRF_mul (pc_model "G") (ndRF_comp_dr "D") (ndRF_comp_sc...
           extractDevice("nfet" nfRF_mul (pc_model "G") (ndRF_comp_dr "D") (ndRF_comp_sc...

Executing: extractDevice("nfet" nfRF_mul_psp (pc_model "G") (ndRF_comp_dr "D") (ndRF_com...
           extractDevice("nfet" nfRF_mul_psp (pc_model "G") (ndRF_comp_dr "D") (ndRF_com...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF_mul "stis" 2)

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF_mul_psp "stis" 2)

Executing: saveProperty(nfRF_mul_psp "model" "nfetpsp")

Executing: extractDevice("nfet33" nfRF_mul_MV (pc_model "G") (ndRF_comp_dr "D") (ndRF_co...
           extractDevice("nfet33" nfRF_mul_MV (pc_model "G") (ndRF_comp_dr "D") (ndRF_co...

Executing: extractDevice("nfet33" nfRF_mul_psp_MV (pc_model "G") (ndRF_comp_dr "D") (ndR...
           extractDevice("nfet33" nfRF_mul_psp_MV (pc_model "G") (ndRF_comp_dr "D") (ndR...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF_mul_psp_MV "model" "nfet33psp")

Executing: extractDevice("nfet33" nfRF_mul_HV (pc_model "G") (ndRF_comp_dr "D") (ndRF_co...
           extractDevice("nfet33" nfRF_mul_HV (pc_model "G") (ndRF_comp_dr "D") (ndRF_co...

Executing: extractDevice("nfet33" nfRF_mul_psp_HV (pc_model "G") (ndRF_comp_dr "D") (ndR...
           extractDevice("nfet33" nfRF_mul_psp_HV (pc_model "G") (ndRF_comp_dr "D") (ndR...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(nfRF_mul_psp_HV "model" "nfet33psp")

Executing: extractDevice("nfet50" nfRF_mul_TG (pc_model "G") (ndRF_comp_dr "D") (ndRF_co...
           extractDevice("nfet50" nfRF_mul_TG (pc_model "G") (ndRF_comp_dr "D") (ndRF_co...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: extractDevice("pfet" pfRF_mul (pc_model "G") (pdRF_comp_dr "D") (pdRF_comp_sc...

Executing: extractDevice("pfet" pfRF_mul_psp (pc_model "G") (pdRF_comp_dr "D") (pdRF_com...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(pfRF_mul_psp "model" "pfetpsp")

Executing: extractDevice("pfet33" pfRF_mul_MV (pc_model "G") (pdRF_comp_dr "D") (pdRF_co...

Executing: extractDevice("pfet33" pfRF_mul_psp_MV (pc_model "G") (pdRF_comp_dr "D") (pdR...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(pfRF_mul_psp_MV "model" "pfet33psp")

Executing: extractDevice("pfet33" pfRF_mul_HV (pc_model "G") (pdRF_comp_dr "D") (pdRF_co...

Executing: extractDevice("pfet33" pfRF_mul_psp_HV (pc_model "G") (pdRF_comp_dr "D") (pdR...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: saveProperty(pfRF_mul_psp_HV "model" "pfet33psp")

Executing: extractDevice("pfet50" pfRF_mul_TG (pc_model "G") (pdRF_comp_dr "D") (pdRF_co...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: extractDevice("p5pfet50" pfRF_mul_SCG (pc_model "G") (pdRF_comp_dr "D") (pdRF...

Executing: saveProperty(dev_ID "rf" 1)

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: PSP_M = geomOverlap(dev_ID psp_model)

Executing: saveProperty(dev_ID "gns" 0)

Executing: wx = measureParameter(perimeter (dev_ID over Gate) 5e-07)

Executing: lx = measureParameter(length (dev_ID coincident Gate) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing Gate))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: width = calculateParameter(((wx - lx) / nf))

Executing: nameParameter(width "w")

Executing: fet_wt = calculateParameter((width * nf))

Executing: nameParameter(fet_wt "wt")

Executing: nrd = calculateParameter((2.6e-07 / (width - 6e-08)))

Executing: nameParameter(nrd "nrd")

Executing: nameParameter(nrd "nrs")

Executing: nfet_nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: nfet_gcon = calculateParameter((nfet_nc + 1.0 + (lx - lx)))

Executing: nameParameter(nfet_gcon "gcon")

Executing: psp_shape = measureParameter(figCount (dev_ID enclosing PSP_M))

Executing: psp = calculateParameter((psp_shape + (lx - lx)))

Executing: nameParameter(psp "psp")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "mSwitch" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M2 sub")

Executing: s_fig = measureParameter(figCount (dev_ID enclosing FET_source))

Executing: d_fig = measureParameter(figCount (dev_ID enclosing FET_drain))

Executing: d_area = measureParameter(area (dev_ID over FET_drain))

Executing: s_area = measureParameter(area (dev_ID over FET_source))

Executing: d_peri = measureParameter(perimeter (dev_ID over FET_drain))

Executing: s_peri = measureParameter(perimeter (dev_ID over FET_source))

Executing: ad = calculateParameter(((d_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: as = calculateParameter(((s_area * 1e-12) / ((d_fig + s_fig) - 1)))

Executing: pd = calculateParameter(((d_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: ps = calculateParameter(((s_peri * 1e-06) / ((d_fig + s_fig) - 1)))

Executing: nameParameter(ad "ad")

Executing: nameParameter(as "as")

Executing: nameParameter(pd "pd")

Executing: nameParameter(ps "ps")

Executing: saveProperty(dev_ID "blockParasiticsLPP" "OUTLINE rf")

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Area ("as" "S") ("ad" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: attachParameter(Perim ("ps" "S") ("pd" "D") dev_ID shared)

Executing: extractDevice("havar" hvr_dev (hvr_cath "C") (hvr_anod "A") (substrate "BULK"...

Executing: extractDevice("diffhavar" diffhavar_dev (hvr_cath "C") (hvr_anod "AA" "AB") (...

Executing: saveProperty(hvr_dev "m" 1)

Executing: saveProperty(hvr_dev "c" -1)

Executing: saveProperty(hvr_dev "blockParasiticsBetween" "PC sub")

Executing: hvr_anodes = measureParameter(figCount (hvr_dev enclosing hvr_anod))

Executing: nameParameter(hvr_anodes "nastripes")

Executing: hvr_anode_width = measureParameter(area (hvr_dev over rx_label) 1e-05)

Executing: nameParameter(hvr_anode_width "rxw")

Executing: hvr_anode_area = measureParameter(area (hvr_dev over var_rx not_over rn) 1e-12)

Executing: hvr_rxl = calculateParameter((hvr_anode_area / hvr_anode_width / hvr_anodes))

Executing: nameParameter(hvr_rxl "rxl")

Executing: hvr_M = measureParameter(figCount (hvr_dev enclosing hvr_mul))

Executing: hvr_mSwitch = calculateParameter((hvr_M + (hvr_anode_area - hvr_anode_area)))

Executing: nameParameter(hvr_mSwitch "mSwitch")

Executing: cap = calculateParameter(((ca0 * (hvr_anode_width + dw) * (hvr_rxl + dl) * hv...

Executing: nameParameter(cap "cap")

Executing: saveProperty(diffhavar_dev "m" 1)

Executing: dhvr_mul = geomOverlap(diffhavar_dev multi)

Executing: dhvr_xrep = measureParameter(figCount (diffhavar_dev enclosing width_label_dh...

Executing: nameParameter(dhvr_xrep "nf")

Executing: dhvr_a_nber = measureParameter(figCount (diffhavar_dev enclosing hvr_anod))

Executing: nameParameter(dhvr_a_nber "number_of_anodes")

Executing: dhvr_yrep = calculateParameter((dhvr_a_nber / dhvr_xrep))

Executing: nameParameter(dhvr_yrep "yrep")

Executing: dhvr_l_area = measureParameter(area (diffhavar_dev over width_label_dhvr))

Executing: dhvr_length = calculateParameter(((dhvr_l_area / 0.1 / dhvr_xrep) * 1e-06))

Executing: nameParameter(dhvr_length "w")

Executing: dhvr_w_area = measureParameter(area (diffhavar_dev over hvr_anod))

Executing: dhvr_width = calculateParameter(((dhvr_w_area / dhvr_a_nber / (dhvr_length * ...

Executing: nameParameter(dhvr_width "l")

Executing: dhvr_m = measureParameter(figCount (diffhavar_dev enclosing dhvr_mul))

Executing: dhvr_mSwitch = calculateParameter((dhvr_m + (dhvr_length - dhvr_length)))

Executing: nameParameter(dhvr_mSwitch "mSwitch")

Executing: saveProperty(diffhavar_dev "blockParasiticsBetween" "M1 sub")

Executing: extractDevice("sbd" SBD (SBD_C "C") (SBD_A "A") (substrate "BULK") flagMalfor...

Executing: extractDevice("sbdnw" SBDNW (SBDNW_C "C") (SBDNW_A "A") (substrate "BULK") fl...

Executing: extractDevice("psbd" PSBD (PSBD_C "C") (PSBD_A "A") (nfeti_bottom_iso "TW") f...

Executing: saveProperty(SBD "m" 1)

Executing: saveProperty(SBD "par" 1)

Executing: sbd_mul = geomOverlap(SBD multi)

Executing: sbd_anodes = measureParameter(figCount (SBD enclosing SBD_A))

Executing: nameParameter(sbd_anodes "nf")

Executing: sbd_rxw = measureParameter(area (SBD over width_label_sbd) 1e-05)

Executing: sbd_rxw_width = calculateParameter((sbd_rxw / sbd_anodes))

Executing: nameParameter(sbd_rxw_width "w")

Executing: sbd_an_area = measureParameter(area (SBD over SBD_A not_over pd) 1e-12)

Executing: sbd_rxl = calculateParameter((sbd_an_area / sbd_rxw))

Executing: nameParameter(sbd_rxl "l")

Executing: sbd_M = measureParameter(figCount (SBD enclosing sbd_mul))

Executing: sbd_mSwitch = calculateParameter((sbd_M + (sbd_rxw - sbd_rxw)))

Executing: nameParameter(sbd_mSwitch "mSwitch")

Executing: saveProperty(SBD "blockParasiticsBetween" "M1 sub")

Executing: saveProperty(SBDNW "m" 1)

Executing: saveProperty(SBDNW "par" 1)

Executing: sbdnw_mul = geomOverlap(SBDNW multi)

Executing: sbdnw_anodes = measureParameter(figCount (SBDNW enclosing SBDNW_A))

Executing: nameParameter(sbdnw_anodes "nf")

Executing: sbdnw_rxw = measureParameter(area (SBDNW over width_label_sbdnw) 1e-05)

Executing: sbdnw_rxw_width = calculateParameter((sbdnw_rxw / sbdnw_anodes))

Executing: nameParameter(sbdnw_rxw_width "w")

Executing: sbdnw_an_area = measureParameter(area (SBDNW over SBDNW_A not_over pd) 1e-12)

Executing: sbdnw_rxl = calculateParameter((sbdnw_an_area / sbdnw_rxw))

Executing: nameParameter(sbdnw_rxl "l")

Executing: sbdnw_M = measureParameter(figCount (SBDNW enclosing sbdnw_mul))

Executing: sbdnw_mSwitch = calculateParameter((sbdnw_M + (sbdnw_rxw - sbdnw_rxw)))

Executing: nameParameter(sbdnw_mSwitch "mSwitch")

Executing: saveProperty(SBDNW "blockParasiticsBetween" "M1 sub")

Executing: saveProperty(PSBD "m" 1)

Executing: saveProperty(PSBD "par" 1)

Executing: psbd_mul = geomOverlap(PSBD multi)

Executing: psbd_cath = measureParameter(figCount (PSBD enclosing PSBD_C))

Executing: nameParameter(psbd_cath "nf")

Executing: psbd_rxw = measureParameter(area (PSBD over width_label_psbd) 1e-05)

Executing: psbd_rxw_width = calculateParameter((psbd_rxw / psbd_cath))

Executing: nameParameter(psbd_rxw_width "w")

Executing: psbd_ca_area = measureParameter(area (PSBD over PSBD_C) 1e-12)

Executing: psbd_rxl = calculateParameter((psbd_ca_area / psbd_rxw))

Executing: nameParameter(psbd_rxl "l")

Executing: psbd_M = measureParameter(figCount (PSBD enclosing psbd_mul))

Executing: psbd_mSwitch = calculateParameter((psbd_M + (psbd_rxw - psbd_rxw)))

Executing: nameParameter(psbd_mSwitch "mSwitch")

Executing: saveProperty(PSBD "blockParasiticsBetween" "M1 sub")

Executing: extractDevice("dipdnw" DI_diode (DI_anode "PLUS") (DI_cathode "SUB") flagMalf...

Executing: extractDevice("dindpw" DIPI_diode (DIPI_iso_node "tw") (DIPI_anode "pw") (DIP...

Executing: extractDevice("divpnp" DI_VPNP (DI_coll "SUB") (DI_cathode "NW") (DI_anode "P...

Executing: saveProperty(DI_diode "blockParasiticsBetween" "PC sub")

Executing: di_mul = geomOverlap(DI_diode multi)

Executing: di_anodes = measureParameter(figCount (DI_diode enclosing DI_anode))

Executing: nameParameter(di_anodes "nf")

Executing: di_width = measureParameter(area (DI_diode over rx_label) 1e-05)

Executing: nameParameter(di_width "w")

Executing: di_area = measureParameter(area (DI_diode over DI_anode))

Executing: di_length = calculateParameter(((di_area * 1e-12) / di_anodes / di_width))

Executing: nameParameter(di_length "l")

Executing: di_M = measureParameter(figCount (DI_diode enclosing di_mul))

Executing: di_mSwitch = calculateParameter((di_M + (di_width - di_width)))

Executing: nameParameter(di_mSwitch "mSwitch")

Executing: saveProperty(DI_diode "m" 1)

Executing: saveProperty(DI_diode "par" 1)

Executing: dindpw_mul = geomOverlap(DIPI_diode multi)

Executing: dipi_num_cath = measureParameter(figCount (DIPI_diode enclosing DIPI_cathode))

Executing: nameParameter(dipi_num_cath "nf")

Executing: dipi_width = measureParameter(area (DIPI_diode over rx_label) 1e-05)

Executing: nameParameter(dipi_width "w")

Executing: dipi_area = measureParameter(area (DIPI_diode over DIPI_cathode))

Executing: dipi_length = calculateParameter(((dipi_area * 1e-12) / dipi_num_cath / dipi_...

Executing: nameParameter(dipi_length "l")

Executing: dindpw_M = measureParameter(figCount (DIPI_diode enclosing dindpw_mul))

Executing: dindpw_mSwitch = calculateParameter((dindpw_M + (dipi_width - dipi_width)))

Executing: nameParameter(dindpw_mSwitch "mSwitch")

Executing: saveProperty(DIPI_diode "m" 1)

Executing: saveProperty(DIPI_diode "par" 1)

Executing: saveProperty(DI_VPNP "blockParasiticsBetween" "PC sub")

Executing: divpnp_mul = geomOverlap(DI_VPNP multi)

Executing: vpnp_emitters = measureParameter(figCount (DI_VPNP enclosing DI_anode))

Executing: nameParameter(vpnp_emitters "nf")

Executing: vpnp_width = measureParameter(area (DI_VPNP over rx_label) 1e-05)

Executing: nameParameter(vpnp_width "w")

Executing: vpnp_area = measureParameter(area (DI_VPNP over DI_anode))

Executing: vpnp_length = calculateParameter(((vpnp_area * 1e-12) / vpnp_emitters / vpnp_...

Executing: nameParameter(vpnp_length "l")

Executing: divpnp_M = measureParameter(figCount (DI_VPNP enclosing divpnp_mul))

Executing: divpnp_mSwitch = calculateParameter((divpnp_M + (vpnp_width - vpnp_width)))

Executing: nameParameter(divpnp_mSwitch "mSwitch")

Executing: saveProperty(DI_VPNP "m" 1)

Executing: saveProperty(DI_VPNP "par" 1)

Executing: extractDevice("pcdcap" ncap_dev (ncap_pc "G") (ncap_rx "D") (substrate "B") f...

Executing: extractDevice("pcdcap33" ncap33_dev (ncap_pc "G") (ncap_rx "D") (substrate "B...

Executing: extractDevice("pcdcap50" ncap50_dev (ncap_pc "G") (ncap_rx "D") (substrate "B...

Executing: saveProperty(dev_ID "m" 1)

Executing: ncap_gate = measureParameter(figCount (dev_ID enclosing ncap_gates))

Executing: nameParameter(ncap_gate "gates")

Executing: ncap_length1 = measureParameter(area (dev_ID over ncap_pc_length) 5e-06)

Executing: ncap_width1 = measureParameter(area (dev_ID over ncap_rx_width) 5e-06)

Executing: ncap_length = calculateParameter((ncap_length1 / ncap_gate))

Executing: ncap_width = calculateParameter((ncap_width1 / ncap_gate))

Executing: nameParameter(ncap_length "l")

Executing: nameParameter(ncap_width "w")

Executing: ncap_M = measureParameter(figCount (dev_ID enclosing ncap_mul))

Executing: ncap_mSwitch = calculateParameter((ncap_M + (ncap_length - ncap_length)))

Executing: nameParameter(ncap_mSwitch "mSwitch")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(dev_ID "m" 1)

Executing: ncap_gate = measureParameter(figCount (dev_ID enclosing ncap_gates))

Executing: nameParameter(ncap_gate "gates")

Executing: ncap_length1 = measureParameter(area (dev_ID over ncap_pc_length) 5e-06)

Executing: ncap_width1 = measureParameter(area (dev_ID over ncap_rx_width) 5e-06)

Executing: ncap_length = calculateParameter((ncap_length1 / ncap_gate))

Executing: ncap_width = calculateParameter((ncap_width1 / ncap_gate))

Executing: nameParameter(ncap_length "l")

Executing: nameParameter(ncap_width "w")

Executing: ncap_M = measureParameter(figCount (dev_ID enclosing ncap_mul))

Executing: ncap_mSwitch = calculateParameter((ncap_M + (ncap_length - ncap_length)))

Executing: nameParameter(ncap_mSwitch "mSwitch")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(dev_ID "m" 1)

Executing: ncap_gate = measureParameter(figCount (dev_ID enclosing ncap_gates))

Executing: nameParameter(ncap_gate "gates")

Executing: ncap_length1 = measureParameter(area (dev_ID over ncap_pc_length) 5e-06)

Executing: ncap_width1 = measureParameter(area (dev_ID over ncap_rx_width) 5e-06)

Executing: ncap_length = calculateParameter((ncap_length1 / ncap_gate))

Executing: ncap_width = calculateParameter((ncap_width1 / ncap_gate))

Executing: nameParameter(ncap_length "l")

Executing: nameParameter(ncap_width "w")

Executing: ncap_M = measureParameter(figCount (dev_ID enclosing ncap_mul))

Executing: ncap_mSwitch = calculateParameter((ncap_M + (ncap_length - ncap_length)))

Executing: nameParameter(ncap_mSwitch "mSwitch")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: extractDevice("diffmosvar" diffmosvar_dev (mosvar_pc "GA" "GB") (mosvar_rx "D...

Executing: extractDevice("mosvar" mosvar_dev (mosvar_pc "G") (mosvar_rx "D") (substrate ...

Executing: extractDevice("mosvar50" mosvar50_dev (mosvar_pc "G") (mosvar_rx "D") (substr...

Executing: extractDevice("p5pcdcap50" p5pcdcap50_dev (mosvar_pc "G") (mosvar_rx "D") (su...

Executing: extractDevice("pcap" pcap_dev (pcap_pc "G") (pcap_rx "D") (nfeti_bottom_iso "...

Executing: saveProperty(dev_ID "m" 1)

Executing: dmosvar_nf = measureParameter(figCount (dev_ID enclosing mosvar_gates))

Executing: nameParameter(dmosvar_nf "nf")

Executing: dmosvar_length1 = measureParameter(area (dev_ID over mosvar_pc_length) 5e-06)

Executing: dmosvar_width1 = measureParameter(area (dev_ID over mosvar_rx_width) 1e-05)

Executing: dmosvar_length = calculateParameter((dmosvar_length1 / dmosvar_nf))

Executing: dmosvar_width = calculateParameter((dmosvar_width1 / dmosvar_nf))

Executing: nameParameter(dmosvar_length "l")

Executing: nameParameter(dmosvar_width "w")

Executing: dmos_M = measureParameter(figCount (dev_ID enclosing mosvar_mul))

Executing: dmos_mSwitch = calculateParameter((dmos_M + (dmosvar_length - dmosvar_length)))

Executing: nameParameter(dmos_mSwitch "mSwitch")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(dev_ID "m" 1)

Executing: mosvar_gate = measureParameter(figCount (dev_ID enclosing mosvar_gates))

Executing: nameParameter(mosvar_gate "gates")

Executing: mosvar_length1 = measureParameter(area (dev_ID over mosvar_pc_length) 5e-06)

Executing: mosvar_width1 = measureParameter(area (dev_ID over mosvar_rx_width) 1e-05)

Executing: mosvar_length = calculateParameter((mosvar_length1 / mosvar_gate))

Executing: mosvar_width = calculateParameter((mosvar_width1 / mosvar_gate))

Executing: nameParameter(mosvar_length "l")

Executing: nameParameter(mosvar_width "w")

Executing: mosvar_yrep = measureParameter(figCount (dev_ID enclosing mosvar_RX))

Executing: nameParameter(mosvar_yrep "yrep")

Executing: mosvar_xrep = calculateParameter((mosvar_gate / mosvar_yrep))

Executing: nameParameter(mosvar_xrep "xrep")

Executing: mos_M = measureParameter(figCount (dev_ID enclosing mosvar_mul))

Executing: mos_mSwitch = calculateParameter((mos_M + (mosvar_length - mosvar_length)))

Executing: nameParameter(mos_mSwitch "mSwitch")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(dev_ID "m" 1)

Executing: mosvar_gate = measureParameter(figCount (dev_ID enclosing mosvar_gates))

Executing: nameParameter(mosvar_gate "gates")

Executing: mosvar_length1 = measureParameter(area (dev_ID over mosvar_pc_length) 5e-06)

Executing: mosvar_width1 = measureParameter(area (dev_ID over mosvar_rx_width) 1e-05)

Executing: mosvar_length = calculateParameter((mosvar_length1 / mosvar_gate))

Executing: mosvar_width = calculateParameter((mosvar_width1 / mosvar_gate))

Executing: nameParameter(mosvar_length "l")

Executing: nameParameter(mosvar_width "w")

Executing: mosvar_yrep = measureParameter(figCount (dev_ID enclosing mosvar_RX))

Executing: nameParameter(mosvar_yrep "yrep")

Executing: mosvar_xrep = calculateParameter((mosvar_gate / mosvar_yrep))

Executing: nameParameter(mosvar_xrep "xrep")

Executing: mos_M = measureParameter(figCount (dev_ID enclosing mosvar_mul))

Executing: mos_mSwitch = calculateParameter((mos_M + (mosvar_length - mosvar_length)))

Executing: nameParameter(mos_mSwitch "mSwitch")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(dev_ID "m" 1)

Executing: mosvar_gate = measureParameter(figCount (dev_ID enclosing mosvar_gates))

Executing: nameParameter(mosvar_gate "gates")

Executing: mosvar_length1 = measureParameter(area (dev_ID over mosvar_pc_length) 5e-06)

Executing: mosvar_width1 = measureParameter(area (dev_ID over mosvar_rx_width) 1e-05)

Executing: mosvar_length = calculateParameter((mosvar_length1 / mosvar_gate))

Executing: mosvar_width = calculateParameter((mosvar_width1 / mosvar_gate))

Executing: nameParameter(mosvar_length "l")

Executing: nameParameter(mosvar_width "w")

Executing: mosvar_yrep = measureParameter(figCount (dev_ID enclosing mosvar_RX))

Executing: nameParameter(mosvar_yrep "yrep")

Executing: mosvar_xrep = calculateParameter((mosvar_gate / mosvar_yrep))

Executing: nameParameter(mosvar_xrep "xrep")

Executing: mos_M = measureParameter(figCount (dev_ID enclosing mosvar_mul))

Executing: mos_mSwitch = calculateParameter((mos_M + (mosvar_length - mosvar_length)))

Executing: nameParameter(mos_mSwitch "mSwitch")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: saveProperty(dev_ID "m" 1)

Executing: pcap_gate = measureParameter(figCount (dev_ID enclosing pcap_gates))

Executing: nameParameter(pcap_gate "gates")

Executing: pcap_length1 = measureParameter(area (dev_ID over pcap_pc_length) 1e-05)

Executing: pcap_width1 = measureParameter(area (dev_ID over pcap_rx_width) 1e-05)

Executing: pcap_length = calculateParameter((pcap_length1 / pcap_gate))

Executing: pcap_width = calculateParameter((pcap_width1 / pcap_gate))

Executing: nameParameter(pcap_length "l")

Executing: nameParameter(pcap_width "w")

Executing: pcap_yrep = measureParameter(figCount (dev_ID enclosing pcap_pdiff))

Executing: nameParameter(pcap_yrep "yrep")

Executing: pcap_xrep = calculateParameter((pcap_gate / pcap_yrep))

Executing: nameParameter(pcap_xrep "xrep")

Executing: mos_M = measureParameter(figCount (dev_ID enclosing pcap_mul))

Executing: mos_mSwitch = calculateParameter((mos_M + (pcap_length - pcap_length)))

Executing: nameParameter(mos_mSwitch "mSwitch")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: vlnpn_c_good = geomNodeRelate(nfeti_bottom_iso vlnpn_c conn)

Executing: vlnpn_c_bad = geomAndNot(vlnpn_c vlnpn_c_good)
	   errorLayer(vlnpn_c_bad "vlnpn collector not connected to nw_ring")

Executing: extractDevice("vlnpn" vlnpn_dev (vlnpn_c "C") (vlnpn_e "E") (vlnpn_g "G") (pw...

Executing: DP = geomOverlap(dev_ID dual_poly)

Executing: vlnpn_mul = geomOverlap(vlnpn_dev multi)

Executing: nf = measureParameter(figCount (dev_ID enclosing vlnpn_e))

Executing: nameParameter(nf "nstripes")

Executing: vlnpn_width = measureParameter(area (dev_ID over vlnpn_exl) 5e-06)

Executing: exl = calculateParameter((vlnpn_width / nf))

Executing: vlnpn_a = measureParameter(area (dev_ID over vlnpn_area) 5e-13)

Executing: exw = calculateParameter((vlnpn_a / exl / nf))

Executing: nameParameter(exw "exw")

Executing: nameParameter(exl "exl")

Executing: nc = measureParameter(figCount (dev_ID enclosing DP))

Executing: gcon = calculateParameter((nc + 1.0 + (nf - nf)))

Executing: nameParameter(gcon "gcon")

Executing: vlnpn_m = measureParameter(figCount (vlnpn_dev enclosing vlnpn_mul))

Executing: vlnpn_mSw = calculateParameter((vlnpn_m + (nf - nf)))

Executing: nameParameter(vlnpn_mSw "mSwitch")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M1 sub")

Executing: extractDevice("jfetjc" jfet_dev (jfet_drain "D") (jfet_source "S") (jfet_gate...

Executing: jfet_mul = geomOverlap(jfet_dev multi)

Executing: ax = measureParameter(area (dev_ID over jfet_sd) 1e-12)

Executing: lsd = measureParameter(area (dev_ID over width_label_jfet_sd) 1e-05)

Executing: width = calculateParameter((ax / lsd))

Executing: lx = measureParameter(length (dev_ID coincident jfet_G) 5e-07)

Executing: nf = measureParameter(figCount (dev_ID enclosing jfet_G))

Executing: nameParameter(nf "nf")

Executing: length = calculateParameter((lx / nf))

Executing: nameParameter(length "l")

Executing: nameParameter(width "w")

Executing: wt = calculateParameter((width * nf))

Executing: nameParameter(wt "wt")

Executing: jfet_m = measureParameter(figCount (jfet_dev enclosing jfet_mul))

Executing: jfet_mSwitch = calculateParameter((jfet_m + (length - length)))

Executing: nameParameter(jfet_mSwitch "mSwitch")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "PC sub")

Executing: extractDevice("rr_serpentine" res_serpentine (res6pc_term "D" "S") (substrate...

Executing: extractDevice("rr_serpentine" resnw_serpentine (res6pc_term "D" "S") (nw "G")...

Executing: corners = geomGetCorner(dev_ID angleMulti90 convex)

Executing: resHV7_edges = geomAvoiding(geomSize(geomGetEdge(dev_ID inside op) -0.01) cor...

Executing: op_filter = geomAndNot(op geomSize(pd 0.28))

Executing: rr_width = measureParameter(length (dev_ID coincident op) 5e-07)

Executing: corner_number = measureParameter(figCount (dev_ID enclosing corners))

Executing: stripes = calculateParameter((((corner_number - 4.0) / 2.0) + 1.0))

Executing: resHV7_length = measureParameter(length (dev_ID coincident resHV7_edges) 1e-06)

Executing: resHV7 = calculateParameter((resHV7_length / (stripes - 1.0)))

Executing: rr_area = measureParameter(area (dev_ID over op_filter) 1e-12)

Executing: corr_factor = calculateParameter((resHV7 * rr_width * (stripes - 1.0)))

Executing: rr_length = calculateParameter(((rr_area - corr_factor) / stripes / rr_width))

Executing: rr_L = calculateParameter((rr_length * 1000000.0))

Executing: rr_W = calculateParameter(((rr_width * 1000000.0) + dw))

Executing: res_r = calculateParameter((((rs * (((rr_L - (2.0 * rr_W)) * stripes) + (2 * ...

Executing: res_M = measureParameter(figCount (dev_ID enclosing resistor_m))

Executing: res_mSwitch = calculateParameter((res_M + (rr_width - rr_width)))

Executing: nameParameter(rr_width "w")

Executing: nameParameter(stripes "n")

Executing: nameParameter(rr_length "l")

Executing: nameParameter(res_r "r")

Executing: nameParameter(res_r "reff")

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "s" 1)

Executing: saveProperty(dev_ID "pbar" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M1 sub")

Executing: serp_bb = measureParameter(figCount (res_serpentine enclosing resbb_serpentin...

Executing: serp_sub = measureParameter(figCount (res_serpentine enclosing ressub_serpent...

Executing: serp_bp = calculateParameter((serp_bb + serp_sub))

Executing: nameParameter(serp_bp "bp")

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_FE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_FE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: nameParameter(rsx_value "rsx")

Executing: corners = geomGetCorner(dev_ID angleMulti90 convex)

Executing: resHV7_edges = geomAvoiding(geomSize(geomGetEdge(dev_ID inside op) -0.01) cor...

Executing: rr_width = measureParameter(length (dev_ID coincident op) 5e-07)

Executing: corner_number = measureParameter(figCount (dev_ID enclosing corners))

Executing: stripes = calculateParameter((((corner_number - 4.0) / 2.0) + 1.0))

Executing: resHV7_length = measureParameter(length (dev_ID coincident resHV7_edges) 1e-06)

Executing: resHV7 = calculateParameter((resHV7_length / (stripes - 1.0)))

Executing: rr_area = measureParameter(area (dev_ID over op_filter) 1e-12)

Executing: corr_factor = calculateParameter((resHV7 * rr_width * (stripes - 1.0)))

Executing: rr_length = calculateParameter(((rr_area - corr_factor) / stripes / rr_width))

Executing: rr_L = calculateParameter((rr_length * 1000000.0))

Executing: rr_W = calculateParameter(((rr_width * 1000000.0) + dw))

Executing: res_r = calculateParameter((((rs * (((rr_L - (2.0 * rr_W)) * stripes) + (2 * ...

Executing: res_M = measureParameter(figCount (dev_ID enclosing resistor_m))

Executing: res_mSwitch = calculateParameter((res_M + (rr_width - rr_width)))

Executing: nameParameter(rr_width "w")

Executing: nameParameter(stripes "n")

Executing: nameParameter(rr_length "l")

Executing: nameParameter(res_r "r")

Executing: nameParameter(res_r "reff")

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "s" 1)

Executing: saveProperty(dev_ID "pbar" 1)

Executing: saveProperty(dev_ID "blockParasiticsBetween" "M1 sub")

Executing: saveProperty(resnw_serpentine "bp" 1)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_FE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_FE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: nameParameter(rsx_value "rsx")

Executing: extractDevice("opppcres" rnw6pc_dev (res6pc_term "D" "S") (nw "G") physical f...

Executing: res6pc_dev_pwell = extractDevice("opppcres" res6pc_dev (res6pc_term "D" "S") ...
           res6pc_dev_subs = extractDevice("opppcres" res6pc_dev (res6pc_term "D" "S") (...

Executing: extractDevice("oprrpres" rnw6rr_dev (res6pc_term "D" "S") (nw "G") physical f...

Executing: res6rr_dev_pwell = extractDevice("oprrpres" res6rr_dev (res6pc_term "D" "S") ...
           res6rr_dev_subs = extractDevice("oprrpres" res6rr_dev (res6pc_term "D" "S") (...

Executing: extractDevice("oprppres" rnw6rp_dev (res6pc_term "D" "S") (nw "G") physical f...

Executing: res6rp_dev_pwell = extractDevice("oprppres" res6rp_dev (res6pc_term "D" "S") ...
           res6rp_dev_subs = extractDevice("oprppres" res6rp_dev (res6pc_term "D" "S") (...

Executing: saveProperty(rnw6pc_dev "m" 1)

Executing: saveProperty(rnw6pc_dev "par" 1)

Executing: saveProperty(rnw6pc_dev "s" 1)

Executing: saveProperty(rnw6pc_dev "pbar" 1)

Executing: saveProperty(rnw6pc_dev "bp" 1)

Executing: rnw6pc_width = measureParameter(length (rnw6pc_dev coincident op) 5e-07)

Executing: nameParameter(rnw6pc_width "w")

Executing: rnw6pc_bb = calculateParameter((rnw6pc_width - rnw6pc_width))

Executing: nameParameter(rnw6pc_bb "bb")

Executing: rnw6pc_length = measureParameter(length (rnw6pc_dev coincident res6pc_bar) 5e...

Executing: nameParameter(rnw6pc_length "l")

Executing: rnw6pc_res = calculateParameter((((2.0 * rend) + (rs * ((rnw6pc_length * 1000...

Executing: nameParameter(rnw6pc_res "r")

Executing: nameParameter(rnw6pc_res "reff")

Executing: res_M = measureParameter(figCount (rnw6pc_dev enclosing resistor_m))

Executing: res_mSwitch = calculateParameter((res_M + (rnw6pc_length - rnw6pc_length)))

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: saveProperty(rnw6pc_dev "blockParasiticsBetween" "M1 sub")

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_FE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_FE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: nameParameter(rsx_value "rsx")

Executing: res6pc_bb1 = measureParameter(figCount (res6pc_dev enclosing resistor_bb))

Executing: res6pc_bb2 = measureParameter(figCount (res6pc_dev enclosing resistor_op))

Executing: res6pc_bb = calculateParameter(((res6pc_bb2 * 3.0) - res6pc_bb1))

Executing: nameParameter(res6pc_bb "bp")

Executing: saveProperty(res6pc_dev "m" 1)

Executing: saveProperty(res6pc_dev "par" 1)

Executing: saveProperty(res6pc_dev "s" 1)

Executing: saveProperty(res6pc_dev "pbar" 1)

Executing: res6pc_width = measureParameter(length (res6pc_dev coincident op) 5e-07)

Executing: nameParameter(res6pc_width "w")

Executing: res6pc_length = measureParameter(length (res6pc_dev coincident res6pc_bar) 5e...

Executing: nameParameter(res6pc_length "l")

Executing: res6pc_res = calculateParameter((((2.0 * rend) + (rs * ((res6pc_length * 1000...

Executing: nameParameter(res6pc_res "r")

Executing: nameParameter(res6pc_res "reff")

Executing: res_M = measureParameter(figCount (res6pc_dev enclosing resistor_m))

Executing: res_mSwitch = calculateParameter((res_M + (res6pc_length - res6pc_length)))

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: saveProperty(res6pc_dev "blockParasiticsBetween" "M1 sub")

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_FE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_FE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: nameParameter(rsx_value "rsx")

Executing: saveProperty(rnw6rr_dev "m" 1)

Executing: saveProperty(rnw6rr_dev "par" 1)

Executing: saveProperty(rnw6rr_dev "s" 1)

Executing: saveProperty(rnw6rr_dev "pbar" 1)

Executing: saveProperty(rnw6rr_dev "bp" 1)

Executing: rnw6rr_width = measureParameter(length (rnw6rr_dev coincident op) 5e-07)

Executing: nameParameter(rnw6rr_width "w")

Executing: rnw6rr_bb = calculateParameter((rnw6rr_width - rnw6rr_width))

Executing: nameParameter(rnw6rr_bb "bb")

Executing: rnw6rr_length = measureParameter(length (rnw6rr_dev coincident res6pc_bar) 5e...

Executing: nameParameter(rnw6rr_length "l")

Executing: rnw6rr_res = calculateParameter((((2.0 * rend) + (2.0 * rbn * lbn) + (rs * ((...

Executing: nameParameter(rnw6rr_res "r")

Executing: nameParameter(rnw6rr_res "reff")

Executing: res_M = measureParameter(figCount (rnw6rr_dev enclosing resistor_m))

Executing: res_mSwitch = calculateParameter((res_M + (rnw6rr_length - rnw6rr_length)))

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: saveProperty(rnw6rr_dev "blockParasiticsBetween" "M1 sub")

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_FE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_FE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: nameParameter(rsx_value "rsx")

Executing: saveProperty(res6rr_dev "m" 1)

Executing: saveProperty(res6rr_dev "par" 1)

Executing: saveProperty(res6rr_dev "s" 1)

Executing: saveProperty(res6rr_dev "pbar" 1)

Executing: res6rr_width = measureParameter(length (res6rr_dev coincident op) 5e-07)

Executing: nameParameter(res6rr_width "w")

Executing: res6rr_length = measureParameter(length (res6rr_dev coincident res6pc_bar) 5e...

Executing: nameParameter(res6rr_length "l")

Executing: res6rr_res = calculateParameter((((2.0 * rend) + (2.0 * rbn * lbn) + (rs * ((...

Executing: nameParameter(res6rr_res "r")

Executing: nameParameter(res6rr_res "reff")

Executing: res_M = measureParameter(figCount (res6rr_dev enclosing resistor_m))

Executing: res_mSwitch = calculateParameter((res_M + (res6rr_length - res6rr_length)))

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: res6rr_bb1 = measureParameter(figCount (res6rr_dev enclosing resistor_bb))

Executing: res6rr_bb2 = measureParameter(figCount (res6rr_dev enclosing resistor_op))

Executing: res6rr_bb = calculateParameter(((res6rr_bb2 * 3.0) - res6rr_bb1))

Executing: nameParameter(res6rr_bb "bp")

Executing: saveProperty(res6rr_dev "blockParasiticsBetween" "M1 sub")

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_FE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_FE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: nameParameter(rsx_value "rsx")

Executing: saveProperty(rnw6rp_dev "m" 1)

Executing: saveProperty(rnw6rp_dev "par" 1)

Executing: saveProperty(rnw6rp_dev "s" 1)

Executing: saveProperty(rnw6rp_dev "pbar" 1)

Executing: saveProperty(rnw6rp_dev "bp" 1)

Executing: rnw6rp_width = measureParameter(length (rnw6rp_dev coincident op) 5e-07)

Executing: nameParameter(rnw6rp_width "w")

Executing: rnw6rp_bb = calculateParameter((rnw6rp_width - rnw6rp_width))

Executing: nameParameter(rnw6rp_bb "bb")

Executing: rnw6rp_length = measureParameter(length (rnw6rp_dev coincident res6pc_bar) 5e...

Executing: nameParameter(rnw6rp_length "l")

Executing: rnw6rp_res = calculateParameter((((2.0 * rend) + (rs * ((rnw6rp_length * 1000...

Executing: nameParameter(rnw6rp_res "r")

Executing: nameParameter(rnw6rp_res "reff")

Executing: res_M = measureParameter(figCount (rnw6rp_dev enclosing resistor_m))

Executing: res_mSwitch = calculateParameter((res_M + (rnw6rp_length - rnw6rp_length)))

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: saveProperty(rnw6rp_dev "blockParasiticsBetween" "M1 sub")

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_FE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_FE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: nameParameter(rsx_value "rsx")

Executing: saveProperty(res6rp_dev "m" 1)

Executing: saveProperty(res6rp_dev "par" 1)

Executing: saveProperty(res6rp_dev "s" 1)

Executing: saveProperty(res6rp_dev "pbar" 1)

Executing: res6rp_width = measureParameter(length (res6rp_dev coincident op) 5e-07)

Executing: nameParameter(res6rp_width "w")

Executing: res6rp_length = measureParameter(length (res6rp_dev coincident res6pc_bar) 5e...

Executing: nameParameter(res6rp_length "l")

Executing: res6rp_res = calculateParameter((((2.0 * rend) + (rs * ((res6rp_length * 1000...

Executing: nameParameter(res6rp_res "r")

Executing: nameParameter(res6rp_res "reff")

Executing: res_M = measureParameter(figCount (res6rp_dev enclosing resistor_m))

Executing: res_mSwitch = calculateParameter((res_M + (res6rp_length - res6rp_length)))

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: res6rp_bb1 = measureParameter(figCount (res6rp_dev enclosing resistor_bb))

Executing: res6rp_bb2 = measureParameter(figCount (res6rp_dev enclosing resistor_op))

Executing: res6rp_bb = calculateParameter(((res6rp_bb2 * 3.0) - res6rp_bb1))

Executing: nameParameter(res6rp_bb "bp")

Executing: saveProperty(res6rp_dev "blockParasiticsBetween" "M1 sub")

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_FE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_FE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: nameParameter(rsx_value "rsx")

Executing: res6n_dev_pwell = extractDevice("opndres" res6n_dev (res6n_term "D" "S") (pwe...
           res6n_dev_subs = extractDevice("opndres" res6n_dev (res6n_term "D" "S") (subs...

Executing: extractDevice("oppdres" res6p_dev (res6p_term "D" "S") (nw "G") physical flag...

Executing: res6n_sblk_pwell = extractDevice("sblkndres" res6n_sblk (nfet_sd "S" "D") (pw...
           res6n_sblk_subs = extractDevice("sblkndres" res6n_sblk (nfet_sd "S" "D") (sub...

Executing: extractDevice("sblkpdres" res6p_sblk (pfet_sd "S" "D") (nw "G") physical flag...

Executing: saveProperty(res6p_dev "m" 1)

Executing: saveProperty(res6p_dev "par" 1)

Executing: saveProperty(res6p_dev "s" 1)

Executing: saveProperty(res6p_dev "pbar" 1)

Executing: res6p_width = measureParameter(length (res6p_dev coincident op) 5e-07)

Executing: nameParameter(res6p_width "w")

Executing: res6p_length = measureParameter(length (res6p_dev coincident res6p_bar) 5e-07)

Executing: nameParameter(res6p_length "l")

Executing: res6p_res = calculateParameter((((2.0 * rend) + (rs * ((res6p_length * 100000...

Executing: nameParameter(res6p_res "r")

Executing: nameParameter(res6p_res "reff")

Executing: res_M = measureParameter(figCount (res6p_dev enclosing resistor_m))

Executing: res_mSwitch = calculateParameter((res_M + (res6p_length - res6p_length)))

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: saveProperty(res6p_dev "blockParasiticsBetween" "M1 sub")

Executing: saveProperty(res6p_sblk "m" 1)

Executing: saveProperty(res6p_sblk "s" 1)

Executing: saveProperty(res6p_sblk "pbar" 1)

Executing: sblk_M = geomOverlap(res6p_sblk multi)

Executing: res6p_width = measureParameter(length (res6p_sblk coincident sblk) 5e-07)

Executing: nameParameter(res6p_width "w")

Executing: res6p_length = measureParameter(length (res6p_sblk coincident res6p_bar) 5e-07)

Executing: nameParameter(res6p_length "l")

Executing: res6p_res = calculateParameter((((1.0 * rend) + (rs * ((res6p_length * 100000...

Executing: nameParameter(res6p_res "r")

Executing: nameParameter(res6p_res "reff")

Executing: res_M = measureParameter(figCount (res6p_sblk enclosing sblk_M))

Executing: res_mSwitch = calculateParameter((res_M + (res6p_length - res6p_length)))

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: saveProperty(res6p_sblk "blockParasiticsBetween" "M1 sub")

Executing: saveProperty(res6n_dev "m" 1)

Executing: saveProperty(res6n_dev "par" 1)

Executing: saveProperty(res6n_dev "s" 1)

Executing: saveProperty(res6n_dev "pbar" 1)

Executing: res6n_width = measureParameter(length (res6n_dev coincident op) 5e-07)

Executing: nameParameter(res6n_width "w")

Executing: res6n_length = measureParameter(length (res6n_dev coincident res6n_bar) 5e-07)

Executing: nameParameter(res6n_length "l")

Executing: res6n_res = calculateParameter((((2.0 * rend) + (rs * ((res6n_length * 100000...

Executing: nameParameter(res6n_res "r")

Executing: nameParameter(res6n_res "reff")

Executing: res_M = measureParameter(figCount (res6n_dev enclosing resistor_m))

Executing: res_mSwitch = calculateParameter((res_M + (res6n_length - res6n_length)))

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: saveProperty(res6n_dev "blockParasiticsBetween" "M1 sub")

Executing: sblk_plus = geomAnd(res6n_sblk sblk_over_pc)

Executing: saveProperty(res6n_sblk "m" 1)

Executing: saveProperty(res6n_sblk "s" 1)

Executing: saveProperty(res6n_sblk "pbar" 1)

Executing: sblk_M = geomOverlap(res6n_sblk multi)

Executing: res6n_width = measureParameter(length (res6n_sblk coincident sblk) 5e-07)

Executing: nameParameter(res6n_width "w")

Executing: length_plus = measureParameter(figCount (res6n_sblk enclosing sblk_plus) 1e-08)

Executing: res6n_length = measureParameter(length (res6n_sblk coincident res6n_bar) 5e-07)

Executing: length_sblk = calculateParameter((res6n_length + length_plus))

Executing: nameParameter(length_sblk "l")

Executing: res6n_res = calculateParameter((((1.0 * rend) + (rs * ((res6n_length * 100000...

Executing: nameParameter(res6n_res "r")

Executing: nameParameter(res6n_res "reff")

Executing: res_M = measureParameter(figCount (res6n_sblk enclosing sblk_M))

Executing: res_mSwitch = calculateParameter((res_M + (res6n_length - res6n_length)))

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: saveProperty(res6n_sblk "blockParasiticsBetween" "M1 sub")

Executing: extractDevice("k1res" k1_dev_bb (k1_term "D" "S") (substrate "G") physical fl...

Executing: k1_dev_sx_pwell = extractDevice("k1res" k1_dev_sx (k1_term "D" "S") (pwell "G...
           k1_dev_sx_subs = extractDevice("k1res" k1_dev_sx (k1_term "D" "S") (substrate...

Executing: saveProperty(k1_dev_bb "pbar" 1)

Executing: saveProperty(k1_dev_bb "s" 1)

Executing: saveProperty(k1_dev_bb "m" 1)

Executing: saveProperty(k1_dev_bb "par" 1)

Executing: k1_multi = geomOverlap(k1_dev_bb multi)

Executing: resk1_width = measureParameter(length (k1_dev_bb butting k1_term) 5e-07)

Executing: nameParameter(resk1_width "w")

Executing: resk1_length = measureParameter(length (k1_dev_bb coincident k1) 5e-07)

Executing: nameParameter(resk1_length "l")

Executing: resk1_R = calculateParameter((((rho * ((resk1_length * 1000000.0) + dl)) + (r...

Executing: nameParameter(resk1_R "r")

Executing: nameParameter(resk1_R "reff")

Executing: res_M = measureParameter(figCount (k1_dev_bb enclosing k1_multi))

Executing: res_mSwitch = calculateParameter((res_M + (resk1_length - resk1_length)))

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: saveProperty(k1_dev_sx "pbar" 1)

Executing: saveProperty(k1_dev_sx "s" 1)

Executing: saveProperty(k1_dev_sx "m" 1)

Executing: saveProperty(k1_dev_sx "par" 1)

Executing: k1_multi = geomOverlap(k1_dev_sx multi)

Executing: resk1_width = measureParameter(length (k1_dev_sx butting k1_term) 5e-07)

Executing: nameParameter(resk1_width "w")

Executing: resk1_length = measureParameter(length (k1_dev_sx coincident k1) 5e-07)

Executing: nameParameter(resk1_length "l")

Executing: resk1_R = calculateParameter((((rho * ((resk1_length * 1000000.0) + dl)) + (r...

Executing: nameParameter(resk1_R "r")

Executing: nameParameter(resk1_R "reff")

Executing: res_M = measureParameter(figCount (k1_dev_sx enclosing k1_multi))

Executing: res_mSwitch = calculateParameter((res_M + (resk1_length - resk1_length)))

Executing: nameParameter(res_mSwitch "mSwitch")

Executing: extractDevice("esdnsh_base" esdnsh_dev (esdnsh_drain "de") (pc_model "ge") (e...
           extractDevice("esdnsh_base" esdnsh_dev (esdnsh_drain "de") (pc_model "ge") (e...

Executing: extractDevice("esdpsh_base" esdpsh_dev (esdpsh_drain "de") (pc_model "ge") (e...

Executing: sblk_plus = geomAnd(dev_ID sblk_over_pc)

Executing: op_drain = geomAnd(geomButtOnly(sblk esdnpsh_drain) dev_ID)

Executing: op_source = geomAnd(geomButtOnly(sblk esdnpsh_source) dev_ID)

Executing: esdnsh_gate_area = measureParameter(area (dev_ID over esdnpsh_gate) 1e-12)

Executing: pc_length_size = measureParameter(length (dev_ID coincident esdnpsh_gate) 5e-07)

Executing: pc_length = calculateParameter((pc_length_size * 1.0))

Executing: pc_width = calculateParameter((esdnsh_gate_area / pc_length))

Executing: nf = measureParameter(figCount (dev_ID enclosing esdnpsh_gate))

Executing: length_plus = measureParameter(figCount (dev_ID enclosing sblk_plus) 1e-08)

Executing: op_drain_measure = measureParameter(length (dev_ID coincident op_drain) 1e-06)

Executing: op_drain_length = calculateParameter((((op_drain_measure - pc_width) / 2) + l...

Executing: op_source_measure = measureParameter(length (dev_ID coincident op_source) 1e-06)

Executing: op_source_length = calculateParameter((((op_source_measure - pc_width) / 2) +...

Executing: esdnpsh_50 = measureParameter(figCount (dev_ID enclosing esdnpsh_base50) 4.0)

Executing: esdnpsh_33 = measureParameter(figCount (dev_ID enclosing esdnpsh_base33) 3.0)

Executing: esdnpsh_25 = measureParameter(figCount (dev_ID enclosing esdnpsh_base25) 2.0)

Executing: esdnpsh_18 = measureParameter(figCount (dev_ID enclosing esdnpsh_base) 1.0)

Executing: esdnpsh_oxide = calculateParameter((esdnpsh_18 + esdnpsh_25 + esdnpsh_33 + es...

Executing: esdnpsh_gns = measureParameter(figCount (dev_ID enclosing sblk_plus))

Executing: gns_parm = calculateParameter((esdnpsh_gns + (nf - nf)))

Executing: rect_area = measureParameter(area (dev_ID over ESDNSH_wtesd) 1e-12)

Executing: number_of_devs = calculateParameter((rect_area / (1e-08 * 1e-08)))

Executing: total_w = calculateParameter((number_of_devs * pc_width))

Executing: nameParameter(pc_length "lesd")

Executing: nameParameter(pc_width "wesd")

Executing: nameParameter(total_w "wtesd")

Executing: nameParameter(nf "nf")

Executing: nameParameter(op_drain_length "ldop")

Executing: nameParameter(op_source_length "lsop")

Executing: nameParameter(esdnpsh_oxide "esdoxide")

Executing: nameParameter(gns_parm "gns")

Executing: sblk_plus = geomAnd(dev_ID sblk_over_pc)

Executing: op_drain = geomAnd(geomButtOnly(sblk esdnpsh_drain) dev_ID)

Executing: op_source = geomAnd(geomButtOnly(sblk esdnpsh_source) dev_ID)

Executing: esdnsh_gate_area = measureParameter(area (dev_ID over esdnpsh_gate) 1e-12)

Executing: pc_length_size = measureParameter(length (dev_ID coincident esdnpsh_gate) 5e-07)

Executing: pc_length = calculateParameter((pc_length_size * 1.0))

Executing: pc_width = calculateParameter((esdnsh_gate_area / pc_length))

Executing: nf = measureParameter(figCount (dev_ID enclosing esdnpsh_gate))

Executing: length_plus = measureParameter(figCount (dev_ID enclosing sblk_plus) 1e-08)

Executing: op_drain_measure = measureParameter(length (dev_ID coincident op_drain) 1e-06)

Executing: op_drain_length = calculateParameter((((op_drain_measure - pc_width) / 2) + l...

Executing: op_source_measure = measureParameter(length (dev_ID coincident op_source) 1e-06)

Executing: op_source_length = calculateParameter((((op_source_measure - pc_width) / 2) +...

Executing: esdnpsh_50 = measureParameter(figCount (dev_ID enclosing esdnpsh_base50) 4.0)

Executing: esdnpsh_33 = measureParameter(figCount (dev_ID enclosing esdnpsh_base33) 3.0)

Executing: esdnpsh_25 = measureParameter(figCount (dev_ID enclosing esdnpsh_base25) 2.0)

Executing: esdnpsh_18 = measureParameter(figCount (dev_ID enclosing esdnpsh_base) 1.0)

Executing: esdnpsh_oxide = calculateParameter((esdnpsh_18 + esdnpsh_25 + esdnpsh_33 + es...

Executing: esdnpsh_gns = measureParameter(figCount (dev_ID enclosing sblk_plus))

Executing: gns_parm = calculateParameter((esdnpsh_gns + (nf - nf)))

Executing: rect_area = measureParameter(area (dev_ID over ESDNSH_wtesd) 1e-12)

Executing: number_of_devs = calculateParameter((rect_area / (1e-08 * 1e-08)))

Executing: total_w = calculateParameter((number_of_devs * pc_width))

Executing: nameParameter(pc_length "lesd")

Executing: nameParameter(pc_width "wesd")

Executing: nameParameter(total_w "wtesd")

Executing: nameParameter(nf "nf")

Executing: nameParameter(op_drain_length "ldop")

Executing: nameParameter(op_source_length "lsop")

Executing: nameParameter(esdnpsh_oxide "esdoxide")

Executing: nameParameter(gns_parm "gns")

Executing: extractDevice("subc" sub_dev (sub_diff_top "SUBCON") (substrate "sub") flagMa...

Executing: extractDevice("tdndsx" ntie_device (ntie_top "MINUS") (pwell "PLUS") flagMalf...
           extractDevice("tdndsx" ntie_device (ntie_top "MINUS") (substrate "PLUS") flag...

Executing: extractDevice("tdpdnw" ptie_device (ptie_top "PLUS") (nw "MINUS") flagMalform...

Executing: subc_area = measureParameter(area (sub_dev) 1e-12)

Executing: nameParameter(subc_area "a")

Executing: subc_perimeter = measureParameter(perimeter (sub_dev) 1e-06)

Executing: nameParameter(subc_perimeter "p")

Executing: subc_area_4 = calculateParameter((subc_area * 4.0))

Executing: subc_perim_2 = calculateParameter((subc_perimeter / 2.0))

Executing: subc_length = calculateParameter(((subc_perim_2 + sqrt(abs(((subc_perim_2 * s...

Executing: nameParameter(subc_length "l")

Executing: subc_width = calculateParameter(((subc_perim_2 - sqrt(abs(((subc_perim_2 * su...

Executing: nameParameter(subc_width "w")

Executing: area = measureParameter(area (ntie_device) 1e-12)

Executing: nameParameter(area "area")

Executing: perimeter = measureParameter(perimeter (ntie_device) 1e-06)

Executing: nameParameter(perimeter "perim")

Executing: area = measureParameter(area (ptie_device) 1e-12)

Executing: nameParameter(area "area")

Executing: perimeter = measureParameter(perimeter (ptie_device) 1e-06)

Executing: nameParameter(perimeter "perim")

Executing: extractDevice("corrPoint" corrPoint_dev_M2 (corrPoint_term_M2 "cp") flagMalfo...

Executing: extractDevice("corrPoint" corrPoint_dev_PD (corrPoint_term_PD "cp") flagMalfo...

Executing: extractDevice("corrPoint" corrPoint_dev_ND (corrPoint_term_ND "cp") flagMalfo...

Executing: extractDevice("corrPoint" corrPoint_dev_PC (corrPoint_term_PC "cp") flagMalfo...

Executing: extractDevice("corrPoint" corrPoint_dev_M1 (corrPoint_term_M1 "cp") flagMalfo...

Executing: extractDevice("esdvpnpnw" ESD_pdnw_diode (ESD_pdnw_plus "pd") (ESD_pdnw_minus...

Executing: extractDevice("esdvpnpnw" ESD_pdnw_diode_GR_sized (ESD_pdnw_plus "pd") (ESD_p...

Executing: extractDevice("esdvpnpnw" ESD_pdnw_diode_GR (ESD_pdnw_plus "pd") (ESD_pdnw_mi...

Executing: extractDevice("esdndsx" ESD_ndsx (ESD_ndsx_plus_term "sx") (ESD_ndsx_minus "n...

Executing: extractDevice("esdndsx" ESD_ndsx_GR_sized (ESD_ndsx_plus_term "sx") (ESD_ndsx...

Executing: extractDevice("esdndsx" ESD_ndsx_GR (ESD_ndsx_plus_term "sx") (ESD_ndsx_minus...

Executing: extractDevice("esdpnpi" ESD_pdnw_pi (ESD_pdnw_plus "pd") (ESD_pdnw_minus_term...

Executing: extractDevice("esdndpi" ESD_ndsx_pi (ESD_ndsx_plus_term "pw") (ESD_ndsx_minus...

Executing: pdnw_NS = geomOverlap(ESD_pdnw_diode ESD_ns)

Executing: pdnw_fingers = measureParameter(figCount (ESD_pdnw_diode enclosing ESD_pdnw_p...

Executing: nameParameter(pdnw_fingers "nanod")

Executing: pdnw_perim = measureParameter(perimeter (ESD_pdnw_diode over ESD_pdnw_plus) 1...

Executing: nameParameter(pdnw_perim "perim")

Executing: pdnw_area = measureParameter(area (ESD_pdnw_diode over ESD_pdnw_plus) 1e-12)

Executing: nameParameter(pdnw_area "area")

Executing: pdnw_ns = measureParameter(figCount (ESD_pdnw_diode enclosing pdnw_NS))

Executing: pdnw_NS = calculateParameter(((pdnw_fingers - pdnw_fingers) + pdnw_ns))

Executing: nameParameter(pdnw_NS "ns")

Executing: saveProperty(ESD_pdnw_diode "blockParasiticsBetween" "M1 sub")

Executing: pdnw_NS = geomOverlap(ESD_pdnw_diode_GR_sized ESD_ns)

Executing: pdnw_fingers = measureParameter(figCount (ESD_pdnw_diode_GR_sized enclosing E...

Executing: nameParameter(pdnw_fingers "nanod")

Executing: pdnw_perim = measureParameter(perimeter (ESD_pdnw_diode_GR_sized over ESD_pdn...

Executing: nameParameter(pdnw_perim "perim")

Executing: pdnw_area = measureParameter(area (ESD_pdnw_diode_GR_sized over ESD_pdnw_plus...

Executing: nameParameter(pdnw_area "area")

Executing: pdnw_ns = measureParameter(figCount (ESD_pdnw_diode_GR_sized enclosing pdnw_NS))

Executing: pdnw_NS = calculateParameter(((pdnw_fingers - pdnw_fingers) + pdnw_ns))

Executing: nameParameter(pdnw_NS "ns")

Executing: saveProperty(ESD_pdnw_diode_GR_sized "blockParasiticsBetween" "M1 sub")

Executing: pdnw_NS = geomOverlap(ESD_pdnw_diode_GR ESD_ns)

Executing: pdnw_fingers = measureParameter(figCount (ESD_pdnw_diode_GR enclosing ESD_pdn...

Executing: nameParameter(pdnw_fingers "nanod")

Executing: pdnw_perim = measureParameter(perimeter (ESD_pdnw_diode_GR over ESD_pdnw_plus...

Executing: nameParameter(pdnw_perim "perim")

Executing: pdnw_area = measureParameter(area (ESD_pdnw_diode_GR over ESD_pdnw_plus) 1e-12)

Executing: nameParameter(pdnw_area "area")

Executing: pdnw_ns = measureParameter(figCount (ESD_pdnw_diode_GR enclosing pdnw_NS))

Executing: pdnw_NS = calculateParameter(((pdnw_fingers - pdnw_fingers) + pdnw_ns))

Executing: nameParameter(pdnw_NS "ns")

Executing: saveProperty(ESD_pdnw_diode_GR "blockParasiticsBetween" "M1 sub")

Executing: ndsx_NW = geomOverlap(ESD_ndsx ESD_nw)

Executing: ndsx_fingers = measureParameter(figCount (ESD_ndsx enclosing ESD_ndsx_minus))

Executing: nameParameter(ndsx_fingers "ncath")

Executing: ndsx_perim = measureParameter(perimeter (ESD_ndsx over ESD_ndsx_minus) 1e-06)

Executing: nameParameter(ndsx_perim "perim")

Executing: ndsx_area = measureParameter(area (ESD_ndsx over ESD_ndsx_minus) 1e-12)

Executing: nameParameter(ndsx_area "area")

Executing: ndsx_nw = measureParameter(figCount (ESD_ndsx enclosing ndsx_NW))

Executing: ndsx_NW = calculateParameter(((ndsx_fingers - ndsx_fingers) + ndsx_nw))

Executing: nameParameter(ndsx_NW "nw")

Executing: saveProperty(ESD_ndsx "blockParasiticsBetween" "M1 sub")

Executing: ndsx_NW = geomOverlap(ESD_ndsx_GR_sized ESD_nw)

Executing: ndsx_fingers = measureParameter(figCount (ESD_ndsx_GR_sized enclosing ESD_nds...

Executing: nameParameter(ndsx_fingers "ncath")

Executing: ndsx_perim = measureParameter(perimeter (ESD_ndsx_GR_sized over ESD_ndsx_minu...

Executing: nameParameter(ndsx_perim "perim")

Executing: ndsx_area = measureParameter(area (ESD_ndsx_GR_sized over ESD_ndsx_minus) 1e-12)

Executing: nameParameter(ndsx_area "area")

Executing: ndsx_nw = measureParameter(figCount (ESD_ndsx_GR_sized enclosing ndsx_NW))

Executing: ndsx_NW = calculateParameter(((ndsx_fingers - ndsx_fingers) + ndsx_nw))

Executing: nameParameter(ndsx_NW "nw")

Executing: saveProperty(ESD_ndsx_GR_sized "blockParasiticsBetween" "M1 sub")

Executing: ndsx_NW = geomOverlap(ESD_ndsx_GR ESD_nw)

Executing: ndsx_fingers = measureParameter(figCount (ESD_ndsx_GR enclosing ESD_ndsx_minus))

Executing: nameParameter(ndsx_fingers "ncath")

Executing: ndsx_perim = measureParameter(perimeter (ESD_ndsx_GR over ESD_ndsx_minus) 1e-06)

Executing: nameParameter(ndsx_perim "perim")

Executing: ndsx_area = measureParameter(area (ESD_ndsx_GR over ESD_ndsx_minus) 1e-12)

Executing: nameParameter(ndsx_area "area")

Executing: ndsx_nw = measureParameter(figCount (ESD_ndsx_GR enclosing ndsx_NW))

Executing: ndsx_NW = calculateParameter(((ndsx_fingers - ndsx_fingers) + ndsx_nw))

Executing: nameParameter(ndsx_NW "nw")

Executing: saveProperty(ESD_ndsx_GR "blockParasiticsBetween" "M1 sub")

Executing: pdnw_fingers = measureParameter(figCount (ESD_pdnw_pi enclosing ESD_pdnw_plus))

Executing: nameParameter(pdnw_fingers "nanod")

Executing: pdnw_perim = measureParameter(perimeter (ESD_pdnw_pi over ESD_pdnw_plus) 1e-06)

Executing: nameParameter(pdnw_perim "perim")

Executing: pdnw_area = measureParameter(area (ESD_pdnw_pi over ESD_pdnw_plus) 1e-12)

Executing: nameParameter(pdnw_area "area")

Executing: saveProperty(ESD_pdnw_pi "blockParasiticsBetween" "M1 sub")

Executing: ndsx_fingers = measureParameter(figCount (ESD_ndsx_pi enclosing ESD_ndsx_minus))

Executing: nameParameter(ndsx_fingers "ncath")

Executing: ndsx_perim = measureParameter(perimeter (ESD_ndsx_pi over ESD_ndsx_minus) 1e-06)

Executing: nameParameter(ndsx_perim "perim")

Executing: ndsx_area = measureParameter(area (ESD_ndsx_pi over ESD_ndsx_minus) 1e-12)

Executing: nameParameter(ndsx_area "area")

Executing: saveProperty(ESD_ndsx_pi "blockParasiticsBetween" "M1 sub")

Executing: extractDevice("mim" MIMpi (mim_top "D") (mim_bot "S") (pwell "G") flagMalform...

Executing: extractDevice("mim" MIMnw (mim_top "D") (mim_bot "S") (nw "G") flagMalformed ...

Executing: extractDevice("mim" MIMsx (mim_top "D") (mim_bot "S") (substrate "G") flagMal...

Executing: extractDevice("mimhd" MIMhdpi (mim_top "D") (mim_bot "S") (pwell "G") flagMal...

Executing: extractDevice("mimhd" MIMhdnw (mim_top "D") (mim_bot "S") (nw "G") flagMalfor...

Executing: extractDevice("mimhd" MIMhdsx (mim_top "D") (mim_bot "S") (substrate "G") fla...

Executing: mim_hds = geomAnd(dev_ID mimhd)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: mim_area = measureParameter(area (dev_ID) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_mim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_dw = calculateParameter((mim_w + mimDW))

Executing: mim_dl = calculateParameter((mim_l + mimDL))

Executing: mim_hdm = measureParameter(figCount (dev_ID enclosing mim_hds))

Executing: mim_hd = calculateParameter((mim_hdm + (mim_l - mim_l)))

Executing: mimCArea = calculateParameter(((mimCA * (1 - mim_hd)) + (mimCA_hd * mim_hd)))

Executing: mimCperim = calculateParameter(((mimCP * (1 - mim_hd)) + (mimCP_hd * mim_hd)))

Executing: mim_wl_inf_8 = calculateParameter(((minusp((min(mim_w mim_l) - 8e-06))) * mim...

Executing: mim_c_coeff = calculateParameter(((zerop(mim_wl_inf_8)) + mim_wl_inf_8))

Executing: mim_C_COEFF = calculateParameter(((mim_c_coeff * (1 - mim_hd)) + (mim_p_corre...

Executing: mim_c = calculateParameter(((mim_dw * mim_dl * mimCArea) + (2 * mim_C_COEFF *...

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_BE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_BE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_hd "hd")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(mim_bp "bp")

Executing: nameParameter(rsx_value "rsx")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: mim_hds = geomAnd(dev_ID mimhd)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: mim_area = measureParameter(area (dev_ID) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_mim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_dw = calculateParameter((mim_w + mimDW))

Executing: mim_dl = calculateParameter((mim_l + mimDL))

Executing: mim_hdm = measureParameter(figCount (dev_ID enclosing mim_hds))

Executing: mim_hd = calculateParameter((mim_hdm + (mim_l - mim_l)))

Executing: mimCArea = calculateParameter(((mimCA * (1 - mim_hd)) + (mimCA_hd * mim_hd)))

Executing: mimCperim = calculateParameter(((mimCP * (1 - mim_hd)) + (mimCP_hd * mim_hd)))

Executing: mim_wl_inf_8 = calculateParameter(((minusp((min(mim_w mim_l) - 8e-06))) * mim...

Executing: mim_c_coeff = calculateParameter(((zerop(mim_wl_inf_8)) + mim_wl_inf_8))

Executing: mim_C_COEFF = calculateParameter(((mim_c_coeff * (1 - mim_hd)) + (mim_p_corre...

Executing: mim_c = calculateParameter(((mim_dw * mim_dl * mimCArea) + (2 * mim_C_COEFF *...

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_BE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_BE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_hd "hd")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(mim_bp "bp")

Executing: nameParameter(rsx_value "rsx")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: mim_hds = geomAnd(dev_ID mimhd)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: mim_area = measureParameter(area (dev_ID) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_mim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_dw = calculateParameter((mim_w + mimDW))

Executing: mim_dl = calculateParameter((mim_l + mimDL))

Executing: mim_hdm = measureParameter(figCount (dev_ID enclosing mim_hds))

Executing: mim_hd = calculateParameter((mim_hdm + (mim_l - mim_l)))

Executing: mimCArea = calculateParameter(((mimCA * (1 - mim_hd)) + (mimCA_hd * mim_hd)))

Executing: mimCperim = calculateParameter(((mimCP * (1 - mim_hd)) + (mimCP_hd * mim_hd)))

Executing: mim_wl_inf_8 = calculateParameter(((minusp((min(mim_w mim_l) - 8e-06))) * mim...

Executing: mim_c_coeff = calculateParameter(((zerop(mim_wl_inf_8)) + mim_wl_inf_8))

Executing: mim_C_COEFF = calculateParameter(((mim_c_coeff * (1 - mim_hd)) + (mim_p_corre...

Executing: mim_c = calculateParameter(((mim_dw * mim_dl * mimCArea) + (2 * mim_C_COEFF *...

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_BE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_BE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_hd "hd")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(mim_bp "bp")

Executing: nameParameter(rsx_value "rsx")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: mim_hds = geomAnd(dev_ID mimhd)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: mim_area = measureParameter(area (dev_ID) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_mim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_dw = calculateParameter((mim_w + mimDW))

Executing: mim_dl = calculateParameter((mim_l + mimDL))

Executing: mim_hdm = measureParameter(figCount (dev_ID enclosing mim_hds))

Executing: mim_hd = calculateParameter((mim_hdm + (mim_l - mim_l)))

Executing: mimCArea = calculateParameter(((mimCA * (1 - mim_hd)) + (mimCA_hd * mim_hd)))

Executing: mimCperim = calculateParameter(((mimCP * (1 - mim_hd)) + (mimCP_hd * mim_hd)))

Executing: mim_wl_inf_8 = calculateParameter(((minusp((min(mim_w mim_l) - 8e-06))) * mim...

Executing: mim_c_coeff = calculateParameter(((zerop(mim_wl_inf_8)) + mim_wl_inf_8))

Executing: mim_C_COEFF = calculateParameter(((mim_c_coeff * (1 - mim_hd)) + (mim_p_corre...

Executing: mim_c = calculateParameter(((mim_dw * mim_dl * mimCArea) + (2 * mim_C_COEFF *...

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_BE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_BE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_hd "hd")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(mim_bp "bp")

Executing: nameParameter(rsx_value "rsx")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: mim_hds = geomAnd(dev_ID mimhd)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: mim_area = measureParameter(area (dev_ID) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_mim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_dw = calculateParameter((mim_w + mimDW))

Executing: mim_dl = calculateParameter((mim_l + mimDL))

Executing: mim_hdm = measureParameter(figCount (dev_ID enclosing mim_hds))

Executing: mim_hd = calculateParameter((mim_hdm + (mim_l - mim_l)))

Executing: mimCArea = calculateParameter(((mimCA * (1 - mim_hd)) + (mimCA_hd * mim_hd)))

Executing: mimCperim = calculateParameter(((mimCP * (1 - mim_hd)) + (mimCP_hd * mim_hd)))

Executing: mim_wl_inf_8 = calculateParameter(((minusp((min(mim_w mim_l) - 8e-06))) * mim...

Executing: mim_c_coeff = calculateParameter(((zerop(mim_wl_inf_8)) + mim_wl_inf_8))

Executing: mim_C_COEFF = calculateParameter(((mim_c_coeff * (1 - mim_hd)) + (mim_p_corre...

Executing: mim_c = calculateParameter(((mim_dw * mim_dl * mimCArea) + (2 * mim_C_COEFF *...

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_BE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_BE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_hd "hd")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(mim_bp "bp")

Executing: nameParameter(rsx_value "rsx")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: mim_hds = geomAnd(dev_ID mimhd)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: mim_area = measureParameter(area (dev_ID) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_mim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_dw = calculateParameter((mim_w + mimDW))

Executing: mim_dl = calculateParameter((mim_l + mimDL))

Executing: mim_hdm = measureParameter(figCount (dev_ID enclosing mim_hds))

Executing: mim_hd = calculateParameter((mim_hdm + (mim_l - mim_l)))

Executing: mimCArea = calculateParameter(((mimCA * (1 - mim_hd)) + (mimCA_hd * mim_hd)))

Executing: mimCperim = calculateParameter(((mimCP * (1 - mim_hd)) + (mimCP_hd * mim_hd)))

Executing: mim_wl_inf_8 = calculateParameter(((minusp((min(mim_w mim_l) - 8e-06))) * mim...

Executing: mim_c_coeff = calculateParameter(((zerop(mim_wl_inf_8)) + mim_wl_inf_8))

Executing: mim_C_COEFF = calculateParameter(((mim_c_coeff * (1 - mim_hd)) + (mim_p_corre...

Executing: mim_c = calculateParameter(((mim_dw * mim_dl * mimCArea) + (2 * mim_C_COEFF *...

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_BE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_BE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_hd "hd")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(mim_bp "bp")

Executing: nameParameter(rsx_value "rsx")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: extractDevice("mimhk" MIMHKpi (mim_top "D") (mim_bot "S") (pwell "G") flagMal...

Executing: extractDevice("mimhk" MIMHKnw (mim_top "D") (mim_bot "S") (nw "G") flagMalfor...

Executing: extractDevice("mimhk" MIMHKpc (mim_top "D") (mim_bot "S") (pc_resistive "G") ...

Executing: extractDevice("mimhk" MIMHKsx (mim_top "D") (mim_bot "S") (substrate "G") fla...

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "hik" 1)

Executing: mim_area = measureParameter(area (dev_ID) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_mim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_dw = calculateParameter((mim_w + mimhDW))

Executing: mim_dl = calculateParameter((mim_l + mimhDL))

Executing: mim_wl_inf_8 = calculateParameter(((minusp((min(mim_w mim_l) - 8e-06))) * mim...

Executing: mim_c_coeff = calculateParameter(((zerop(mim_wl_inf_8)) + mim_wl_inf_8))

Executing: mim_c = calculateParameter(((mim_dw * mim_dl * mimhCA) + (2 * mim_c_coeff * (...

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: mim_pc = measureParameter(figCount (dev_ID enclosing pc_mim) 7.0)

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_pc + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(mim_bp "bp")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: saveProperty(MIMHKnw "nw" 1)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "hik" 1)

Executing: mim_area = measureParameter(area (dev_ID) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_mim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_dw = calculateParameter((mim_w + mimhDW))

Executing: mim_dl = calculateParameter((mim_l + mimhDL))

Executing: mim_wl_inf_8 = calculateParameter(((minusp((min(mim_w mim_l) - 8e-06))) * mim...

Executing: mim_c_coeff = calculateParameter(((zerop(mim_wl_inf_8)) + mim_wl_inf_8))

Executing: mim_c = calculateParameter(((mim_dw * mim_dl * mimhCA) + (2 * mim_c_coeff * (...

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: mim_pc = measureParameter(figCount (dev_ID enclosing pc_mim) 7.0)

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_pc + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(mim_bp "bp")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "hik" 1)

Executing: mim_area = measureParameter(area (dev_ID) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_mim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_dw = calculateParameter((mim_w + mimhDW))

Executing: mim_dl = calculateParameter((mim_l + mimhDL))

Executing: mim_wl_inf_8 = calculateParameter(((minusp((min(mim_w mim_l) - 8e-06))) * mim...

Executing: mim_c_coeff = calculateParameter(((zerop(mim_wl_inf_8)) + mim_wl_inf_8))

Executing: mim_c = calculateParameter(((mim_dw * mim_dl * mimhCA) + (2 * mim_c_coeff * (...

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: mim_pc = measureParameter(figCount (dev_ID enclosing pc_mim) 7.0)

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_pc + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(mim_bp "bp")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "hik" 1)

Executing: mim_area = measureParameter(area (dev_ID) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_mim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_dw = calculateParameter((mim_w + mimhDW))

Executing: mim_dl = calculateParameter((mim_l + mimhDL))

Executing: mim_wl_inf_8 = calculateParameter(((minusp((min(mim_w mim_l) - 8e-06))) * mim...

Executing: mim_c_coeff = calculateParameter(((zerop(mim_wl_inf_8)) + mim_wl_inf_8))

Executing: mim_c = calculateParameter(((mim_dw * mim_dl * mimhCA) + (2 * mim_c_coeff * (...

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: mim_pc = measureParameter(figCount (dev_ID enclosing pc_mim) 7.0)

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_pc + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(mim_bp "bp")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: saveProperty(MIMHKnw "lm" 1)

Executing: saveProperty(MIMHKpi "lm" 1)

Executing: saveProperty(MIMHKpc "lm" 1)

Executing: saveProperty(MIMHKsx "lm" 1)

Executing: extractDevice("dualmim" DUALMIMpi (dualmid "D") (dualbot "S") (pwell "G") fla...

Executing: extractDevice("dualmim" DUALMIMnw (dualmid "D") (dualbot "S") (nw "G") flagMa...

Executing: extractDevice("dualmim" DUALMIMsx (dualmid "D") (dualbot "S") (substrate "G")...

Executing: extractDevice("dualmimhd" DUALMIMhdpi (dualmid "D") (dualbot "S") (pwell "G")...

Executing: extractDevice("dualmimhd" DUALMIMhdnw (dualmid "D") (dualbot "S") (nw "G") fl...

Executing: extractDevice("dualmimhd" DUALMIMhdsx (dualmid "D") (dualbot "S") (substrate ...

Executing: mim_hds = geomAnd(dev_ID mimhd)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: mim_area = measureParameter(area (dev_ID over ht) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID over ht) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_dmim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_hdm = measureParameter(figCount (dev_ID enclosing mim_hds))

Executing: mim_hd = calculateParameter((mim_hdm + (mim_l - mim_l)))

Executing: mim_dw = calculateParameter((mim_w + mimDW))

Executing: mim_dl = calculateParameter((mim_l + mimDL))

Executing: mim_area_dwl = calculateParameter((mim_dw * mim_dl))

Executing: mim_perim_dw = calculateParameter((2 * (mim_dw + mim_dl)))

Executing: dmim_std_c = calculateParameter(((dmimCA * ((mim_area_dwl * 2.0) + (mim_dw * ...

Executing: dmim_hd_ca = calculateParameter((dmimCA_hd * ((mim_dw * mim_dl) + ((mim_dw + ...

Executing: dmim_hd_cp = calculateParameter((2 * dmimCP_hd * (mim_dw + mim_dl + dmim_HD_w...

Executing: dmim_hd_c = calculateParameter((dmim_hd_ca + dmim_hd_cp))

Executing: mim_c = calculateParameter(((dmim_std_c * (1 - mim_hd)) + (dmim_hd_c * mim_hd)))

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_BE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_BE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_hd "hd")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(mim_bp "bp")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: mim_hds = geomAnd(dev_ID mimhd)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: mim_area = measureParameter(area (dev_ID over ht) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID over ht) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_dmim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_hdm = measureParameter(figCount (dev_ID enclosing mim_hds))

Executing: mim_hd = calculateParameter((mim_hdm + (mim_l - mim_l)))

Executing: mim_dw = calculateParameter((mim_w + mimDW))

Executing: mim_dl = calculateParameter((mim_l + mimDL))

Executing: mim_area_dwl = calculateParameter((mim_dw * mim_dl))

Executing: mim_perim_dw = calculateParameter((2 * (mim_dw + mim_dl)))

Executing: dmim_std_c = calculateParameter(((dmimCA * ((mim_area_dwl * 2.0) + (mim_dw * ...

Executing: dmim_hd_ca = calculateParameter((dmimCA_hd * ((mim_dw * mim_dl) + ((mim_dw + ...

Executing: dmim_hd_cp = calculateParameter((2 * dmimCP_hd * (mim_dw + mim_dl + dmim_HD_w...

Executing: dmim_hd_c = calculateParameter((dmim_hd_ca + dmim_hd_cp))

Executing: mim_c = calculateParameter(((dmim_std_c * (1 - mim_hd)) + (dmim_hd_c * mim_hd)))

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_BE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_BE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_hd "hd")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(mim_bp "bp")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: mim_hds = geomAnd(dev_ID mimhd)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: mim_area = measureParameter(area (dev_ID over ht) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID over ht) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_dmim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_hdm = measureParameter(figCount (dev_ID enclosing mim_hds))

Executing: mim_hd = calculateParameter((mim_hdm + (mim_l - mim_l)))

Executing: mim_dw = calculateParameter((mim_w + mimDW))

Executing: mim_dl = calculateParameter((mim_l + mimDL))

Executing: mim_area_dwl = calculateParameter((mim_dw * mim_dl))

Executing: mim_perim_dw = calculateParameter((2 * (mim_dw + mim_dl)))

Executing: dmim_std_c = calculateParameter(((dmimCA * ((mim_area_dwl * 2.0) + (mim_dw * ...

Executing: dmim_hd_ca = calculateParameter((dmimCA_hd * ((mim_dw * mim_dl) + ((mim_dw + ...

Executing: dmim_hd_cp = calculateParameter((2 * dmimCP_hd * (mim_dw + mim_dl + dmim_HD_w...

Executing: dmim_hd_c = calculateParameter((dmim_hd_ca + dmim_hd_cp))

Executing: mim_c = calculateParameter(((dmim_std_c * (1 - mim_hd)) + (dmim_hd_c * mim_hd)))

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_BE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_BE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_hd "hd")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(mim_bp "bp")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: mim_hds = geomAnd(dev_ID mimhd)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: mim_area = measureParameter(area (dev_ID over ht) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID over ht) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_dmim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_hdm = measureParameter(figCount (dev_ID enclosing mim_hds))

Executing: mim_hd = calculateParameter((mim_hdm + (mim_l - mim_l)))

Executing: mim_dw = calculateParameter((mim_w + mimDW))

Executing: mim_dl = calculateParameter((mim_l + mimDL))

Executing: mim_area_dwl = calculateParameter((mim_dw * mim_dl))

Executing: mim_perim_dw = calculateParameter((2 * (mim_dw + mim_dl)))

Executing: dmim_std_c = calculateParameter(((dmimCA * ((mim_area_dwl * 2.0) + (mim_dw * ...

Executing: dmim_hd_ca = calculateParameter((dmimCA_hd * ((mim_dw * mim_dl) + ((mim_dw + ...

Executing: dmim_hd_cp = calculateParameter((2 * dmimCP_hd * (mim_dw + mim_dl + dmim_HD_w...

Executing: dmim_hd_c = calculateParameter((dmim_hd_ca + dmim_hd_cp))

Executing: mim_c = calculateParameter(((dmim_std_c * (1 - mim_hd)) + (dmim_hd_c * mim_hd)))

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_BE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_BE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_hd "hd")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(mim_bp "bp")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: mim_hds = geomAnd(dev_ID mimhd)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: mim_area = measureParameter(area (dev_ID over ht) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID over ht) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_dmim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_hdm = measureParameter(figCount (dev_ID enclosing mim_hds))

Executing: mim_hd = calculateParameter((mim_hdm + (mim_l - mim_l)))

Executing: mim_dw = calculateParameter((mim_w + mimDW))

Executing: mim_dl = calculateParameter((mim_l + mimDL))

Executing: mim_area_dwl = calculateParameter((mim_dw * mim_dl))

Executing: mim_perim_dw = calculateParameter((2 * (mim_dw + mim_dl)))

Executing: dmim_std_c = calculateParameter(((dmimCA * ((mim_area_dwl * 2.0) + (mim_dw * ...

Executing: dmim_hd_ca = calculateParameter((dmimCA_hd * ((mim_dw * mim_dl) + ((mim_dw + ...

Executing: dmim_hd_cp = calculateParameter((2 * dmimCP_hd * (mim_dw + mim_dl + dmim_HD_w...

Executing: dmim_hd_c = calculateParameter((dmim_hd_ca + dmim_hd_cp))

Executing: mim_c = calculateParameter(((dmim_std_c * (1 - mim_hd)) + (dmim_hd_c * mim_hd)))

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_BE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_BE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_hd "hd")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(mim_bp "bp")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: mim_hds = geomAnd(dev_ID mimhd)

Executing: mim_multi = geomAnd(dev_ID multi_MIM)

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: mim_area = measureParameter(area (dev_ID over ht) 1e-12)

Executing: mim_perim = measureParameter(perimeter (dev_ID over ht) 1e-06)

Executing: mim_w = measureParameter(area (dev_ID over width_label_dmim) 1e-05)

Executing: mim_l = calculateParameter((mim_area / mim_w))

Executing: mim_hdm = measureParameter(figCount (dev_ID enclosing mim_hds))

Executing: mim_hd = calculateParameter((mim_hdm + (mim_l - mim_l)))

Executing: mim_dw = calculateParameter((mim_w + mimDW))

Executing: mim_dl = calculateParameter((mim_l + mimDL))

Executing: mim_area_dwl = calculateParameter((mim_dw * mim_dl))

Executing: mim_perim_dw = calculateParameter((2 * (mim_dw + mim_dl)))

Executing: dmim_std_c = calculateParameter(((dmimCA * ((mim_area_dwl * 2.0) + (mim_dw * ...

Executing: dmim_hd_ca = calculateParameter((dmimCA_hd * ((mim_dw * mim_dl) + ((mim_dw + ...

Executing: dmim_hd_cp = calculateParameter((2 * dmimCP_hd * (mim_dw + mim_dl + dmim_HD_w...

Executing: dmim_hd_c = calculateParameter((dmim_hd_ca + dmim_hd_cp))

Executing: mim_c = calculateParameter(((dmim_std_c * (1 - mim_hd)) + (dmim_hd_c * mim_hd)))

Executing: mim_m = measureParameter(figCount (dev_ID enclosing mim_multi))

Executing: mim_mSwitch = calculateParameter((mim_m + (mim_l - mim_l)))

Executing: mimL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: mimL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: mimL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: mimL_ind = calculateParameter(((mimL_ind_num2 + ((mimL_ind_num1 - mimL_ind_nu...

Executing: mim_bb = measureParameter(figCount (dev_ID enclosing bb_mim) 2.0)

Executing: mim_nw = measureParameter(figCount (dev_ID enclosing nw_mim) 1.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_BE) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_BE) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: mim_sub = measureParameter(figCount (dev_ID enclosing sub_mim) 3.0)

Executing: mim_bp = calculateParameter((mim_bb + mim_nw + mim_sub))

Executing: nameParameter(mim_area "a")

Executing: nameParameter(mim_perim "p")

Executing: nameParameter(mim_w "w")

Executing: nameParameter(mim_l "l")

Executing: nameParameter(mim_hd "hd")

Executing: nameParameter(mim_c "c")

Executing: nameParameter(mim_c "ceff")

Executing: nameParameter(mim_mSwitch "mSwitch")

Executing: nameParameter(mimL_ind "setind")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(mim_bp "bp")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "AM MT")

Executing: saveProperty(dev_ID "nlev" "6")

Executing: saveProperty(MIMpi "lm" 1)

Executing: saveProperty(DUALMIMpi "lm" 1)

Executing: saveProperty(MIMnw "lm" 1)

Executing: saveProperty(DUALMIMnw "lm" 1)

Executing: saveProperty(MIMsx "lm" 1)

Executing: saveProperty(DUALMIMsx "lm" 1)

Executing: saveProperty(MIMhdpi "lm" 1)

Executing: saveProperty(DUALMIMhdpi "lm" 1)

Executing: saveProperty(MIMhdnw "lm" 1)

Executing: saveProperty(DUALMIMhdnw "lm" 1)

Executing: saveProperty(MIMhdsx "lm" 1)

Executing: saveProperty(DUALMIMhdsx "lm" 1)

Executing: vncap_top1_pwell = extractDevice("vncap" vncap_top1 (vncap_term1 "IN" "OUT") ...
           vncap_top1_subs = extractDevice("vncap" vncap_top1 (vncap_term1 "IN" "OUT") (...

Executing: extractDevice("vncap" vncap_tnw1 (vncap_term1 "IN" "OUT") (nw "SUB") flagMalf...

Executing: vncap_topt_pwell = extractDevice("vncap" vncap_topt (vncap_termt "IN" "OUT") ...
           vncap_topt_subs = extractDevice("vncap" vncap_topt (vncap_termt "IN" "OUT") (...

Executing: extractDevice("vncap" vncap_tnwt (vncap_termt "IN" "OUT") (nw "SUB") flagMalf...

Executing: vncap_top2_pwell = extractDevice("vncap" vncap_top2 (vncap_term2 "IN" "OUT") ...
           vncap_top2_subs = extractDevice("vncap" vncap_top2 (vncap_term2 "IN" "OUT") (...

Executing: extractDevice("vncap" vncap_tnw2 (vncap_term2 "IN" "OUT") (nw "SUB") flagMalf...

Executing: vncap_top3_pwell = extractDevice("vncap" vncap_top3 (vncap_term3 "IN" "OUT") ...
           vncap_top3_subs = extractDevice("vncap" vncap_top3 (vncap_term3 "IN" "OUT") (...

Executing: extractDevice("vncap" vncap_tnw3 (vncap_term3 "IN" "OUT") (nw "SUB") flagMalf...

Executing: vncap_top4_pwell = extractDevice("vncap" vncap_top4 (vncap_term4 "IN" "OUT") ...
           vncap_top4_subs = extractDevice("vncap" vncap_top4 (vncap_term4 "IN" "OUT") (...

Executing: extractDevice("vncap" vncap_tnw4 (vncap_term4 "IN" "OUT") (nw "SUB") flagMalf...

Executing: vncap_multi1 = geomEnclose(multi dev_ID)

Executing: vncap_multi = geomAnd(dev_ID vncap_multi1)

Executing: saveProperty(dev_ID "lm" 1)

Executing: saveProperty(dev_ID "nlev" 6)

Executing: length = measureParameter(area (dev_ID over vncap_L_edge) 5e-06)

Executing: area = measureParameter(area (dev_ID) 1e-12)

Executing: width = calculateParameter((area / length))

Executing: vncapL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: vncapL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: vncapL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: vncapL_ind = calculateParameter(((vncapL_ind_num2 + ((vncapL_ind_num1 - vncap...

Executing: vncap_m = measureParameter(figCount (dev_ID enclosing vncap_multi))

Executing: vncap_mSwitch = calculateParameter((vncap_m + (length - length)))

Executing: vncap_nw = measureParameter(figCount (dev_ID enclosing nw_vncap) 1.0)

Executing: vncap_bb = measureParameter(figCount (dev_ID enclosing bb_vncap) 2.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_vncap) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_vncap) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: vncap_sub = measureParameter(figCount (dev_ID enclosing sub_vncap) 3.0)

Executing: vncap_bp = calculateParameter((vncap_nw + vncap_bb + vncap_sub))

Executing: nameParameter(length "l")

Executing: nameParameter(area "area")

Executing: nameParameter(width "w")

Executing: nameParameter(vncapL_ind "setind")

Executing: nameParameter(vncap_mSwitch "mSwitch")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(vncap_bp "bp")

Executing: BL1 = measureParameter(figCount (dev_ID enclosing VNCAP_parm))

Executing: bl1 = calculateParameter(((length - length) + BL1))

Executing: nameParameter(bl1 "botlev")

Executing: TL1 = measureParameter(figCount (dev_ID enclosing VNCAP_count))

Executing: tl1 = calculateParameter(floor(((TL1 + bl1) - 1.0)))

Executing: nameParameter(tl1 "toplev")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween2" "toplev2 botlev2 toplev botlev")

Executing: vncap_multi1 = geomEnclose(multi dev_ID)

Executing: vncap_multi = geomAnd(dev_ID vncap_multi1)

Executing: saveProperty(dev_ID "lm" 1)

Executing: saveProperty(dev_ID "nlev" 6)

Executing: length = measureParameter(area (dev_ID over vncap_L_edge) 5e-06)

Executing: area = measureParameter(area (dev_ID) 1e-12)

Executing: width = calculateParameter((area / length))

Executing: vncapL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: vncapL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: vncapL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: vncapL_ind = calculateParameter(((vncapL_ind_num2 + ((vncapL_ind_num1 - vncap...

Executing: vncap_m = measureParameter(figCount (dev_ID enclosing vncap_multi))

Executing: vncap_mSwitch = calculateParameter((vncap_m + (length - length)))

Executing: vncap_nw = measureParameter(figCount (dev_ID enclosing nw_vncap) 1.0)

Executing: vncap_bb = measureParameter(figCount (dev_ID enclosing bb_vncap) 2.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_vncap) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_vncap) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: vncap_sub = measureParameter(figCount (dev_ID enclosing sub_vncap) 3.0)

Executing: vncap_bp = calculateParameter((vncap_nw + vncap_bb + vncap_sub))

Executing: nameParameter(length "l")

Executing: nameParameter(area "area")

Executing: nameParameter(width "w")

Executing: nameParameter(vncapL_ind "setind")

Executing: nameParameter(vncap_mSwitch "mSwitch")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(vncap_bp "bp")

Executing: BL1 = measureParameter(figCount (dev_ID enclosing VNCAP_parm))

Executing: bl1 = calculateParameter(((length - length) + BL1))

Executing: nameParameter(bl1 "botlev")

Executing: TL1 = measureParameter(figCount (dev_ID enclosing VNCAP_count))

Executing: tl1 = calculateParameter(floor(((TL1 + bl1) - 1.0)))

Executing: nameParameter(tl1 "toplev")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween2" "toplev2 botlev2 toplev botlev")

Executing: vncap_multi1 = geomEnclose(multi dev_ID)

Executing: vncap_multi = geomAnd(dev_ID vncap_multi1)

Executing: saveProperty(dev_ID "lm" 1)

Executing: saveProperty(dev_ID "nlev" 6)

Executing: length = measureParameter(area (dev_ID over vncap_L_edge) 5e-06)

Executing: area = measureParameter(area (dev_ID) 1e-12)

Executing: width = calculateParameter((area / length))

Executing: vncapL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: vncapL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: vncapL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: vncapL_ind = calculateParameter(((vncapL_ind_num2 + ((vncapL_ind_num1 - vncap...

Executing: vncap_m = measureParameter(figCount (dev_ID enclosing vncap_multi))

Executing: vncap_mSwitch = calculateParameter((vncap_m + (length - length)))

Executing: vncap_nw = measureParameter(figCount (dev_ID enclosing nw_vncap) 1.0)

Executing: vncap_bb = measureParameter(figCount (dev_ID enclosing bb_vncap) 2.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_vncap) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_vncap) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: vncap_sub = measureParameter(figCount (dev_ID enclosing sub_vncap) 3.0)

Executing: vncap_bp = calculateParameter((vncap_nw + vncap_bb + vncap_sub))

Executing: nameParameter(length "l")

Executing: nameParameter(area "area")

Executing: nameParameter(width "w")

Executing: nameParameter(vncapL_ind "setind")

Executing: nameParameter(vncap_mSwitch "mSwitch")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(vncap_bp "bp")

Executing: BL1 = measureParameter(figCount (dev_ID enclosing VNCAP_parm))

Executing: bl1 = calculateParameter(((length - length) + BL1))

Executing: nameParameter(bl1 "botlev")

Executing: TL1 = measureParameter(figCount (dev_ID enclosing VNCAP_count))

Executing: tl1 = calculateParameter(floor(((TL1 + bl1) - 1.0)))

Executing: nameParameter(tl1 "toplev")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween2" "toplev2 botlev2 toplev botlev")

Executing: vncap_multi1 = geomEnclose(multi dev_ID)

Executing: vncap_multi = geomAnd(dev_ID vncap_multi1)

Executing: saveProperty(dev_ID "lm" 1)

Executing: saveProperty(dev_ID "nlev" 6)

Executing: length = measureParameter(area (dev_ID over vncap_L_edge) 5e-06)

Executing: area = measureParameter(area (dev_ID) 1e-12)

Executing: width = calculateParameter((area / length))

Executing: vncapL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: vncapL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: vncapL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: vncapL_ind = calculateParameter(((vncapL_ind_num2 + ((vncapL_ind_num1 - vncap...

Executing: vncap_m = measureParameter(figCount (dev_ID enclosing vncap_multi))

Executing: vncap_mSwitch = calculateParameter((vncap_m + (length - length)))

Executing: vncap_nw = measureParameter(figCount (dev_ID enclosing nw_vncap) 1.0)

Executing: vncap_bb = measureParameter(figCount (dev_ID enclosing bb_vncap) 2.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_vncap) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_vncap) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: vncap_sub = measureParameter(figCount (dev_ID enclosing sub_vncap) 3.0)

Executing: vncap_bp = calculateParameter((vncap_nw + vncap_bb + vncap_sub))

Executing: nameParameter(length "l")

Executing: nameParameter(area "area")

Executing: nameParameter(width "w")

Executing: nameParameter(vncapL_ind "setind")

Executing: nameParameter(vncap_mSwitch "mSwitch")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(vncap_bp "bp")

Executing: BL1 = measureParameter(figCount (dev_ID enclosing VNCAP_parm))

Executing: bl1 = calculateParameter(((length - length) + BL1))

Executing: nameParameter(bl1 "botlev")

Executing: TL1 = measureParameter(figCount (dev_ID enclosing VNCAP_count))

Executing: tl1 = calculateParameter(floor(((TL1 + bl1) - 1.0)))

Executing: nameParameter(tl1 "toplev")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween2" "toplev2 botlev2 toplev botlev")

Executing: vncap_multi1 = geomEnclose(multi dev_ID)

Executing: vncap_multi = geomAnd(dev_ID vncap_multi1)

Executing: saveProperty(dev_ID "lm" 1)

Executing: saveProperty(dev_ID "nlev" 6)

Executing: length = measureParameter(area (dev_ID over vncap_L_edge) 5e-06)

Executing: area = measureParameter(area (dev_ID) 1e-12)

Executing: width = calculateParameter((area / length))

Executing: vncapL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: vncapL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: vncapL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: vncapL_ind = calculateParameter(((vncapL_ind_num2 + ((vncapL_ind_num1 - vncap...

Executing: vncap_m = measureParameter(figCount (dev_ID enclosing vncap_multi))

Executing: vncap_mSwitch = calculateParameter((vncap_m + (length - length)))

Executing: vncap_nw = measureParameter(figCount (dev_ID enclosing nw_vncap) 1.0)

Executing: vncap_bb = measureParameter(figCount (dev_ID enclosing bb_vncap) 2.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_vncap) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_vncap) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: vncap_sub = measureParameter(figCount (dev_ID enclosing sub_vncap) 3.0)

Executing: vncap_bp = calculateParameter((vncap_nw + vncap_bb + vncap_sub))

Executing: nameParameter(length "l")

Executing: nameParameter(area "area")

Executing: nameParameter(width "w")

Executing: nameParameter(vncapL_ind "setind")

Executing: nameParameter(vncap_mSwitch "mSwitch")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(vncap_bp "bp")

Executing: BL1 = measureParameter(figCount (dev_ID enclosing VNCAP_parm))

Executing: bl1 = calculateParameter(((length - length) + BL1))

Executing: nameParameter(bl1 "botlev")

Executing: TL1 = measureParameter(figCount (dev_ID enclosing VNCAP_count))

Executing: tl1 = calculateParameter(floor(((TL1 + bl1) - 1.0)))

Executing: nameParameter(tl1 "toplev")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween2" "toplev2 botlev2 toplev botlev")

Executing: vncap_multi1 = geomEnclose(multi dev_ID)

Executing: vncap_multi = geomAnd(dev_ID vncap_multi1)

Executing: saveProperty(dev_ID "lm" 1)

Executing: saveProperty(dev_ID "nlev" 6)

Executing: length = measureParameter(area (dev_ID over vncap_L_edge) 5e-06)

Executing: area = measureParameter(area (dev_ID) 1e-12)

Executing: width = calculateParameter((area / length))

Executing: vncapL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: vncapL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: vncapL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: vncapL_ind = calculateParameter(((vncapL_ind_num2 + ((vncapL_ind_num1 - vncap...

Executing: vncap_m = measureParameter(figCount (dev_ID enclosing vncap_multi))

Executing: vncap_mSwitch = calculateParameter((vncap_m + (length - length)))

Executing: vncap_nw = measureParameter(figCount (dev_ID enclosing nw_vncap) 1.0)

Executing: vncap_bb = measureParameter(figCount (dev_ID enclosing bb_vncap) 2.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_vncap) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_vncap) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: vncap_sub = measureParameter(figCount (dev_ID enclosing sub_vncap) 3.0)

Executing: vncap_bp = calculateParameter((vncap_nw + vncap_bb + vncap_sub))

Executing: nameParameter(length "l")

Executing: nameParameter(area "area")

Executing: nameParameter(width "w")

Executing: nameParameter(vncapL_ind "setind")

Executing: nameParameter(vncap_mSwitch "mSwitch")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(vncap_bp "bp")

Executing: BL1 = measureParameter(figCount (dev_ID enclosing VNCAP_parm))

Executing: bl1 = calculateParameter(((length - length) + BL1))

Executing: nameParameter(bl1 "botlev")

Executing: TL1 = measureParameter(figCount (dev_ID enclosing VNCAP_count))

Executing: tl1 = calculateParameter(floor(((TL1 + bl1) - 1.0)))

Executing: nameParameter(tl1 "toplev")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween2" "toplev2 botlev2 toplev botlev")

Executing: vncap_multi1 = geomEnclose(multi dev_ID)

Executing: vncap_multi = geomAnd(dev_ID vncap_multi1)

Executing: saveProperty(dev_ID "lm" 1)

Executing: saveProperty(dev_ID "nlev" 6)

Executing: length = measureParameter(area (dev_ID over vncap_L_edge) 5e-06)

Executing: area = measureParameter(area (dev_ID) 1e-12)

Executing: width = calculateParameter((area / length))

Executing: vncapL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: vncapL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: vncapL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: vncapL_ind = calculateParameter(((vncapL_ind_num2 + ((vncapL_ind_num1 - vncap...

Executing: vncap_m = measureParameter(figCount (dev_ID enclosing vncap_multi))

Executing: vncap_mSwitch = calculateParameter((vncap_m + (length - length)))

Executing: vncap_nw = measureParameter(figCount (dev_ID enclosing nw_vncap) 1.0)

Executing: vncap_bb = measureParameter(figCount (dev_ID enclosing bb_vncap) 2.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_vncap) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_vncap) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: vncap_sub = measureParameter(figCount (dev_ID enclosing sub_vncap) 3.0)

Executing: vncap_bp = calculateParameter((vncap_nw + vncap_bb + vncap_sub))

Executing: nameParameter(length "l")

Executing: nameParameter(area "area")

Executing: nameParameter(width "w")

Executing: nameParameter(vncapL_ind "setind")

Executing: nameParameter(vncap_mSwitch "mSwitch")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(vncap_bp "bp")

Executing: BL1 = measureParameter(figCount (dev_ID enclosing VNCAP_parm))

Executing: bl1 = calculateParameter(((length - length) + BL1))

Executing: nameParameter(bl1 "botlev")

Executing: TL1 = measureParameter(figCount (dev_ID enclosing VNCAP_count))

Executing: tl1 = calculateParameter(floor(((TL1 + bl1) - 1.0)))

Executing: nameParameter(tl1 "toplev")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween2" "toplev2 botlev2 toplev botlev")

Executing: vncap_multi1 = geomEnclose(multi dev_ID)

Executing: vncap_multi = geomAnd(dev_ID vncap_multi1)

Executing: saveProperty(dev_ID "lm" 1)

Executing: saveProperty(dev_ID "nlev" 6)

Executing: length = measureParameter(area (dev_ID over vncap_L_edge) 5e-06)

Executing: area = measureParameter(area (dev_ID) 1e-12)

Executing: width = calculateParameter((area / length))

Executing: vncapL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: vncapL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: vncapL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: vncapL_ind = calculateParameter(((vncapL_ind_num2 + ((vncapL_ind_num1 - vncap...

Executing: vncap_m = measureParameter(figCount (dev_ID enclosing vncap_multi))

Executing: vncap_mSwitch = calculateParameter((vncap_m + (length - length)))

Executing: vncap_nw = measureParameter(figCount (dev_ID enclosing nw_vncap) 1.0)

Executing: vncap_bb = measureParameter(figCount (dev_ID enclosing bb_vncap) 2.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_vncap) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_vncap) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: vncap_sub = measureParameter(figCount (dev_ID enclosing sub_vncap) 3.0)

Executing: vncap_bp = calculateParameter((vncap_nw + vncap_bb + vncap_sub))

Executing: nameParameter(length "l")

Executing: nameParameter(area "area")

Executing: nameParameter(width "w")

Executing: nameParameter(vncapL_ind "setind")

Executing: nameParameter(vncap_mSwitch "mSwitch")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(vncap_bp "bp")

Executing: BL1 = measureParameter(figCount (dev_ID enclosing VNCAP_parm))

Executing: bl1 = calculateParameter(((length - length) + BL1))

Executing: nameParameter(bl1 "botlev")

Executing: TL1 = measureParameter(figCount (dev_ID enclosing VNCAP_count))

Executing: tl1 = calculateParameter(floor(((TL1 + bl1) - 1.0)))

Executing: nameParameter(tl1 "toplev")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween2" "toplev2 botlev2 toplev botlev")

Executing: vncap_multi1 = geomEnclose(multi dev_ID)

Executing: vncap_multi = geomAnd(dev_ID vncap_multi1)

Executing: saveProperty(dev_ID "lm" 1)

Executing: saveProperty(dev_ID "nlev" 6)

Executing: length = measureParameter(area (dev_ID over vncap_L_edge) 5e-06)

Executing: area = measureParameter(area (dev_ID) 1e-12)

Executing: width = calculateParameter((area / length))

Executing: vncapL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: vncapL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: vncapL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: vncapL_ind = calculateParameter(((vncapL_ind_num2 + ((vncapL_ind_num1 - vncap...

Executing: vncap_m = measureParameter(figCount (dev_ID enclosing vncap_multi))

Executing: vncap_mSwitch = calculateParameter((vncap_m + (length - length)))

Executing: vncap_nw = measureParameter(figCount (dev_ID enclosing nw_vncap) 1.0)

Executing: vncap_bb = measureParameter(figCount (dev_ID enclosing bb_vncap) 2.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_vncap) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_vncap) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: vncap_sub = measureParameter(figCount (dev_ID enclosing sub_vncap) 3.0)

Executing: vncap_bp = calculateParameter((vncap_nw + vncap_bb + vncap_sub))

Executing: nameParameter(length "l")

Executing: nameParameter(area "area")

Executing: nameParameter(width "w")

Executing: nameParameter(vncapL_ind "setind")

Executing: nameParameter(vncap_mSwitch "mSwitch")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(vncap_bp "bp")

Executing: BL1 = measureParameter(figCount (dev_ID enclosing VNCAP_parm))

Executing: bl1 = calculateParameter(((length - length) + BL1))

Executing: nameParameter(bl1 "botlev")

Executing: TL1 = measureParameter(figCount (dev_ID enclosing VNCAP_count))

Executing: tl1 = calculateParameter(floor(((TL1 + bl1) - 1.0)))

Executing: nameParameter(tl1 "toplev")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween2" "toplev2 botlev2 toplev botlev")

Executing: vncap_multi1 = geomEnclose(multi dev_ID)

Executing: vncap_multi = geomAnd(dev_ID vncap_multi1)

Executing: saveProperty(dev_ID "lm" 1)

Executing: saveProperty(dev_ID "nlev" 6)

Executing: length = measureParameter(area (dev_ID over vncap_L_edge) 5e-06)

Executing: area = measureParameter(area (dev_ID) 1e-12)

Executing: width = calculateParameter((area / length))

Executing: vncapL_ind_num1 = measureParameter(perimeter (dev_ID over INDL_ind_num) 10.0)

Executing: vncapL_ind_num2 = measureParameter(length (dev_ID coincident INDL_ind_num) 20.0)

Executing: vncapL_ind_exp = measureParameter(length (dev_ID coincident INDL_ind_exp) 20.0)

Executing: vncapL_ind = calculateParameter(((vncapL_ind_num2 + ((vncapL_ind_num1 - vncap...

Executing: vncap_m = measureParameter(figCount (dev_ID enclosing vncap_multi))

Executing: vncap_mSwitch = calculateParameter((vncap_m + (length - length)))

Executing: vncap_nw = measureParameter(figCount (dev_ID enclosing nw_vncap) 1.0)

Executing: vncap_bb = measureParameter(figCount (dev_ID enclosing bb_vncap) 2.0)

Executing: rsx_num = measureParameter(length (dev_ID coincident rsx_vncap) 100.0)

Executing: rsx_perim = measureParameter(perimeter (dev_ID over rsx_vncap) 100.0)

Executing: rsx_exp = calculateParameter(((rsx_perim - 20 - (2 * (rsx_num - 5))) / 2.0))

Executing: rsx_value = calculateParameter(((rsx_num - 5) * (power 10 rsx_exp)))

Executing: vncap_sub = measureParameter(figCount (dev_ID enclosing sub_vncap) 3.0)

Executing: vncap_bp = calculateParameter((vncap_nw + vncap_bb + vncap_sub))

Executing: nameParameter(length "l")

Executing: nameParameter(area "area")

Executing: nameParameter(width "w")

Executing: nameParameter(vncapL_ind "setind")

Executing: nameParameter(vncap_mSwitch "mSwitch")

Executing: nameParameter(rsx_value "rsx")

Executing: nameParameter(vncap_bp "bp")

Executing: BL1 = measureParameter(figCount (dev_ID enclosing VNCAP_parm))

Executing: bl1 = calculateParameter(((length - length) + BL1))

Executing: nameParameter(bl1 "botlev")

Executing: TL1 = measureParameter(figCount (dev_ID enclosing VNCAP_count))

Executing: tl1 = calculateParameter(floor(((TL1 + bl1) - 1.0)))

Executing: nameParameter(tl1 "toplev")

Executing: saveProperty(dev_ID "m" 1)

Executing: saveProperty(dev_ID "par" 1)

Executing: saveProperty(dev_ID "est" 0)

Executing: saveProperty(dev_ID "blockParasiticsBetween2" "toplev2 botlev2 toplev botlev")

Executing: extractDevice("indline" am_transmission (am "out" "in") (ind_bb_term "BULK") ...

Executing: trans_width = measureParameter(length (am_transmission butting amTerm) 5e-07)

Executing: nameParameter(trans_width "w")

Executing: trans_area = measureParameter(area (am_transmission) 1e-12)

Executing: trans_length = calculateParameter((trans_area / trans_width))

Executing: nameParameter(trans_length "l")

Executing: saveProperty(am_transmission "blockParasiticsBetween" "AM sub")

Executing: saveProperty(am_transmission "grnd" -1)

Executing: indL_ind_num = measureParameter(area (am_transmission over INDL_ind_num))

Executing: indL_ind_exp = measureParameter(area (am_transmission over INDL_ind_exp))

Executing: indL_ind = calculateParameter((indL_ind_num / (power 10.0 indL_ind_exp)))

Executing: nameParameter(indL_ind "ind")

Executing: saveProperty(am_transmission "nlev" 6)

Executing: extractDevice("ind" ind2_mtam_m1 (trans_in_mt "in") (trans_out_am "out") (m1_...

Executing: extractDevice("ind" ind2_mtam_bb (trans_in_mt "in") (trans_out_am "out") (ind...

Executing: extractDevice("symind" symind3_amam_bb (symind_in "outpr") (symind_out "outse...
           extractDevice("symind" symind3_amam_bb (symind_in "outpr") (symind_out "outse...

Executing: extractDevice("symind" symind3_amam_m1 (symind_in "outpr") (symind_out "outse...
           extractDevice("symind" symind3_amam_m1 (symind_in "outpr") (symind_out "outse...

Executing: extractDevice("symind" symind2_amam_bb (symind_in "outpr") (symind_out "outse...

Executing: extractDevice("symind" symind2_amam_m1 (symind_in "outpr") (symind_out "outse...

Executing: ind_rect = geomGetRectangle(ind_xy)

Executing: ind_poly = geomGetPolygon(ind_xy)

Executing: UNITY_1 = geomOr(DEV)

Executing: IND_M1 = geomOverlap(DEV m1)

Executing: IND_BB = geomOverlap(DEV ind_bb_term)

Executing: am_CUT = drc(geomAndNot(am_intern mtTerm) (area > 250.0))

Executing: am_Whole = geomGetVertex(am_CUT (keep > 19.0))

Executing: am_Part = geomSize(geomGetNon90(geomAndNot(am_CUT am_Whole)) -0.1)

Executing: width_DEV = measureParameter(length (DEV coincident PLUS) 1e-06)

Executing: WU = measureParameter(length (DEV coincident MINUS) 1e-06)

Executing: tempSPACE = measureParameter(area (DEV over ind_space) 1e-12)

Executing: SPACE = calculateParameter((tempSPACE / width_DEV))

Executing: PERIM_rect = measureParameter(perimeter (DEV over ind_rect))

Executing: IND_X_rect = calculateParameter((PERIM_rect / 4000000.0))

Executing: AREA_poly = measureParameter(area (DEV over ind_poly))

Executing: IND_X_poly = calculateParameter((floor((sqrt(AREA_poly) * 1.1)) * 1e-06))

Executing: IND_X = calculateParameter((IND_X_rect + IND_X_poly))

Executing: UNITY = measureParameter(figCount (DEV enclosing UNITY_1))

Executing: GRNDM1 = measureParameter(figCount (DEV enclosing IND_M1) -2.0)

Executing: GRNDBB = measureParameter(figCount (DEV enclosing IND_BB) -1.0)

Executing: GRNDHR = measureParameter(figCount (DEV enclosing ind_hr_term) -5.0)

Executing: GRND = calculateParameter(((UNITY - UNITY) + GRNDHR + GRNDBB + GRNDM1))

Executing: Whole = measureParameter(figCount (DEV enclosing am_Whole))

Executing: Partial = measureParameter(figCount (DEV enclosing am_Part))

Executing: TURNS = calculateParameter(((Partial / 8.0) + Whole))

Executing: nameParameter(TURNS "n")

Executing: nameParameter(width_DEV "w")

Executing: nameParameter(WU "wu")

Executing: nameParameter(SPACE "s")

Executing: nameParameter(IND_X "x")

Executing: nameParameter(GRND "grnd")

Executing: saveProperty(DEV "blockParasiticsBetween" "AM sub")

Executing: saveProperty(DEV "nlev" "6")

Executing: UNITY_1 = geomOr(DEV)

Executing: IND_M1 = geomOverlap(DEV m1)

Executing: IND_BB = geomOverlap(DEV ind_bb_term)

Executing: am_Whole = geomGetVertex(am_CUT (keep > 19.0))

Executing: am_Part = geomSize(geomGetNon90(geomAndNot(am_CUT am_Whole)) -0.1)

Executing: width_DEV = measureParameter(length (DEV coincident PLUS) 1e-06)

Executing: WU = measureParameter(length (DEV coincident MINUS) 1e-06)

Executing: tempSPACE = measureParameter(area (DEV over ind_space) 1e-12)

Executing: SPACE = calculateParameter((tempSPACE / width_DEV))

Executing: PERIM_rect = measureParameter(perimeter (DEV over ind_rect))

Executing: IND_X_rect = calculateParameter((PERIM_rect / 4000000.0))

Executing: AREA_poly = measureParameter(area (DEV over ind_poly))

Executing: IND_X_poly = calculateParameter((floor((sqrt(AREA_poly) * 1.1)) * 1e-06))

Executing: IND_X = calculateParameter((IND_X_rect + IND_X_poly))

Executing: UNITY = measureParameter(figCount (DEV enclosing UNITY_1))

Executing: GRNDM1 = measureParameter(figCount (DEV enclosing IND_M1) -2.0)

Executing: GRNDBB = measureParameter(figCount (DEV enclosing IND_BB) -1.0)

Executing: GRNDHR = measureParameter(figCount (DEV enclosing ind_hr_term) -5.0)

Executing: GRND = calculateParameter(((UNITY - UNITY) + GRNDHR + GRNDBB + GRNDM1))

Executing: Whole = measureParameter(figCount (DEV enclosing am_Whole))

Executing: Partial = measureParameter(figCount (DEV enclosing am_Part))

Executing: TURNS = calculateParameter(((Partial / 8.0) + Whole))

Executing: nameParameter(TURNS "n")

Executing: nameParameter(width_DEV "w")

Executing: nameParameter(WU "wu")

Executing: nameParameter(SPACE "s")

Executing: nameParameter(IND_X "x")

Executing: nameParameter(GRND "grnd")

Executing: saveProperty(DEV "blockParasiticsBetween" "AM sub")

Executing: saveProperty(DEV "nlev" "6")

Executing: ind_rect = geomGetRectangle(DEV)

Executing: ind_poly = geomGetPolygon(DEV)

Executing: UNITY_1 = geomOr(DEV)

Executing: m1_plate = geomSize(geomSize(geomAndNot(geomAnd(m1 allInds) MIDDLE) -0.01) 0.01)

Executing: IND_M1 = geomOverlap(DEV m1_plate)

Executing: IND_BB = geomOverlap(DEV ind_bb_term)

Executing: symind_center = geomGetBBox(DEV outputCenterMarker 1.0)

Executing: alternate_ct = geomAnd(MIDDLE symind_center)

Executing: Number_AM_internal = measureParameter(figCount (DEV enclosing am_intern))

Executing: TURNS = calculateParameter((Number_AM_internal / 1.0))

Executing: AREA_p = measureParameter(area (DEV over PLUS) 1e-12)

Executing: WIDTH_p = measureParameter(length (DEV coincident PLUS) 1e-06)

Executing: WIDTH_DEV = calculateParameter((AREA_p / WIDTH_p))

Executing: WUnderpass = measureParameter(length (DEV coincident MIDDLE) 1e-06)

Executing: tempSPACE = measureParameter(area (DEV over Symind_edge_space) 0.0001)

Executing: Number = measureParameter(figCount (DEV enclosing Symind_edge_space))

Executing: SPACE_P = calculateParameter((tempSPACE / max(Number 1)))

Executing: SPACE = calculateParameter((((zerop(SPACE_P)) * 5e-06) + SPACE_P))

Executing: PERIM_rect = measureParameter(perimeter (DEV over ind_rect))

Executing: IND_X_rect = calculateParameter((PERIM_rect / 4000000.0))

Executing: AREA_poly = measureParameter(area (DEV over ind_poly))

Executing: IND_X_poly = calculateParameter((floor((sqrt(AREA_poly) * 1.1)) * 1e-06))

Executing: IND_X = calculateParameter((IND_X_rect + IND_X_poly))

Executing: UNITY = measureParameter(figCount (DEV enclosing UNITY_1))

Executing: GRNDM1 = measureParameter(figCount (DEV enclosing IND_M1) -2.0)

Executing: GRNDBB = measureParameter(figCount (DEV enclosing IND_BB) -1.0)

Executing: GRNDHR = measureParameter(figCount (DEV enclosing ind_hr_term) -5.0)

Executing: GRND = calculateParameter(((UNITY - UNITY) + GRNDHR + GRNDBB + GRNDM1))

Executing: ind_enh = measureParameter(figCount (DEV enclosing ind_xov))

Executing: ind_enhanced = calculateParameter((ind_enh + (TURNS - TURNS)))

Executing: altct = measureParameter(figCount (DEV enclosing alternate_ct))

Executing: wu = calculateParameter(if(((TURNS == 1.0) && (altct == 1.0)) then (WUnderpas...

Executing: nameParameter(TURNS "n")

Executing: nameParameter(WIDTH_DEV "w")

Executing: nameParameter(wu "wu")

Executing: nameParameter(SPACE "s")

Executing: nameParameter(IND_X "x")

Executing: nameParameter(GRND "grnd")

Executing: nameParameter(ind_enhanced "xov")

Executing: nameParameter(altct "altct")

Executing: saveProperty(DEV "blockParasiticsBetween" "AM sub")

Executing: saveProperty(DEV "nlev" "6")

Executing: ind_rect = geomGetRectangle(DEV)

Executing: ind_poly = geomGetPolygon(DEV)

Executing: UNITY_1 = geomOr(DEV)

Executing: IND_M1 = geomOverlap(DEV m1_plate)

Executing: IND_BB = geomOverlap(DEV ind_bb_term)

Executing: symind_center = geomGetBBox(DEV outputCenterMarker 1.0)

Executing: alternate_ct = geomAnd(MIDDLE symind_center)

Executing: Number_AM_internal = measureParameter(figCount (DEV enclosing am_intern))

Executing: TURNS = calculateParameter((Number_AM_internal / 1.0))

Executing: AREA_p = measureParameter(area (DEV over PLUS) 1e-12)

Executing: WIDTH_p = measureParameter(length (DEV coincident PLUS) 1e-06)

Executing: WIDTH_DEV = calculateParameter((AREA_p / WIDTH_p))

Executing: WUnderpass = measureParameter(length (DEV coincident MIDDLE) 1e-06)

Executing: tempSPACE = measureParameter(area (DEV over Symind_edge_space) 0.0001)

Executing: Number = measureParameter(figCount (DEV enclosing Symind_edge_space))

Executing: SPACE_P = calculateParameter((tempSPACE / max(Number 1)))

Executing: SPACE = calculateParameter((((zerop(SPACE_P)) * 5e-06) + SPACE_P))

Executing: PERIM_rect = measureParameter(perimeter (DEV over ind_rect))

Executing: IND_X_rect = calculateParameter((PERIM_rect / 4000000.0))

Executing: AREA_poly = measureParameter(area (DEV over ind_poly))

Executing: IND_X_poly = calculateParameter((floor((sqrt(AREA_poly) * 1.1)) * 1e-06))

Executing: IND_X = calculateParameter((IND_X_rect + IND_X_poly))

Executing: UNITY = measureParameter(figCount (DEV enclosing UNITY_1))

Executing: GRNDM1 = measureParameter(figCount (DEV enclosing IND_M1) -2.0)

Executing: GRNDBB = measureParameter(figCount (DEV enclosing IND_BB) -1.0)

Executing: GRNDHR = measureParameter(figCount (DEV enclosing ind_hr_term) -5.0)

Executing: GRND = calculateParameter(((UNITY - UNITY) + GRNDHR + GRNDBB + GRNDM1))

Executing: ind_enh = measureParameter(figCount (DEV enclosing ind_xov))

Executing: ind_enhanced = calculateParameter((ind_enh + (TURNS - TURNS)))

Executing: altct = measureParameter(figCount (DEV enclosing alternate_ct))

Executing: wu = calculateParameter(if(((TURNS == 1.0) && (altct == 1.0)) then (WUnderpas...

Executing: nameParameter(TURNS "n")

Executing: nameParameter(WIDTH_DEV "w")

Executing: nameParameter(wu "wu")

Executing: nameParameter(SPACE "s")

Executing: nameParameter(IND_X "x")

Executing: nameParameter(GRND "grnd")

Executing: nameParameter(ind_enhanced "xov")

Executing: nameParameter(altct "altct")

Executing: saveProperty(DEV "blockParasiticsBetween" "AM sub")

Executing: saveProperty(DEV "nlev" "6")

Executing: ind_rect = geomGetRectangle(DEV)

Executing: ind_poly = geomGetPolygon(DEV)

Executing: UNITY_1 = geomOr(DEV)

Executing: IND_M1 = geomOverlap(DEV m1)

Executing: saveProperty(DEV "wu" "-1.0e-6")

Executing: Number_AM_internal = measureParameter(figCount (DEV enclosing am_intern))

Executing: TURNS = calculateParameter((Number_AM_internal / 1.0))

Executing: AREA_p = measureParameter(area (DEV over PLUS) 1e-12)

Executing: WIDTH_p = measureParameter(length (DEV coincident PLUS) 1e-06)

Executing: WIDTH_DEV = calculateParameter((AREA_p / WIDTH_p))

Executing: tempSPACE = measureParameter(area (DEV over Symind_edge_space) 0.0001)

Executing: Number = measureParameter(figCount (DEV enclosing Symind_edge_space))

Executing: SPACE_P = calculateParameter((tempSPACE / max(Number 1)))

Executing: SPACE = calculateParameter((((zerop(SPACE_P)) * 5e-06) + SPACE_P))

Executing: PERIM_rect = measureParameter(perimeter (DEV over ind_rect))

Executing: IND_X_rect = calculateParameter((PERIM_rect / 4000000.0))

Executing: AREA_poly = measureParameter(area (DEV over ind_poly))

Executing: IND_X_poly = calculateParameter((floor((sqrt(AREA_poly) * 1.1)) * 1e-06))

Executing: IND_X = calculateParameter((IND_X_rect + IND_X_poly))

Executing: UNITY = measureParameter(figCount (DEV enclosing UNITY_1))

Executing: GRNDM1 = measureParameter(figCount (DEV enclosing IND_M1) -2.0)

Executing: GRNDBB = measureParameter(figCount (DEV enclosing ind_bb_term) -1.0)

Executing: GRNDHR = measureParameter(figCount (DEV enclosing ind_hr_term) -5.0)

Executing: GRND = calculateParameter(((UNITY - UNITY) + GRNDHR + GRNDBB + GRNDM1))

Executing: ind_enh = measureParameter(figCount (DEV enclosing ind_xov))

Executing: ind_enhanced = calculateParameter((ind_enh + (TURNS - TURNS)))

Executing: nameParameter(TURNS "n")

Executing: nameParameter(WIDTH_DEV "w")

Executing: nameParameter(SPACE "s")

Executing: nameParameter(IND_X "x")

Executing: nameParameter(GRND "grnd")

Executing: nameParameter(ind_enhanced "xov")

Executing: saveProperty(DEV "blockParasiticsBetween" "AM sub")

Executing: saveProperty(DEV "nlev" "6")

Executing: ind_rect = geomGetRectangle(DEV)

Executing: ind_poly = geomGetPolygon(DEV)

Executing: UNITY_1 = geomOr(DEV)

Executing: IND_M1 = geomOverlap(DEV m1)

Executing: saveProperty(DEV "wu" "-1.0e-6")

Executing: Number_AM_internal = measureParameter(figCount (DEV enclosing am_intern))

Executing: TURNS = calculateParameter((Number_AM_internal / 1.0))

Executing: AREA_p = measureParameter(area (DEV over PLUS) 1e-12)

Executing: WIDTH_p = measureParameter(length (DEV coincident PLUS) 1e-06)

Executing: WIDTH_DEV = calculateParameter((AREA_p / WIDTH_p))

Executing: tempSPACE = measureParameter(area (DEV over Symind_edge_space) 0.0001)

Executing: Number = measureParameter(figCount (DEV enclosing Symind_edge_space))

Executing: SPACE_P = calculateParameter((tempSPACE / max(Number 1)))

Executing: SPACE = calculateParameter((((zerop(SPACE_P)) * 5e-06) + SPACE_P))

Executing: PERIM_rect = measureParameter(perimeter (DEV over ind_rect))

Executing: IND_X_rect = calculateParameter((PERIM_rect / 4000000.0))

Executing: AREA_poly = measureParameter(area (DEV over ind_poly))

Executing: IND_X_poly = calculateParameter((floor((sqrt(AREA_poly) * 1.1)) * 1e-06))

Executing: IND_X = calculateParameter((IND_X_rect + IND_X_poly))

Executing: UNITY = measureParameter(figCount (DEV enclosing UNITY_1))

Executing: GRNDM1 = measureParameter(figCount (DEV enclosing IND_M1) -2.0)

Executing: GRNDBB = measureParameter(figCount (DEV enclosing ind_bb_term) -1.0)

Executing: GRNDHR = measureParameter(figCount (DEV enclosing ind_hr_term) -5.0)

Executing: GRND = calculateParameter(((UNITY - UNITY) + GRNDHR + GRNDBB + GRNDM1))

Executing: ind_enh = measureParameter(figCount (DEV enclosing ind_xov))

Executing: ind_enhanced = calculateParameter((ind_enh + (TURNS - TURNS)))

Executing: nameParameter(TURNS "n")

Executing: nameParameter(WIDTH_DEV "w")

Executing: nameParameter(SPACE "s")

Executing: nameParameter(IND_X "x")

Executing: nameParameter(GRND "grnd")

Executing: nameParameter(ind_enhanced "xov")

Executing: saveProperty(DEV "blockParasiticsBetween" "AM sub")

Executing: saveProperty(DEV "nlev" "6")

Executing: extractDevice("devicepad" padOverDev (padOverDev_top "pad") flagMalformed (na...

Executing: saveProperty(padOverDev "c" 1e-15)

Executing: extractDevice("bondpad" bondPad_PC (bondPad_top "in") (pc_model "gp") (substr...

Executing: extractDevice("bondpad" bondPad_BB (bondPad_top "in") (bond_bb_term "gp") (su...

Executing: bondPad_rect = geomGetRectangle(bondPad_PC)

Executing: bondPad_poly = geomGetPolygon(bondPad_PC)

Executing: M4_nw = geomInside(bondPad_PC nw)

Executing: M4_pc = geomInside(bondPad_PC pc)

Executing: bondPad_a = measureParameter(area (bondPad_PC) 1e-12)

Executing: bondPad_p = measureParameter(perimeter (bondPad_PC) 1e-06)

Executing: bondPad_rect1 = measureParameter(figCount (bondPad_PC enclosing bondPad_rect))

Executing: bondPad_poly1 = measureParameter(figCount (bondPad_PC enclosing bondPad_poly))

Executing: bondPad_RorP = calculateParameter((bondPad_rect1 - bondPad_poly1))

Executing: bondPad_nw = measureParameter(figCount (bondPad_PC enclosing M4_nw))

Executing: bondPad_pc = measureParameter(figCount (bondPad_PC enclosing M4_pc))

Executing: bondPad_grnd = calculateParameter(((bondPad_nw * -3.0) + (bondPad_pc * -2.0)))

Executing: nameParameter(bondPad_a "area")

Executing: nameParameter(bondPad_p "perim")

Executing: nameParameter(bondPad_RorP "rect")

Executing: nameParameter(bondPad_grnd "grnd")

Executing: bondPbb_rect = geomGetRectangle(bondPad_BB)

Executing: bondPbb_poly = geomGetPolygon(bondPad_BB)

Executing: bondPbb_a = measureParameter(area (bondPad_BB over bond_bb_term) 1e-12)

Executing: bondPbb_p = measureParameter(perimeter (bondPad_BB over bond_bb_term) 1e-06)

Executing: bondPbb_rect1 = measureParameter(figCount (bondPad_BB enclosing bondPbb_rect))

Executing: bondPbb_poly1 = measureParameter(figCount (bondPad_BB enclosing bondPbb_poly))

Executing: bondPbb_RorP = calculateParameter((bondPbb_rect1 - bondPbb_poly1))

Executing: nameParameter(bondPbb_a "area")

Executing: nameParameter(bondPbb_p "perim")

Executing: nameParameter(bondPbb_RorP "rect")

Executing: saveProperty(bondPad_BB "grnd" -1.0)

Executing: saveProperty(bondPad_PC "blockParasiticsBetween" "AM sub")

Executing: saveProperty(bondPad_BB "blockParasiticsBetween" "AM sub")

Executing: saveProperty(bondPad_PC "nlev" "6")

Executing: saveProperty(bondPad_BB "nlev" "6")

Executing: extractDevice("efuse" efuse (efuse_anod "in") (efuse_cath "out") flagMalforme...

Executing: coupledA_shieldT = extractDevice("coupledwires" coupledA (trans_va1_am "va1")...
           coupledA_shield4 = extractDevice("coupledwires" coupledA (trans_va1_am "va1")...
           coupledA_shield3 = extractDevice("coupledwires" coupledA (trans_va1_am "va1")...
           coupledA_shield2 = extractDevice("coupledwires" coupledA (trans_va1_am "va1")...
           coupledA_shield1 = extractDevice("coupledwires" coupledA (trans_va1_am "va1")...

Executing: width = measureParameter(area (dev_ID over signalWidth) 2.5e-06)

Executing: nameParameter(width "w")

Executing: area = measureParameter(area (dev_ID over signal) 5e-13)

Executing: length = calculateParameter(((area / width) + 4e-08))

Executing: nameParameter(length "l")

Executing: dist = measureParameter(area (dev_ID over coupledSpace) 5e-06)

Executing: nameParameter(dist "d")

Executing: space1 = measureParameter(area (dev_ID over shieldSpace) 2.5e-06)

Executing: space = calculateParameter((space1 - (area - area)))

Executing: nameParameter(space "s")

Executing: Side = measureParameter(figCount (dev_ID enclosing shieldSpace) 0.25)

Executing: side = calculateParameter((Side - (area - area)))

Executing: nameParameter(side "shieldsads")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "layerads overads")

Executing: UNITY = measureParameter(figCount (dev_ID enclosing signal) 0.5)

Executing: SEVEN = calculateParameter((UNITY * 7.0))

Executing: nameParameter(SEVEN "layerads")

Executing: am_couple_shield_m1 = measureParameter(figCount (coupledA enclosing shield1) ...

Executing: am_couple_shield_mt = measureParameter(figCount (coupledA enclosing shieldT) ...

Executing: am_couple_shield_m2 = measureParameter(figCount (coupledA enclosing shield2) ...

Executing: am_couple_shield_m3 = measureParameter(figCount (coupledA enclosing shield3) ...

Executing: am_couple_shield_m4 = measureParameter(figCount (coupledA enclosing shield4) ...

Executing: am_couple_shield = calculateParameter((am_couple_shield_mt + am_couple_shield...

Executing: nameParameter(am_couple_shield "overads")

Executing: saveProperty(coupledA "nlev" "6")

Executing: singleEndA_shieldT = extractDevice("singlewire" singleEndA (trans_va_am "va")...
           singleEndA_shield4 = extractDevice("singlewire" singleEndA (trans_va_am "va")...
           singleEndA_shield3 = extractDevice("singlewire" singleEndA (trans_va_am "va")...
           singleEndA_shield2 = extractDevice("singlewire" singleEndA (trans_va_am "va")...
           singleEndA_shield1 = extractDevice("singlewire" singleEndA (trans_va_am "va")...

Executing: width = measureParameter(area (dev_ID over signalWidth) 5e-06)

Executing: nameParameter(width "w")

Executing: area = measureParameter(area (dev_ID over signal) 1e-12)

Executing: length = calculateParameter(((area / width) + 4e-08))

Executing: nameParameter(length "l")

Executing: space1 = measureParameter(area (dev_ID over shieldSpace) 2.5e-06)

Executing: space = calculateParameter((space1 - (area - area)))

Executing: nameParameter(space "s")

Executing: Side = measureParameter(figCount (dev_ID enclosing shieldSpace) 0.25)

Executing: side = calculateParameter((Side - (area - area)))

Executing: nameParameter(side "shieldsads")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "layerads overads")

Executing: UNITY = measureParameter(figCount (dev_ID enclosing signal))

Executing: SEVEN = calculateParameter((UNITY * 7.0))

Executing: nameParameter(SEVEN "layerads")

Executing: am_single_shield_m1 = measureParameter(figCount (singleEndA enclosing shield1...

Executing: am_single_shield_mt = measureParameter(figCount (singleEndA enclosing shieldT...

Executing: am_single_shield_m2 = measureParameter(figCount (singleEndA enclosing shield2...

Executing: am_single_shield_m3 = measureParameter(figCount (singleEndA enclosing shield3...

Executing: am_single_shield_m4 = measureParameter(figCount (singleEndA enclosing shield4...

Executing: am_single_shield = calculateParameter((am_single_shield_mt + am_single_shield...

Executing: nameParameter(am_single_shield "overads")

Executing: saveProperty(singleEndA "nlev" "6")

Executing: coupledT_shield4 = extractDevice("coupledwires" coupledT (trans_va1_mt "va1")...
           coupledT_shield3 = extractDevice("coupledwires" coupledT (trans_va1_mt "va1")...
           coupledT_shield2 = extractDevice("coupledwires" coupledT (trans_va1_mt "va1")...
           coupledT_shield1 = extractDevice("coupledwires" coupledT (trans_va1_mt "va1")...

Executing: width = measureParameter(area (dev_ID over signalWidth) 2.5e-06)

Executing: nameParameter(width "w")

Executing: area = measureParameter(area (dev_ID over signal) 5e-13)

Executing: length = calculateParameter(((area / width) + 4e-08))

Executing: nameParameter(length "l")

Executing: dist = measureParameter(area (dev_ID over coupledSpace) 5e-06)

Executing: nameParameter(dist "d")

Executing: space1 = measureParameter(area (dev_ID over shieldSpace) 2.5e-06)

Executing: space = calculateParameter((space1 - (area - area)))

Executing: nameParameter(space "s")

Executing: Side = measureParameter(figCount (dev_ID enclosing shieldSpace) 0.25)

Executing: side = calculateParameter((Side - (area - area)))

Executing: nameParameter(side "shieldsads")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "layerads overads")

Executing: UNITY = measureParameter(figCount (dev_ID enclosing signal) 0.5)

Executing: SIX = calculateParameter((UNITY * 6.0))

Executing: nameParameter(SIX "layerads")

Executing: mt_couple_shield_m1 = measureParameter(figCount (coupledT enclosing shield1) ...

Executing: mt_couple_shield_m2 = measureParameter(figCount (coupledT enclosing shield2) ...

Executing: mt_couple_shield_m3 = measureParameter(figCount (coupledT enclosing shield3) ...

Executing: mt_couple_shield_m4 = measureParameter(figCount (coupledT enclosing shield4) ...

Executing: mt_couple_shield = calculateParameter((mt_couple_shield_m4 + mt_couple_shield...

Executing: nameParameter(mt_couple_shield "overads")

Executing: saveProperty(coupledT "nlev" "6")

Executing: singleEndT_shield4 = extractDevice("singlewire" singleEndT (trans_va_mt "va")...
           singleEndT_shield3 = extractDevice("singlewire" singleEndT (trans_va_mt "va")...
           singleEndT_shield2 = extractDevice("singlewire" singleEndT (trans_va_mt "va")...
           singleEndT_shield1 = extractDevice("singlewire" singleEndT (trans_va_mt "va")...

Executing: width = measureParameter(area (dev_ID over signalWidth) 5e-06)

Executing: nameParameter(width "w")

Executing: area = measureParameter(area (dev_ID over signal) 1e-12)

Executing: length = calculateParameter(((area / width) + 4e-08))

Executing: nameParameter(length "l")

Executing: space1 = measureParameter(area (dev_ID over shieldSpace) 2.5e-06)

Executing: space = calculateParameter((space1 - (area - area)))

Executing: nameParameter(space "s")

Executing: Side = measureParameter(figCount (dev_ID enclosing shieldSpace) 0.25)

Executing: side = calculateParameter((Side - (area - area)))

Executing: nameParameter(side "shieldsads")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "layerads overads")

Executing: UNITY = measureParameter(figCount (dev_ID enclosing signal))

Executing: SIX = calculateParameter((UNITY * 6.0))

Executing: nameParameter(SIX "layerads")

Executing: mt_single_shield_m1 = measureParameter(figCount (singleEndT enclosing shield1...

Executing: mt_single_shield_m2 = measureParameter(figCount (singleEndT enclosing shield2...

Executing: mt_single_shield_m3 = measureParameter(figCount (singleEndT enclosing shield3...

Executing: mt_single_shield_m4 = measureParameter(figCount (singleEndT enclosing shield4...

Executing: mt_single_shield = calculateParameter((mt_single_shield_m4 + mt_single_shield...

Executing: nameParameter(mt_single_shield "overads")

Executing: saveProperty(singleEndT "nlev" "6")

Executing: coupled4_shield3 = extractDevice("coupledwires" coupled4 (trans_va1_m4 "va1")...
           coupled4_shield2 = extractDevice("coupledwires" coupled4 (trans_va1_m4 "va1")...
           coupled4_shield1 = extractDevice("coupledwires" coupled4 (trans_va1_m4 "va1")...

Executing: width = measureParameter(area (dev_ID over signalWidth) 2.5e-06)

Executing: nameParameter(width "w")

Executing: area = measureParameter(area (dev_ID over signal) 5e-13)

Executing: length = calculateParameter(((area / width) + 4e-08))

Executing: nameParameter(length "l")

Executing: dist = measureParameter(area (dev_ID over coupledSpace) 5e-06)

Executing: nameParameter(dist "d")

Executing: space1 = measureParameter(area (dev_ID over shieldSpace) 2.5e-06)

Executing: space = calculateParameter((space1 - (area - area)))

Executing: nameParameter(space "s")

Executing: Side = measureParameter(figCount (dev_ID enclosing shieldSpace) 0.25)

Executing: side = calculateParameter((Side - (area - area)))

Executing: nameParameter(side "shieldsads")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "layerads overads")

Executing: UNITY = measureParameter(figCount (dev_ID enclosing signal) 0.5)

Executing: FOUR = calculateParameter((UNITY * 4.0))

Executing: nameParameter(FOUR "layerads")

Executing: m4_couple_shield_m1 = measureParameter(figCount (coupled4 enclosing shield1) ...

Executing: m4_couple_shield_m2 = measureParameter(figCount (coupled4 enclosing shield2) ...

Executing: m4_couple_shield_m3 = measureParameter(figCount (coupled4 enclosing shield3) ...

Executing: m4_couple_shield = calculateParameter((m4_couple_shield_m3 + m4_couple_shield...

Executing: nameParameter(m4_couple_shield "overads")

Executing: saveProperty(coupled4 "nlev" "6")

Executing: singleEnd4_shield3 = extractDevice("singlewire" singleEnd4 (trans_va_m4 "va")...
           singleEnd4_shield2 = extractDevice("singlewire" singleEnd4 (trans_va_m4 "va")...
           singleEnd4_shield1 = extractDevice("singlewire" singleEnd4 (trans_va_m4 "va")...

Executing: width = measureParameter(area (dev_ID over signalWidth) 5e-06)

Executing: nameParameter(width "w")

Executing: area = measureParameter(area (dev_ID over signal) 1e-12)

Executing: length = calculateParameter(((area / width) + 4e-08))

Executing: nameParameter(length "l")

Executing: space1 = measureParameter(area (dev_ID over shieldSpace) 2.5e-06)

Executing: space = calculateParameter((space1 - (area - area)))

Executing: nameParameter(space "s")

Executing: Side = measureParameter(figCount (dev_ID enclosing shieldSpace) 0.25)

Executing: side = calculateParameter((Side - (area - area)))

Executing: nameParameter(side "shieldsads")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "layerads overads")

Executing: UNITY = measureParameter(figCount (dev_ID enclosing signal))

Executing: FOUR = calculateParameter((UNITY * 4.0))

Executing: nameParameter(FOUR "layerads")

Executing: m4_single_shield_m1 = measureParameter(figCount (singleEnd4 enclosing shield1...

Executing: m4_single_shield_m2 = measureParameter(figCount (singleEnd4 enclosing shield2...

Executing: m4_single_shield_m3 = measureParameter(figCount (singleEnd4 enclosing shield3...

Executing: m4_single_shield = calculateParameter((m4_single_shield_m3 + m4_single_shield...

Executing: nameParameter(m4_single_shield "overads")

Executing: saveProperty(singleEnd4 "nlev" "6")

Executing: coupled3_shield2 = extractDevice("coupledwires" coupled3 (trans_va1_m3 "va1")...
           coupled3_shield1 = extractDevice("coupledwires" coupled3 (trans_va1_m3 "va1")...

Executing: width = measureParameter(area (dev_ID over signalWidth) 2.5e-06)

Executing: nameParameter(width "w")

Executing: area = measureParameter(area (dev_ID over signal) 5e-13)

Executing: length = calculateParameter(((area / width) + 4e-08))

Executing: nameParameter(length "l")

Executing: dist = measureParameter(area (dev_ID over coupledSpace) 5e-06)

Executing: nameParameter(dist "d")

Executing: space1 = measureParameter(area (dev_ID over shieldSpace) 2.5e-06)

Executing: space = calculateParameter((space1 - (area - area)))

Executing: nameParameter(space "s")

Executing: Side = measureParameter(figCount (dev_ID enclosing shieldSpace) 0.25)

Executing: side = calculateParameter((Side - (area - area)))

Executing: nameParameter(side "shieldsads")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "layerads overads")

Executing: UNITY = measureParameter(figCount (dev_ID enclosing signal) 0.5)

Executing: THREE = calculateParameter((UNITY * 3.0))

Executing: nameParameter(THREE "layerads")

Executing: m3_couple_shield_m1 = measureParameter(figCount (coupled3 enclosing shield1) ...

Executing: m3_couple_shield_m2 = measureParameter(figCount (coupled3 enclosing shield2) ...

Executing: m3_couple_shield = calculateParameter((m3_couple_shield_m2 + m3_couple_shield...

Executing: nameParameter(m3_couple_shield "overads")

Executing: saveProperty(coupled3 "nlev" "6")

Executing: singleEnd3_shield2 = extractDevice("singlewire" singleEnd3 (trans_va_m3 "va")...
           singleEnd3_shield1 = extractDevice("singlewire" singleEnd3 (trans_va_m3 "va")...

Executing: width = measureParameter(area (dev_ID over signalWidth) 5e-06)

Executing: nameParameter(width "w")

Executing: area = measureParameter(area (dev_ID over signal) 1e-12)

Executing: length = calculateParameter(((area / width) + 4e-08))

Executing: nameParameter(length "l")

Executing: space1 = measureParameter(area (dev_ID over shieldSpace) 2.5e-06)

Executing: space = calculateParameter((space1 - (area - area)))

Executing: nameParameter(space "s")

Executing: Side = measureParameter(figCount (dev_ID enclosing shieldSpace) 0.25)

Executing: side = calculateParameter((Side - (area - area)))

Executing: nameParameter(side "shieldsads")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "layerads overads")

Executing: UNITY = measureParameter(figCount (dev_ID enclosing signal))

Executing: THREE = calculateParameter((UNITY * 3.0))

Executing: nameParameter(THREE "layerads")

Executing: m3_single_shield_m2 = measureParameter(figCount (singleEnd3 enclosing shield2...

Executing: m3_single_shield_m1 = measureParameter(figCount (singleEnd3 enclosing shield1...

Executing: m3_single_shield = calculateParameter((m3_single_shield_m2 + m3_single_shield...

Executing: nameParameter(m3_single_shield "overads")

Executing: saveProperty(singleEnd3 "nlev" "6")

Executing: coupled2_shield1 = extractDevice("coupledwires" coupled2 (trans_va1_m2 "va1")...

Executing: width = measureParameter(area (dev_ID over signalWidth) 2.5e-06)

Executing: nameParameter(width "w")

Executing: area = measureParameter(area (dev_ID over signal) 5e-13)

Executing: length = calculateParameter(((area / width) + 4e-08))

Executing: nameParameter(length "l")

Executing: dist = measureParameter(area (dev_ID over coupledSpace) 5e-06)

Executing: nameParameter(dist "d")

Executing: space1 = measureParameter(area (dev_ID over shieldSpace) 2.5e-06)

Executing: space = calculateParameter((space1 - (area - area)))

Executing: nameParameter(space "s")

Executing: Side = measureParameter(figCount (dev_ID enclosing shieldSpace) 0.25)

Executing: side = calculateParameter((Side - (area - area)))

Executing: nameParameter(side "shieldsads")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "layerads overads")

Executing: UNITY = measureParameter(figCount (dev_ID enclosing signal) 0.5)

Executing: TWO = calculateParameter((UNITY * 2.0))

Executing: nameParameter(TWO "layerads")

Executing: m2_couple_shield = measureParameter(figCount (coupled2 enclosing shield1) 1.0)

Executing: nameParameter(m2_couple_shield "overads")

Executing: saveProperty(coupled2 "nlev" "6")

Executing: singleEnd2_shield1 = extractDevice("singlewire" singleEnd2 (trans_va_m2 "va")...

Executing: width = measureParameter(area (dev_ID over signalWidth) 5e-06)

Executing: nameParameter(width "w")

Executing: area = measureParameter(area (dev_ID over signal) 1e-12)

Executing: length = calculateParameter(((area / width) + 4e-08))

Executing: nameParameter(length "l")

Executing: space1 = measureParameter(area (dev_ID over shieldSpace) 2.5e-06)

Executing: space = calculateParameter((space1 - (area - area)))

Executing: nameParameter(space "s")

Executing: Side = measureParameter(figCount (dev_ID enclosing shieldSpace) 0.25)

Executing: side = calculateParameter((Side - (area - area)))

Executing: nameParameter(side "shieldsads")

Executing: saveProperty(dev_ID "blockParasiticsBetween" "layerads overads")

Executing: UNITY = measureParameter(figCount (dev_ID enclosing signal))

Executing: TWO = calculateParameter((UNITY * 2.0))

Executing: nameParameter(TWO "layerads")

Executing: m2_single_shield = measureParameter(figCount (singleEnd2 enclosing shield1) 1.0)

Executing: nameParameter(m2_single_shield "overads")

Executing: saveProperty(singleEnd2 "nlev" "6")

Executing: extractDevice("lvsres" m1_RES_min (m1_model "MINUS" "PLUS") physical (namePre...
           extractDevice("lvsres" m1_RES_min (m1_resistive "MINUS" "PLUS") physical (nam...
           extractDevice("lvsres" m1_RES_min (m1_resistive "MINUS") (m1_model "PLUS") ph...

Executing: extractDevice("lvsres" mt_RES_min (mt_model "MINUS" "PLUS") physical (namePre...
           extractDevice("lvsres" mt_RES_min (mt_resistive "MINUS" "PLUS") physical (nam...
           extractDevice("lvsres" mt_RES_min (mt_resistive "MINUS") (mt_model "PLUS") ph...

Executing: extractDevice("lvsres" m2_RES_min (m2_model "MINUS" "PLUS") physical (namePre...
           extractDevice("lvsres" m2_RES_min (m2_resistive "MINUS" "PLUS") physical (nam...
           extractDevice("lvsres" m2_RES_min (m2_resistive "MINUS") (m2_model "PLUS") ph...

Executing: extractDevice("lvsres" m3_RES_min (m3_model "MINUS" "PLUS") physical (namePre...
           extractDevice("lvsres" m3_RES_min (m3_resistive "MINUS" "PLUS") physical (nam...
           extractDevice("lvsres" m3_RES_min (m3_resistive "MINUS") (m3_model "PLUS") ph...

Executing: extractDevice("lvsres" m4_RES_min (m4_model "MINUS" "PLUS") physical (namePre...
           extractDevice("lvsres" m4_RES_min (m4_resistive "MINUS" "PLUS") physical (nam...
           extractDevice("lvsres" m4_RES_min (m4_resistive "MINUS") (m4_model "PLUS") ph...

Executing: extractDevice("lvsres" am_RES_min (am "MINUS" "PLUS") physical (namePrefix "R...

Executing: pwell_dev_exclude = geomOr(jfet_dev_sized pcap_dev vlnpn_dev DIPI_FILTER PSBD)

Executing: piwell_dev_exclude = geomOr(vlnpn_dev DIPI_FILTER)

Executing: excluded_dev = geomOr(ESD_pdnw_all ESD_ndsx_all vlnpn_dev DI_FILTER DIPI_FILT...

Executing: pdiode_dev = geomOutside(geomAnd(pd_tie nw) excluded_dev)

Executing: extractDevice("diodepnw" pdiode_dev (nw "MINUS") (pd_tie "PLUS") physical fla...

Executing: pdnw_atie = measureParameter(area (pdiode_dev over nw) 1e-12)

Executing: pdnw_ptie = measureParameter(length (pdiode_dev inside nw) 1e-06)

Executing: c_pdnw_area = calculateParameter((pdnw_atie * 8.5e-05))

Executing: c_pdnw_perim = calculateParameter((pdnw_ptie * 2.89e-10))

Executing: nameParameter(pdnw_atie "area")

Executing: nameParameter(pdnw_ptie "perim")

Executing: nameParameter(c_pdnw_area "c")

Executing: nameParameter(c_pdnw_perim "pcp")

Executing: ndiode_dev = geomAnd(geomOutside(geomAndNot(nd_tie geomOr(rn nw ncap_nw mosva...

Executing: extractDevice("diodenx" ndiode_dev (nd_tie "MINUS") (pwell "PLUS") physical f...

Executing: ndx_atie = measureParameter(area (ndiode_dev over pi) 1e-12)

Executing: ndx_ptie = measureParameter(length (ndiode_dev inside pi) 1e-06)

Executing: c_ndx_area = calculateParameter((ndx_atie * 8.5e-05))

Executing: c_ndx_perim = calculateParameter((ndx_ptie * 2.89e-10))

Executing: nameParameter(ndx_atie "area")

Executing: nameParameter(ndx_ptie "perim")

Executing: nameParameter(c_ndx_area "c")

Executing: nameParameter(c_ndx_perim "pcp")

Executing: ndiode_dev = geomOutside(geomAnd(geomAndNot(nd_tie geomOr(rn nw ncap_nw mosva...

Executing: extractDevice("diodenx" ndiode_dev (nd_tie "MINUS") (substrate "PLUS") physic...

Executing: ndx_atie = measureParameter(area (ndiode_dev over substrate) 1e-12)

Executing: ndx_ptie = measureParameter(length (ndiode_dev inside substrate) 1e-06)

Executing: c_ndx_area = calculateParameter((ndx_atie * 8.5e-05))

Executing: c_ndx_perim = calculateParameter((ndx_ptie * 2.89e-10))

Executing: nameParameter(ndx_atie "area")

Executing: nameParameter(ndx_ptie "perim")

Executing: nameParameter(c_ndx_area "c")

Executing: nameParameter(c_ndx_perim "pcp")

Executing: nwdiode_dev1 = geomOutside(geomAnd(geomAndNot(nw excluded_dev) substrate) pi)

Executing: extractDevice("diodenwx" nwdiode_dev1 (nw "MINUS") (substrate "PLUS") physica...
         3 'diodenwx' created in cell 'SL layout Julian_Shifts_And_Mux'.

Executing: nwx_area = measureParameter(area (nwdiode_dev1 over substrate) 1e-12)

Executing: nwx_down = measureParameter(perimeter (nwdiode_dev1 over substrate) 1e-06)

Executing: c_nwx_area = calculateParameter((nwx_area * 8.5e-05))

Executing: c_nwx_perim = calculateParameter((nwx_down * 2.89e-10))

Executing: nameParameter(nwx_area "area")

Executing: nameParameter(nwx_down "perim")

Executing: nameParameter(c_nwx_area "c")

Executing: nameParameter(c_nwx_perim "pcp")

Executing: nwdiode_dev = geomOverlap(geomAnd(geomAndNot(nw excluded_dev) substrate) pi)

Executing: NotOverNtub = geomOr(nfeti_bottom_iso)

Executing: extractDevice("diodenwx" nwdiode_dev (nw "MINUS") (substrate "PLUS") physical...

Executing: nwx_area = measureParameter(area (nwdiode_dev over substrate not_over NotOver...

Executing: nwx_down = measureParameter(perimeter (nwdiode_dev over substrate) 1e-06)

Executing: nwx_not = measureParameter(length (nwdiode_dev inside substrate inside NotOve...

Executing: nameParameter(nwx_area "area")

Executing: nwx_perim = calculateParameter((nwx_down - nwx_not))

Executing: c_nwx_area = calculateParameter((nwx_area * 8.5e-05))

Executing: c_nwx_perim = calculateParameter((nwx_down * 2.89e-10))

Executing: nameParameter(nwx_area "area")

Executing: nameParameter(nwx_perim "perim")

Executing: nameParameter(c_nwx_area "c")

Executing: nameParameter(c_nwx_perim "pcp")

Executing: pwell_dev = geomAndNot(geomAnd(pwell nfeti_bottom_iso) pwell_dev_exclude)

Executing: extractDevice("diodepwpi" pwell_dev (nfeti_bottom_iso "MINUS") (pwell "PLUS")...

Executing: ndx_atie = measureParameter(area (pwell_dev over nfeti_bottom_iso) 1e-12)

Executing: ndx_ptie = measureParameter(length (pwell_dev butting nw) 1e-06)

Executing: nameParameter(ndx_atie "area")

Executing: nameParameter(ndx_ptie "perim")

Executing: piwell_dev = geomAndNot(geomAnd(nfeti_bottom_iso substrate) piwell_dev_exclude)

Executing: extractDevice("diodepisx" piwell_dev (nfeti_bottom_iso "MINUS") (substrate "P...

Executing: ndx_atie = measureParameter(area (piwell_dev over substrate) 1e-12)

Executing: ndx_ptie = measureParameter(length (piwell_dev inside substrate) 1e-06)

Executing: nameParameter(ndx_atie "area")

Executing: nameParameter(ndx_ptie "perim")

Executing: saveDerived((RF ("OUTLINE" "rf") ext_view)

Executing: saveDerived((transmission1 ("OUTLINE" "TRANS") ext_view)

Executing: saveDerived((ind ("OUTLINE" "IND") ext_view)

Executing: saveRecognition(vncap_tnw1 "device")

Executing: saveRecognition(vncap_top1 "device")

Executing: saveRecognition(vncap_tnwt "device")

Executing: saveRecognition(vncap_topt "device")

Executing: saveRecognition(vncap_tnw2 "device")

Executing: saveRecognition(vncap_top2 "device")

Executing: saveRecognition(vncap_tnw3 "device")

Executing: saveRecognition(vncap_top3 "device")

Executing: saveRecognition(vncap_tnw4 "device")

Executing: saveRecognition(vncap_top4 "device")

Executing: saveRecognition(nfeti_dev_psp_b "device")

Executing: saveRecognition(nfeti_dev_psp "device")

Executing: saveRecognition(nfeti_dev_psp_MV "device")

Executing: saveRecognition(nfeti_dev_psp_HV "device")

Executing: saveRecognition(nfeti_dev "device")

Executing: saveRecognition(nfeti_dev_b "device")

Executing: saveRecognition(nfeti_dev_MV "device")

Executing: saveRecognition(nfeti_dev_HV "device")

Executing: saveRecognition(nfeti_dev_TG "device")

Executing: saveRecognition(nfeti_mul_psp "device")

Executing: saveRecognition(nfeti_mul_psp_MV "device")

Executing: saveRecognition(nfeti_mul_psp_HV "device")

Executing: saveRecognition(nfeti_mul "device")

Executing: saveRecognition(nfeti_mul_MV "device")

Executing: saveRecognition(nfeti_mul_HV "device")

Executing: saveRecognition(nfeti_mul_TG "device")

Executing: saveRecognition(nfet6_dev_psp_b "device")

Executing: saveRecognition(nfet6_dev_psp "device")

Executing: saveRecognition(nfet6_dev_psp_MV "device")

Executing: saveRecognition(nfet6_dev_psp_HV "device")

Executing: saveRecognition(nfet6_dev "device")

Executing: saveRecognition(nfet6_dev_b "device")

Executing: saveRecognition(nfet6_dev_MV "device")

Executing: saveRecognition(nfet6_dev_HV "device")

Executing: saveRecognition(nfet6_dev_TG "device")

Executing: saveRecognition(nfet6_mul_psp "device")

Executing: saveRecognition(nfet6_mul_psp_MV "device")

Executing: saveRecognition(nfet6_mul_psp_HV "device")

Executing: saveRecognition(nfet6_mul "device")

Executing: saveRecognition(nfet6_mul_MV "device")

Executing: saveRecognition(nfet6_mul_HV "device")

Executing: saveRecognition(nfet6_mul_TG "device")

Executing: saveRecognition(nfet_dpw_psp "device")

Executing: saveRecognition(nfet_dpw_psp_MV "device")

Executing: saveRecognition(nfet_dpw_psp_HV "device")

Executing: saveRecognition(nfet_dpw_psp_b "device")

Executing: saveRecognition(nfet_dpw "device")

Executing: saveRecognition(nfet_dpw_MV "device")

Executing: saveRecognition(nfet_dpw_HV "device")

Executing: saveRecognition(nfet_dpw_b "device")

Executing: saveRecognition(nfet_dpw_TG "device")

Executing: saveRecognition(nfet_dev_psp "device")

Executing: saveRecognition(nfet_dev_psp_MV "device")

Executing: saveRecognition(nfet_dev_psp_HV "device")

Executing: saveRecognition(nfet_dev_psp_b "device")

Executing: saveRecognition(nfet_dev "device")

Executing: saveRecognition(nfet_dev_MV "device")

Executing: saveRecognition(nfet_dev_HV "device")

Executing: saveRecognition(nfet_dev_b "device")

Executing: saveRecognition(nfet_dev_TG "device")

Executing: saveRecognition(nfet_dev_HVT "device")

Executing: saveRecognition(nfet_dev_HVT_b "device")

Executing: saveRecognition(nfet_mul_psp "device")

Executing: saveRecognition(nfet_mul_psp_MV "device")

Executing: saveRecognition(nfet_mul_psp_HV "device")

Executing: saveRecognition(nfet_mul "device")

Executing: saveRecognition(nfet_mul_MV "device")

Executing: saveRecognition(nfet_mul_HV "device")

Executing: saveRecognition(nfet_mul_TG "device")

Executing: saveRecognition(nfet_mul_HVT "device")

Executing: saveRecognition(nfzv_dev "device")

Executing: saveRecognition(nfzv_dev_HV "device")

Executing: saveRecognition(nfzv_mul "device")

Executing: saveRecognition(nfzv_mul_HV "device")

Executing: saveRecognition(nfRF_dev_psp "device")

Executing: saveRecognition(nfRF_dev_psp_MV "device")

Executing: saveRecognition(nfRF_dev_psp_HV "device")

Executing: saveRecognition(nfRF_dev "device")

Executing: saveRecognition(nfRF_dev_MV "device")

Executing: saveRecognition(nfRF_dev_HV "device")

Executing: saveRecognition(nfRF_mul_psp "device")

Executing: saveRecognition(nfRF_mul_psp_MV "device")

Executing: saveRecognition(nfRF_mul_psp_HV "device")

Executing: saveRecognition(nfRF_mul "device")

Executing: saveRecognition(nfRF_mul_MV "device")

Executing: saveRecognition(nfRF_mul_HV "device")

Executing: saveRecognition(nfRFi_dev_psp "device")

Executing: saveRecognition(nfRFi_dev_psp_MV "device")

Executing: saveRecognition(nfRFi_dev_psp_HV "device")

Executing: saveRecognition(nfRFi_dev "device")

Executing: saveRecognition(nfRFi_dev_MV "device")

Executing: saveRecognition(nfRFi_dev_HV "device")

Executing: saveRecognition(nfRFi_mul_psp "device")

Executing: saveRecognition(nfRFi_mul_psp_MV "device")

Executing: saveRecognition(nfRFi_mul_psp_HV "device")

Executing: saveRecognition(nfRFi_mul "device")

Executing: saveRecognition(nfRFi_mul_MV "device")

Executing: saveRecognition(nfRFi_mul_HV "device")

Executing: saveRecognition(nfRF6_dev_psp "device")

Executing: saveRecognition(nfRF6_dev_psp_MV "device")

Executing: saveRecognition(nfRF6_dev_psp_HV "device")

Executing: saveRecognition(nfRF6_dev "device")

Executing: saveRecognition(nfRF6_dev_MV "device")

Executing: saveRecognition(nfRF6_dev_HV "device")

Executing: saveRecognition(nfRF6_mul_psp "device")

Executing: saveRecognition(nfRF6_mul_psp_MV "device")

Executing: saveRecognition(nfRF6_mul_psp_HV "device")

Executing: saveRecognition(nfRF6_mul "device")

Executing: saveRecognition(nfRF6_mul_MV "device")

Executing: saveRecognition(nfRF6_mul_HV "device")

Executing: saveRecognition(nfRF_dev_TG "device")

Executing: saveRecognition(nfRF_mul_TG "device")

Executing: saveRecognition(nfRFi_dev_TG "device")

Executing: saveRecognition(nfRF6_dev_TG "device")

Executing: saveRecognition(nfRFi_mul_TG "device")

Executing: saveRecognition(nfRF6_mul_TG "device")

Executing: saveRecognition(pfet_dev_psp "device")

Executing: saveRecognition(pfet_dev_psp_MV "device")

Executing: saveRecognition(pfet_dev_psp_HV "device")

Executing: saveRecognition(pfet_dev_psp_b "device")

Executing: saveRecognition(pfet_dev "device")

Executing: saveRecognition(pfet_dev_MV "device")

Executing: saveRecognition(pfet_dev_TG "device")

Executing: saveRecognition(pfet_dev_SCG "device")

Executing: saveRecognition(pfet_dev_HV "device")

Executing: saveRecognition(pfet_dev_b "device")

Executing: saveRecognition(pfet_dev_HVT "device")

Executing: saveRecognition(pfet_dev_HVT_b "device")

Executing: saveRecognition(pfet_mul_psp "device")

Executing: saveRecognition(pfet_mul_psp_MV "device")

Executing: saveRecognition(pfet_mul_psp_HV "device")

Executing: saveRecognition(pfet_mul "device")

Executing: saveRecognition(pfet_mul_MV "device")

Executing: saveRecognition(pfet_mul_HV "device")

Executing: saveRecognition(pfet_mul_HVT "device")

Executing: saveRecognition(pfet_mul_TG "device")

Executing: saveRecognition(pfet_mul_SCG "device")

Executing: saveRecognition(pfRF_dev_psp "device")

Executing: saveRecognition(pfRF_dev_psp_MV "device")

Executing: saveRecognition(pfRF_dev_psp_HV "device")

Executing: saveRecognition(pfRF_dev "device")

Executing: saveRecognition(pfRF_dev_MV "device")

Executing: saveRecognition(pfRF_dev_HV "device")

Executing: saveRecognition(pfRF_mul_psp "device")

Executing: saveRecognition(pfRF_mul_psp_MV "device")

Executing: saveRecognition(pfRF_mul_psp_HV "device")

Executing: saveRecognition(pfRF_mul "device")

Executing: saveRecognition(pfRF_mul_MV "device")

Executing: saveRecognition(pfRF_mul_HV "device")

Executing: saveRecognition(pfRF_dev_TG "device")

Executing: saveRecognition(pfRF_mul_TG "device")

Executing: saveRecognition(pfRF_dev_SCG "device")

Executing: saveRecognition(pfRF_mul_SCG "device")

Executing: saveRecognition(efuse "device")

Executing: saveRecognition(DI_diode "device")

Executing: saveRecognition(DIPI_diode "device")

Executing: saveRecognition(DI_VPNP "device")

Executing: saveRecognition(hvr_dev "device")

Executing: saveRecognition(diffhavar_dev "device")

Executing: saveRecognition(ntie_device "device")

Executing: saveRecognition(ptie_device "device")

Executing: saveRecognition(mosvar_dev "device")

Executing: saveRecognition(mosvar50_dev "device")

Executing: saveRecognition(p5pcdcap50_dev "device")

Executing: saveRecognition(diffmosvar_dev "device")

Executing: saveRecognition(pcap_dev "device")

Executing: saveRecognition(ncap_dev "device")

Executing: saveRecognition(vlnpn_dev "device")

Executing: saveRecognition(ncap33_dev "device")

Executing: saveRecognition(ncap50_dev "device")

Executing: saveRecognition(jfet_dev "device")

Executing: saveRecognition(ESD_pdnw_diode "device")

Executing: saveRecognition(ESD_pdnw_diode_GR_sized "device")

Executing: saveRecognition(ESD_pdnw_diode_GR "device")

Executing: saveRecognition(ESD_ndsx "device")

Executing: saveRecognition(ESD_ndsx_GR_sized "device")

Executing: saveRecognition(ESD_ndsx_GR "device")

Executing: saveRecognition(ESD_ndsx_pi "device")

Executing: saveRecognition(ESD_pdnw_pi "device")

Executing: saveRecognition(esdnsh_dev "device")

Executing: saveRecognition(esdpsh_dev "device")

Executing: saveRecognition(SBD "device")

Executing: saveRecognition(SBDNW "device")

Executing: saveRecognition(PSBD "device")

Executing: saveRecognition(rnw6pc_dev "device")

Executing: saveRecognition(res6pc_dev "device")

Executing: saveRecognition(rnw6rr_dev "device")

Executing: saveRecognition(res6rr_dev "device")

Executing: saveRecognition(rnw6rp_dev "device")

Executing: saveRecognition(res6rp_dev "device")

Executing: saveRecognition(res6n_dev "device")

Executing: saveRecognition(res6p_dev "device")

Executing: saveRecognition(res6n_sblk "device")

Executing: saveRecognition(res6p_sblk "device")

Executing: saveRecognition(k1_dev_bb "device")

Executing: saveRecognition(k1_dev_sx "device")

Executing: saveRecognition(res_serpentine "device")

Executing: saveRecognition(resnw_serpentine "device")

Executing: saveRecognition(am_transmission "device")

Executing: saveRecognition(ind2_mtam_m1 "device")

Executing: saveRecognition(ind2_mtam_bb "device")

Executing: saveRecognition(symind3_amam_m1 "device")

Executing: saveRecognition(symind3_amam_bb "device")

Executing: saveRecognition(symind2_amam_m1 "device")

Executing: saveRecognition(symind2_amam_bb "device")

Executing: saveRecognition(coupledA "device")

Executing: saveRecognition(singleEndA "device")

Executing: saveRecognition(coupledT "device")

Executing: saveRecognition(singleEndT "device")

Executing: saveRecognition(coupled4 "device")

Executing: saveRecognition(singleEnd4 "device")

Executing: saveRecognition(coupled3 "device")

Executing: saveRecognition(singleEnd3 "device")

Executing: saveRecognition(coupled2 "device")

Executing: saveRecognition(singleEnd2 "device")

Executing: saveRecognition(MIMpi "device")

Executing: saveRecognition(MIMnw "device")

Executing: saveRecognition(MIMsx "device")

Executing: saveRecognition(MIMhdpi "device")

Executing: saveRecognition(MIMhdnw "device")

Executing: saveRecognition(MIMhdsx "device")

Executing: saveRecognition(MIMHKpi "device")

Executing: saveRecognition(MIMHKnw "device")

Executing: saveRecognition(MIMHKpc "device")

Executing: saveRecognition(MIMHKsx "device")

Executing: saveRecognition(DUALMIMpi "device")

Executing: saveRecognition(DUALMIMnw "device")

Executing: saveRecognition(DUALMIMsx "device")

Executing: saveRecognition(DUALMIMhdpi "device")

Executing: saveRecognition(DUALMIMhdnw "device")

Executing: saveRecognition(DUALMIMhdsx "device")

Executing: saveRecognition(bondPad_PC "device")

Executing: saveRecognition(bondPad_BB "device")

Executing: saveRecognition(padOverDev "device")

Executing: saveRecognition(sub_dev "device")

Executing: saveRecognition(corrPoint_dev_PD "device")

Executing: saveRecognition(corrPoint_dev_ND "device")

Executing: saveRecognition(corrPoint_dev_PC "device")

Executing: saveRecognition(corrPoint_dev_M1 "device")

Executing: saveRecognition(corrPoint_dev_M2 "device")

Executing: saveRecognition(m1_RES_min "device")

Executing: saveRecognition(m2_RES_min "device")

Executing: saveRecognition(m3_RES_min "device")

Executing: saveRecognition(m4_RES_min "device")

Executing: saveRecognition(mt_RES_min "device")

Executing: saveRecognition(am_RES_min "device")

Executing: saveRecognition(pdiode_dev "device")

Executing: saveRecognition(pwell_dev "device")

Executing: saveRecognition(piwell_dev "device")

Executing: saveRecognition(ndiode_dev "device")

Executing: saveRecognition(nwdiode_dev "device")

Executing: saveRecognition(nwdiode_dev1 "device")

Executing: errorLayer(geomOverlap(bkgnd chipedge) "###### SIX levels of metal M1-M2-M3-M4-MT-AM #####")

Executing: (saveInterconnect (padOverDev_top "AM") (SBDNW_A "RX") (SBDNW_C "RX") (SBD_A ...

Finished running rules. Task processor time in main process:
cpu: 3.80  elap: 4  pf: 0  in: 0  out: 4936  virt: 211M  phys: 1020M

No output post-processing: This is not a DRC run

Finished building the persistent database.
cpu: 0.03  elap: 0  pf: 0  in: 0  out: 6776  virt: 216M  phys: 1020M


*****  aveng terminated normally  *****


Finished /opt/cadence/ASSURA41//tools/assura/bin/aveng

Starting /opt/cadence/ASSURA41//tools/assura/bin/avrpt /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.rsf
@(#)$CDS: avrpt_64 version av4.1:Production:dfII6.1.5-64b:IC6.1.5-64b.500.17 01/29/2014 13:16 (sjfdl030) $
sub-version 4.1_USR4_HF6, integ signature 2014-01-29-1246

run on xunil-01 from /opt/cadence/ASSURA41/tools.lnx86/assura/bin/64bit/avrpt on Sat Mar 15 13:15:23 2014


   Creating Error Database 'SL_LVS'...

   Reading VDB ...
--------------------------------------------------------------------------------
Rule      Message                                    FlatCount     RealCount
--------------------------------------------------------------------------------
(    1)  dataAuditErrors                                     0            0
(    2)  SBLK without OP                                     0            0
(    3)  efuse device without bp                             0            0
(    4)  efuse device touching ns,rx,jd,pi,rn,nw,            0            0
(    5)  HAVAR device missing bb                             0            0
(    6)  HAVAR device touching pi,nw,nr,pr,dg,tg,            0            0
(    7)  SBD device without NS                               0            0
(    8)  NS straddling SBD device                            0            0
(    9)  SBD device touching jd,pi,nw,nr,pr,dg,tg            0            0
(   10)  SBDNW device must be covered by NW                  0            0
(   11)  SBDNW device touching ns,jd,pi,rn,nr,pr,            0            0
(   12)  PSBD device touching ns,jd,rn,nr,pr,dg,t            0            0
(   13)  PSBD device missing bb                              0            0
(   14)  DI Diode device without bp                          0            0
(   15)  DI Diode device touching ns,jd,pi,rn,nr,            0            0
(   16)  DIPI Diode device touching ns,jd,rn,nr,p            0            0
(   17)  DIPI Diode device touching nw,bp                    0            0
(   18)  pcap device touching ns,jd,rn,nr,pr,bb,d            0            0
(   19)  pcap device touching tg                             0            0
(   20)  N+ diffusion in pcap pwell found                    0            0
(   21)  vlnpn device touching ns,jd,rn,nr,pr,bb,            0            0
(   22)  mosvar device touching dg                           0            0
(   23)  P+ diffusion in ncap nwell found                    0            0
(   24)  mosvar or ncap device touching ns,jd,pi,            0            0
(   25)  JFET device not over pi                             0            0
(   26)  JFET device touching ns,jd,rn,nr,pr,bb,d            0            0
(   27)  Dual gate poly device without M1/CA conn            0            0
(   28)  N+ Diffused Resistor device touching ns,            0            0
(   29)  FET device touching ns,jd,rn,bb,rr,rp,pd            0            0
(   30)  Diffused Resistor device touching bb,dg,            0            0
(   31)  Diffused Resistor device touching ns,jd,            0            0
(   32)  Polysilicon Resistor device touching ns,            0            0
(   33)  Polysilicon Resistor device not covered             0            0
(   34)  Polysilicon Resistor device BB touching             0            0
(   35)  Polysilicon Resistor device RR or RP tou            0            0
(   36)  (AM res) not covered by mask AM                     0            0
(   37)  (MT res) not covered by mask MT                     0            0
(   38)  (M4 res) not covered by mask M4                     0            0
(   39)  (M3 res) not covered by mask M3                     0            0
(   40)  (M2 res) not covered by mask M2                     0            0
(   41)  (M1 res) not covered by mask M1                     0            0
(   42)  Overlapping transmission lines - termina            0            0
(   43)  inductor device touching ns,jd,pi,rn,nw,            0            0
(   44)  M3 and M4 inside enhanced Inductor model            0            0
(   45)  M3/M4 inside standard inductor model is             0            0
(   46)  Missing v3 vias on symind coils between             0            0
(   47)  Missing v4 vias on symind coils between             0            0
(   48)  Missing v3 vias on symind coils between             0            0
(   49)  Missing v4 vias on symind coils between             0            0
(   50)  Missing ft vias on symind coils between             0            0
(   51)  Missing ft vias on symind coils between             0            0
(   52)  Missing ft vias on ind coils between mt             0            0
(   53)  AM signal wire exiting symetrical induct            0            0
(   54)  Center tap signal wire exiting symetrica            0            0
(   55)  AM signal wire not exiting transmission             0            0
(   56)  M4 signal wire not exiting transmission             0            0
(   57)  MT signal wire not exiting transmission             0            0
(   58)  M3 signal wire not exiting transmission             0            0
(   59)  M2 signal wire not exiting transmission             0            0
(   60)  No FT via over HT                                   0            0
(   61)  No FT via over QT                                   0            0
(   62)  MODEL concern - K1 resistor not totally             0            0
(   63)  nw_StampErrorConnect                                0            0
(   64)  nw_StampErrorFloat                                  0            0
(   65)  nw_StampErrorMult                                   0            0
(   66)  nw_StampErrorConnect                                0            0
(   67)  nw_StampErrorFloat                                  0            0
(   68)  nw_StampErrorMult                                   0            0
(   69)  ncap_nw_StampErrorConnect                           0            0
(   70)  ncap_nw_StampErrorFloat                             0            0
(   71)  ncap_nw_StampErrorMult                              0            0
(   72)  well_StampErrorConnect                              0            0
(   73)  well_StampErrorFloat                                0            0
(   74)  well_StampErrorMult                                 0            0
(   75)  pi_StampErrorConnect                                0            0
(   76)  pi_StampErrorFloat                                  0            0
(   77)  pi_StampErrorMult                                   0            0
(   78)  pwell_StampErrorConnect                             0            0
(   79)  pwell_StampErrorFloat                               0            0
(   80)  pwell_StampErrorMult                                0            0
(   81)  ns_StampErrorConnect                                0            0
(   82)  ns_StampErrorFloat                                  0            0
(   83)  ns_StampErrorMult                                   0            0
(   84)  substrate_ptap_StampErrorCon                        0            0
(   85)  substrate_StampErrorCon                             0            0
(   86)  sub_sti_StampErrorCon                               0            0
(   87)  sub1K_StampErrorConnect                             0            0
(   88)  sub50_StampErrorConnect                             0            0
(   89)  Mixed voltage net found : 3V3 or 5V diff            0            0
(   90)  ptap connected to POWER net found !                 0            0
(   91)  pwtap connected to POWER net found !                0            0
(   92)  forward biased ptie device found ! [tdpd            0            0
(   93)  forward biased ntie device found ! [tdnd            0            0
(   94)  NW ring not connected to a power net fou            0            0
(   95)  vlnpn collector not connected to nw_ring            0            0
(   96)  ###### SIX levels of metal M1-M2-M3-M4-M            0            0
(   97)  malformed device nfeti_dev                          0            0
(   98)  malformed device nfeti_dev_psp                      0            0
(   99)  malformed device nfeti_dev_b                        0            0
(  100)  malformed device nfeti_dev_psp_b                    0            0
(  101)  malformed device nfet6_dev                          0            0
(  102)  malformed device nfet6_dev_psp                      0            0
(  103)  malformed device nfet6_dev_b                        0            0
(  104)  malformed device nfet6_dev_psp_b                    0            0
(  105)  malformed device nfeti_dev_MV                       0            0
(  106)  malformed device nfeti_dev_psp_MV                   0            0
(  107)  malformed device nfet6_dev_MV                       0            0
(  108)  malformed device nfet6_dev_psp_MV                   0            0
(  109)  malformed device nfeti_dev_HV                       0            0
(  110)  malformed device nfeti_dev_psp_HV                   0            0
(  111)  malformed device nfet6_dev_HV                       0            0
(  112)  malformed device nfet6_dev_psp_HV                   0            0
(  113)  malformed device nfeti_dev_TG                       0            0
(  114)  malformed device nfet6_dev_TG                       0            0
(  115)  malformed device nfet_dpw                           0            0
(  116)  malformed device nfet_dev                           0            0
(  117)  malformed device nfet_dpw_psp                       0            0
(  118)  malformed device nfet_dev_psp                       0            0
(  119)  malformed device nfzv_dev                           0            0
(  120)  malformed device nfzv_dev_HV                        0            0
(  121)  malformed device nfet_dpw_MV                        0            0
(  122)  malformed device nfet_dev_MV                        0            0
(  123)  malformed device nfet_dpw_psp_MV                    0            0
(  124)  malformed device nfet_dev_psp_MV                    0            0
(  125)  malformed device nfet_dpw_HV                        0            0
(  126)  malformed device nfet_dev_HV                        0            0
(  127)  malformed device nfet_dpw_psp_HV                    0            0
(  128)  malformed device nfet_dev_psp_HV                    0            0
(  129)  malformed device nfet_dpw_TG                        0            0
(  130)  malformed device nfet_dev_TG                        0            0
(  131)  malformed device nfet_dev_HVT                       0            0
(  132)  malformed device nfet_dev_HVT_b                     0            0
(  133)  malformed device nfet_dpw_b                         0            0
(  134)  malformed device nfet_dev_b                         0            0
(  135)  malformed device nfet_dpw_psp_b                     0            0
(  136)  malformed device nfet_dev_psp_b                     0            0
(  137)  malformed device pfet_dev                           0            0
(  138)  malformed device pfet_dev_psp                       0            0
(  139)  malformed device pfet_dev_MV                        0            0
(  140)  malformed device pfet_dev_psp_MV                    0            0
(  141)  malformed device pfet_dev_HV                        0            0
(  142)  malformed device pfet_dev_psp_HV                    0            0
(  143)  malformed device pfet_dev_TG                        0            0
(  144)  malformed device pfet_dev_SCG                       0            0
(  145)  malformed device pfet_dev_HVT                       0            0
(  146)  malformed device pfet_dev_HVT_b                     0            0
(  147)  malformed device pfet_dev_b                         0            0
(  148)  malformed device pfet_dev_psp_b                     0            0
(  149)  malformed device nfeti_mul                          0            0
(  150)  malformed device nfeti_mul_psp                      0            0
(  151)  malformed device nfet6_mul                          0            0
(  152)  malformed device nfet6_mul_psp                      0            0
(  153)  malformed device nfeti_mul_MV                       0            0
(  154)  malformed device nfeti_mul_psp_MV                   0            0
(  155)  malformed device nfet6_mul_MV                       0            0
(  156)  malformed device nfet6_mul_psp_MV                   0            0
(  157)  malformed device nfeti_mul_HV                       0            0
(  158)  malformed device nfeti_mul_psp_HV                   0            0
(  159)  malformed device nfet6_mul_HV                       0            0
(  160)  malformed device nfet6_mul_psp_HV                   0            0
(  161)  malformed device nfeti_mul_TG                       0            0
(  162)  malformed device nfet6_mul_TG                       0            0
(  163)  malformed device nfet_mul                           0            0
(  164)  malformed device nfet_mul_psp                       0            0
(  165)  malformed device nfzv_mul                           0            0
(  166)  malformed device nfzv_mul_HV                        0            0
(  167)  malformed device nfet_mul_MV                        0            0
(  168)  malformed device nfet_mul_psp_MV                    0            0
(  169)  malformed device nfet_mul_HV                        0            0
(  170)  malformed device nfet_mul_psp_HV                    0            0
(  171)  malformed device nfet_mul_TG                        0            0
(  172)  malformed device nfet_mul_HVT                       0            0
(  173)  malformed device pfet_mul                           0            0
(  174)  malformed device pfet_mul_psp                       0            0
(  175)  malformed device pfet_mul_MV                        0            0
(  176)  malformed device pfet_mul_psp_MV                    0            0
(  177)  malformed device pfet_mul_HV                        0            0
(  178)  malformed device pfet_mul_psp_HV                    0            0
(  179)  malformed device pfet_mul_TG                        0            0
(  180)  malformed device pfet_mul_SCG                       0            0
(  181)  malformed device pfet_mul_HVT                       0            0
(  182)  malformed device nfRFi_dev                          0            0
(  183)  malformed device nfRFi_dev_psp                      0            0
(  184)  malformed device nfRF6_dev                          0            0
(  185)  malformed device nfRF6_dev_psp                      0            0
(  186)  malformed device nfRFi_dev_MV                       0            0
(  187)  malformed device nfRFi_dev_psp_MV                   0            0
(  188)  malformed device nfRF6_dev_MV                       0            0
(  189)  malformed device nfRF6_dev_psp_MV                   0            0
(  190)  malformed device nfRFi_dev_HV                       0            0
(  191)  malformed device nfRFi_dev_psp_HV                   0            0
(  192)  malformed device nfRF6_dev_HV                       0            0
(  193)  malformed device nfRF6_dev_psp_HV                   0            0
(  194)  malformed device nfRFi_dev_TG                       0            0
(  195)  malformed device nfRF6_dev_TG                       0            0
(  196)  malformed device nfRF_dev                           0            0
(  197)  malformed device nfRF_dev_psp                       0            0
(  198)  malformed device nfRF_dev_MV                        0            0
(  199)  malformed device nfRF_dev_psp_MV                    0            0
(  200)  malformed device nfRF_dev_HV                        0            0
(  201)  malformed device nfRF_dev_psp_HV                    0            0
(  202)  malformed device nfRF_dev_TG                        0            0
(  203)  malformed device pfRF_dev                           0            0
(  204)  malformed device pfRF_dev_psp                       0            0
(  205)  malformed device pfRF_dev_MV                        0            0
(  206)  malformed device pfRF_dev_psp_MV                    0            0
(  207)  malformed device pfRF_dev_HV                        0            0
(  208)  malformed device pfRF_dev_psp_HV                    0            0
(  209)  malformed device pfRF_dev_TG                        0            0
(  210)  malformed device pfRF_dev_SCG                       0            0
(  211)  malformed device nfRFi_mul                          0            0
(  212)  malformed device nfRFi_mul_psp                      0            0
(  213)  malformed device nfRF6_mul                          0            0
(  214)  malformed device nfRF6_mul_psp                      0            0
(  215)  malformed device nfRFi_mul_MV                       0            0
(  216)  malformed device nfRFi_mul_psp_MV                   0            0
(  217)  malformed device nfRF6_mul_MV                       0            0
(  218)  malformed device nfRF6_mul_psp_MV                   0            0
(  219)  malformed device nfRFi_mul_HV                       0            0
(  220)  malformed device nfRFi_mul_psp_HV                   0            0
(  221)  malformed device nfRF6_mul_HV                       0            0
(  222)  malformed device nfRF6_mul_psp_HV                   0            0
(  223)  malformed device nfRFi_mul_TG                       0            0
(  224)  malformed device nfRF6_mul_TG                       0            0
(  225)  malformed device nfRF_mul                           0            0
(  226)  malformed device nfRF_mul_psp                       0            0
(  227)  malformed device nfRF_mul_MV                        0            0
(  228)  malformed device nfRF_mul_psp_MV                    0            0
(  229)  malformed device nfRF_mul_HV                        0            0
(  230)  malformed device nfRF_mul_psp_HV                    0            0
(  231)  malformed device nfRF_mul_TG                        0            0
(  232)  malformed device pfRF_mul                           0            0
(  233)  malformed device pfRF_mul_psp                       0            0
(  234)  malformed device pfRF_mul_MV                        0            0
(  235)  malformed device pfRF_mul_psp_MV                    0            0
(  236)  malformed device pfRF_mul_HV                        0            0
(  237)  malformed device pfRF_mul_psp_HV                    0            0
(  238)  malformed device pfRF_mul_TG                        0            0
(  239)  malformed device pfRF_mul_SCG                       0            0
(  240)  malformed device hvr_dev                            0            0
(  241)  malformed device diffhavar_dev                      0            0
(  242)  malformed device SBD                                0            0
(  243)  malformed device SBDNW                              0            0
(  244)  malformed device PSBD                               0            0
(  245)  malformed device DI_diode                           0            0
(  246)  malformed device DIPI_diode                         0            0
(  247)  malformed device DI_VPNP                            0            0
(  248)  malformed device ncap_dev                           0            0
(  249)  malformed device ncap33_dev                         0            0
(  250)  malformed device ncap50_dev                         0            0
(  251)  malformed device diffmosvar_dev                     0            0
(  252)  malformed device mosvar_dev                         0            0
(  253)  malformed device mosvar50_dev                       0            0
(  254)  malformed device p5pcdcap50_dev                     0            0
(  255)  malformed device vlnpn_dev                          0            0
(  256)  malformed device jfet_dev                           0            0
(  257)  malformed device res_serpentine                     0            0
(  258)  malformed device resnw_serpentine                   0            0
(  259)  malformed device rnw6pc_dev                         0            0
(  260)  malformed device res6pc_dev                         0            0
(  261)  malformed device rnw6rr_dev                         0            0
(  262)  malformed device res6rr_dev                         0            0
(  263)  malformed device rnw6rp_dev                         0            0
(  264)  malformed device res6rp_dev                         0            0
(  265)  malformed device res6n_dev                          0            0
(  266)  malformed device res6p_dev                          0            0
(  267)  malformed device res6n_sblk                         0            0
(  268)  malformed device res6p_sblk                         0            0
(  269)  malformed device k1_dev_bb                          0            0
(  270)  malformed device k1_dev_sx                          0            0
(  271)  malformed device esdnsh_dev                         0            0
(  272)  malformed device esdpsh_dev                         0            0
(  273)  malformed device sub_dev                            0            0
(  274)  malformed device ntie_device                        0            0
(  275)  malformed device ptie_device                        0            0
(  276)  malformed device corrPoint_dev_M2                   0            0
(  277)  malformed device corrPoint_dev_PD                   0            0
(  278)  malformed device corrPoint_dev_ND                   0            0
(  279)  malformed device corrPoint_dev_PC                   0            0
(  280)  malformed device corrPoint_dev_M1                   0            0
(  281)  malformed device ESD_pdnw_diode                     0            0
(  282)  malformed device ESD_pdnw_diode_GR_sized            0            0
(  283)  malformed device ESD_pdnw_diode_GR                  0            0
(  284)  malformed device ESD_ndsx                           0            0
(  285)  malformed device ESD_ndsx_GR_sized                  0            0
(  286)  malformed device ESD_ndsx_GR                        0            0
(  287)  malformed device MIMpi                              0            0
(  288)  malformed device MIMnw                              0            0
(  289)  malformed device MIMsx                              0            0
(  290)  malformed device MIMhdpi                            0            0
(  291)  malformed device MIMhdnw                            0            0
(  292)  malformed device MIMhdsx                            0            0
(  293)  malformed device MIMHKpi                            0            0
(  294)  malformed device MIMHKnw                            0            0
(  295)  malformed device MIMHKpc                            0            0
(  296)  malformed device MIMHKsx                            0            0
(  297)  malformed device DUALMIMpi                          0            0
(  298)  malformed device DUALMIMnw                          0            0
(  299)  malformed device DUALMIMsx                          0            0
(  300)  malformed device DUALMIMhdpi                        0            0
(  301)  malformed device DUALMIMhdnw                        0            0
(  302)  malformed device DUALMIMhdsx                        0            0
(  303)  malformed device vncap_top1                         0            0
(  304)  malformed device vncap_tnw1                         0            0
(  305)  malformed device vncap_topt                         0            0
(  306)  malformed device vncap_tnwt                         0            0
(  307)  malformed device vncap_top2                         0            0
(  308)  malformed device vncap_tnw2                         0            0
(  309)  malformed device vncap_top3                         0            0
(  310)  malformed device vncap_tnw3                         0            0
(  311)  malformed device vncap_top4                         0            0
(  312)  malformed device vncap_tnw4                         0            0
(  313)  malformed device am_transmission                    0            0
(  314)  malformed device ind2_mtam_m1                       0            0
(  315)  malformed device ind2_mtam_bb                       0            0
(  316)  malformed device symind3_amam_bb                    0            0
(  317)  malformed device symind3_amam_m1                    0            0
(  318)  malformed device symind2_amam_bb                    0            0
(  319)  malformed device symind2_amam_m1                    0            0
(  320)  malformed device padOverDev                         0            0
(  321)  malformed device bondPad_PC                         0            0
(  322)  malformed device bondPad_BB                         0            0
(  323)  malformed device efuse                              0            0
(  324)  malformed device coupledA                           0            0
(  325)  malformed device singleEndA                         0            0
(  326)  malformed device coupledT                           0            0
(  327)  malformed device singleEndT                         0            0
(  328)  malformed device coupled4                           0            0
(  329)  malformed device singleEnd4                         0            0
(  330)  malformed device coupled3                           0            0
(  331)  malformed device singleEnd3                         0            0
(  332)  malformed device coupled2                           0            0
(  333)  malformed device singleEnd2                         0            0
(  334)  malformed device pdiode_dev                         0            0
(  335)  malformed device ndiode_dev                         0            0
(  336)  malformed device ndiode_dev                         0            0
(  337)  malformed device nwdiode_dev1                       0            0
(  338)  malformed device nwdiode_dev                        0            0
(  339)  malformed device pwell_dev                          0            0
(  340)  malformed device piwell_dev                         0            0
(  341)  unstable device for piwell_dev_Device_31            0            0
(  343)  unstable device for pwell_dev_Device_318            0            0
(  345)  unstable device for nwdiode_dev_Device_3            0            0
(  347)  unstable device for nwdiode_dev1_Device_            0            0
(  349)  unstable device for ndiode_dev_Device_31            0            0
(  351)  unstable device for ndiode_dev_Device_31            0            0
(  353)  unstable device for pdiode_dev_Device_31            0            0
(  355)  unstable device for am_RES_min_Device_31            0            0
(  357)  unstable device for m4_RES_min_Device_31            0            0
(  359)  unstable device for m4_RES_min_Device_30            0            0
(  361)  unstable device for m3_RES_min_Device_30            0            0
(  363)  unstable device for m3_RES_min_Device_30            0            0
(  365)  unstable device for m2_RES_min_Device_30            0            0
(  367)  unstable device for m2_RES_min_Device_30            0            0
(  369)  unstable device for mt_RES_min_Device_30            0            0
(  371)  unstable device for mt_RES_min_Device_30            0            0
(  373)  unstable device for m1_RES_min_Device_29            0            0
(  375)  unstable device for m1_RES_min_Device_29            0            0
(  377)  unstable device for singleEnd2_shield1              0            0
(  379)  unstable device for coupled2_shield1                0            0
(  381)  unstable device for singleEnd3_shield2              0            0
(  383)  unstable device for singleEnd3_shield1              0            0
(  385)  unstable device for coupled3_shield2                0            0
(  387)  unstable device for coupled3_shield1                0            0
(  389)  unstable device for singleEnd4_shield3              0            0
(  391)  unstable device for singleEnd4_shield2              0            0
(  393)  unstable device for singleEnd4_shield1              0            0
(  395)  unstable device for coupled4_shield3                0            0
(  397)  unstable device for coupled4_shield2                0            0
(  399)  unstable device for coupled4_shield1                0            0
(  401)  unstable device for singleEndT_shield4              0            0
(  403)  unstable device for singleEndT_shield3              0            0
(  405)  unstable device for singleEndT_shield2              0            0
(  407)  unstable device for singleEndT_shield1              0            0
(  409)  unstable device for coupledT_shield4                0            0
(  411)  unstable device for coupledT_shield3                0            0
(  413)  unstable device for coupledT_shield2                0            0
(  415)  unstable device for coupledT_shield1                0            0
(  417)  unstable device for singleEndA_shieldT              0            0
(  419)  unstable device for singleEndA_shield4              0            0
(  421)  unstable device for singleEndA_shield3              0            0
(  423)  unstable device for singleEndA_shield2              0            0
(  425)  unstable device for singleEndA_shield1              0            0
(  427)  unstable device for coupledA_shieldT                0            0
(  429)  unstable device for coupledA_shield4                0            0
(  431)  unstable device for coupledA_shield3                0            0
(  433)  unstable device for coupledA_shield2                0            0
(  435)  unstable device for coupledA_shield1                0            0
(  437)  unstable device for efuse_Device_266                0            0
(  439)  unstable device for bondPad_BB_Device_26            0            0
(  441)  unstable device for bondPad_PC_Device_26            0            0
(  443)  unstable device for padOverDev_Device_26            0            0
(  445)  unstable device for symind2_amam_m1_Devi            0            0
(  447)  unstable device for symind2_amam_bb_Devi            0            0
(  449)  unstable device for symind3_amam_m1_Devi            0            0
(  451)  unstable device for symind3_amam_m1_Devi            0            0
(  453)  unstable device for symind3_amam_bb_Devi            0            0
(  455)  unstable device for symind3_amam_bb_Devi            0            0
(  457)  unstable device for ind2_mtam_bb_Device_            0            0
(  459)  unstable device for ind2_mtam_m1_Device_            0            0
(  461)  unstable device for am_transmission_Devi            0            0
(  463)  unstable device for vncap_tnw4_Device_25            0            0
(  465)  unstable device for vncap_top4_pwell                0            0
(  467)  unstable device for vncap_top4_subs                 0            0
(  469)  unstable device for vncap_tnw3_Device_25            0            0
(  471)  unstable device for vncap_top3_pwell                0            0
(  473)  unstable device for vncap_top3_subs                 0            0
(  475)  unstable device for vncap_tnw2_Device_24            0            0
(  477)  unstable device for vncap_top2_pwell                0            0
(  479)  unstable device for vncap_top2_subs                 0            0
(  481)  unstable device for vncap_tnwt_Device_24            0            0
(  483)  unstable device for vncap_topt_pwell                0            0
(  485)  unstable device for vncap_topt_subs                 0            0
(  487)  unstable device for vncap_tnw1_Device_24            0            0
(  489)  unstable device for vncap_top1_pwell                0            0
(  491)  unstable device for vncap_top1_subs                 0            0
(  493)  unstable device for DUALMIMhdsx_Device_2            0            0
(  495)  unstable device for DUALMIMhdnw_Device_2            0            0
(  497)  unstable device for DUALMIMhdpi_Device_2            0            0
(  499)  unstable device for DUALMIMsx_Device_235            0            0
(  501)  unstable device for DUALMIMnw_Device_234            0            0
(  503)  unstable device for DUALMIMpi_Device_233            0            0
(  505)  unstable device for MIMHKsx_Device_232              0            0
(  507)  unstable device for MIMHKpc_Device_231              0            0
(  509)  unstable device for MIMHKnw_Device_230              0            0
(  511)  unstable device for MIMHKpi_Device_229              0            0
(  513)  unstable device for MIMhdsx_Device_228              0            0
(  515)  unstable device for MIMhdnw_Device_227              0            0
(  517)  unstable device for MIMhdpi_Device_226              0            0
(  519)  unstable device for MIMsx_Device_225                0            0
(  521)  unstable device for MIMnw_Device_224                0            0
(  523)  unstable device for MIMpi_Device_223                0            0
(  525)  unstable device for ESD_ndsx_pi_Device_2            0            0
(  527)  unstable device for ESD_pdnw_pi_Device_2            0            0
(  529)  unstable device for ESD_ndsx_GR_Device_2            0            0
(  531)  unstable device for ESD_ndsx_GR_sized_De            0            0
(  533)  unstable device for ESD_ndsx_Device_218             0            0
(  535)  unstable device for ESD_pdnw_diode_GR_De            0            0
(  537)  unstable device for ESD_pdnw_diode_GR_si            0            0
(  539)  unstable device for ESD_pdnw_diode_Devic            0            0
(  541)  unstable device for corrPoint_dev_M1_Dev            0            0
(  543)  unstable device for corrPoint_dev_PC_Dev            0            0
(  545)  unstable device for corrPoint_dev_ND_Dev            0            0
(  547)  unstable device for corrPoint_dev_PD_Dev            0            0
(  549)  unstable device for corrPoint_dev_M2_Dev            0            0
(  551)  unstable device for ptie_device_Device_2            0            0
(  553)  unstable device for ntie_device_Device_2            0            0
(  555)  unstable device for ntie_device_Device_2            0            0
(  557)  unstable device for sub_dev_Device_206              0            0
(  559)  unstable device for esdpsh_dev_Device_20            0            0
(  561)  unstable device for esdnsh_dev_Device_20            0            0
(  563)  unstable device for esdnsh_dev_Device_20            0            0
(  565)  unstable device for k1_dev_sx_pwell                 0            0
(  567)  unstable device for k1_dev_sx_subs                  0            0
(  569)  unstable device for k1_dev_bb_Device_200            0            0
(  571)  unstable device for res6p_sblk_Device_19            0            0
(  573)  unstable device for res6n_sblk_pwell                0            0
(  575)  unstable device for res6n_sblk_subs                 0            0
(  577)  unstable device for res6p_dev_Device_196            0            0
(  579)  unstable device for res6n_dev_pwell                 0            0
(  581)  unstable device for res6n_dev_subs                  0            0
(  583)  unstable device for res6rp_dev_pwell                0            0
(  585)  unstable device for res6rp_dev_subs                 0            0
(  587)  unstable device for rnw6rp_dev_Device_19            0            0
(  589)  unstable device for res6rr_dev_pwell                0            0
(  591)  unstable device for res6rr_dev_subs                 0            0
(  593)  unstable device for rnw6rr_dev_Device_18            0            0
(  595)  unstable device for res6pc_dev_pwell                0            0
(  597)  unstable device for res6pc_dev_subs                 0            0
(  599)  unstable device for rnw6pc_dev_Device_18            0            0
(  601)  unstable device for resnw_serpentine_Dev            0            0
(  603)  unstable device for res_serpentine_Devic            0            0
(  605)  unstable device for jfet_dev_Device_182             0            0
(  607)  unstable device for vlnpn_dev_Device_181            0            0
(  609)  unstable device for pcap_dev_Device_180             0            0
(  611)  unstable device for p5pcdcap50_dev_Devic            0            0
(  613)  unstable device for mosvar50_dev_Device_            0            0
(  615)  unstable device for mosvar_dev_Device_17            0            0
(  617)  unstable device for diffmosvar_dev_Devic            0            0
(  619)  unstable device for ncap50_dev_Device_17            0            0
(  621)  unstable device for ncap33_dev_Device_17            0            0
(  623)  unstable device for ncap_dev_Device_173             0            0
(  625)  unstable device for DI_VPNP_Device_172              0            0
(  627)  unstable device for DIPI_diode_Device_17            0            0
(  629)  unstable device for DI_diode_Device_170             0            0
(  631)  unstable device for PSBD_Device_169                 0            0
(  633)  unstable device for SBDNW_Device_168                0            0
(  635)  unstable device for SBD_Device_167                  0            0
(  637)  unstable device for diffhavar_dev_Device            0            0
(  639)  unstable device for hvr_dev_Device_165              0            0
(  641)  unstable device for pfRF_mul_SCG_Device_            0            0
(  643)  unstable device for pfRF_mul_TG_Device_1            0            0
(  645)  unstable device for pfRF_mul_psp_HV_Devi            0            0
(  647)  unstable device for pfRF_mul_HV_Device_1            0            0
(  649)  unstable device for pfRF_mul_psp_MV_Devi            0            0
(  651)  unstable device for pfRF_mul_MV_Device_1            0            0
(  653)  unstable device for pfRF_mul_psp_Device_            0            0
(  655)  unstable device for pfRF_mul_Device_157             0            0
(  657)  unstable device for nfRF_mul_TG_Device_1            0            0
(  659)  unstable device for nfRF_mul_TG_Device_1            0            0
(  661)  unstable device for nfRF_mul_psp_HV_Devi            0            0
(  663)  unstable device for nfRF_mul_psp_HV_Devi            0            0
(  665)  unstable device for nfRF_mul_HV_Device_1            0            0
(  667)  unstable device for nfRF_mul_HV_Device_1            0            0
(  669)  unstable device for nfRF_mul_psp_MV_Devi            0            0
(  671)  unstable device for nfRF_mul_psp_MV_Devi            0            0
(  673)  unstable device for nfRF_mul_MV_Device_1            0            0
(  675)  unstable device for nfRF_mul_MV_Device_1            0            0
(  677)  unstable device for nfRF_mul_psp_Device_            0            0
(  679)  unstable device for nfRF_mul_psp_Device_            0            0
(  681)  unstable device for nfRF_mul_Device_143             0            0
(  683)  unstable device for nfRF_mul_Device_144             0            0
(  685)  unstable device for nfRF6_mul_TG_Device_            0            0
(  687)  unstable device for nfRFi_mul_TG_Device_            0            0
(  689)  unstable device for nfRF6_mul_psp_HV_Dev            0            0
(  691)  unstable device for nfRF6_mul_HV_Device_            0            0
(  693)  unstable device for nfRFi_mul_psp_HV_Dev            0            0
(  695)  unstable device for nfRFi_mul_HV_Device_            0            0
(  697)  unstable device for nfRF6_mul_psp_MV_Dev            0            0
(  699)  unstable device for nfRF6_mul_MV_Device_            0            0
(  701)  unstable device for nfRFi_mul_psp_MV_Dev            0            0
(  703)  unstable device for nfRFi_mul_MV_Device_            0            0
(  705)  unstable device for nfRF6_mul_psp_Device            0            0
(  707)  unstable device for nfRF6_mul_Device_131            0            0
(  709)  unstable device for nfRFi_mul_psp_Device            0            0
(  711)  unstable device for nfRFi_mul_Device_129            0            0
(  713)  unstable device for pfRF_dev_SCG_Device_            0            0
(  715)  unstable device for pfRF_dev_TG_Device_1            0            0
(  717)  unstable device for pfRF_dev_psp_HV_Devi            0            0
(  719)  unstable device for pfRF_dev_HV_Device_1            0            0
(  721)  unstable device for pfRF_dev_psp_MV_Devi            0            0
(  723)  unstable device for pfRF_dev_MV_Device_1            0            0
(  725)  unstable device for pfRF_dev_psp_Device_            0            0
(  727)  unstable device for pfRF_dev_Device_121             0            0
(  729)  unstable device for nfRF_dev_TG_Device_1            0            0
(  731)  unstable device for nfRF_dev_TG_Device_1            0            0
(  733)  unstable device for nfRF_dev_psp_HV_Devi            0            0
(  735)  unstable device for nfRF_dev_psp_HV_Devi            0            0
(  737)  unstable device for nfRF_dev_HV_Device_1            0            0
(  739)  unstable device for nfRF_dev_HV_Device_1            0            0
(  741)  unstable device for nfRF_dev_psp_MV_Devi            0            0
(  743)  unstable device for nfRF_dev_psp_MV_Devi            0            0
(  745)  unstable device for nfRF_dev_MV_Device_1            0            0
(  747)  unstable device for nfRF_dev_MV_Device_1            0            0
(  749)  unstable device for nfRF_dev_psp_Device_            0            0
(  751)  unstable device for nfRF_dev_psp_Device_            0            0
(  753)  unstable device for nfRF_dev_Device_107             0            0
(  755)  unstable device for nfRF_dev_Device_108             0            0
(  757)  unstable device for nfRF6_dev_TG_Device_            0            0
(  759)  unstable device for nfRFi_dev_TG_Device_            0            0
(  761)  unstable device for nfRF6_dev_psp_HV_Dev            0            0
(  763)  unstable device for nfRF6_dev_HV_Device_            0            0
(  765)  unstable device for nfRFi_dev_psp_HV_Dev            0            0
(  767)  unstable device for nfRFi_dev_HV_Device_            0            0
(  769)  unstable device for nfRF6_dev_psp_MV_Dev            0            0
(  771)  unstable device for nfRF6_dev_MV_Device_            0            0
(  773)  unstable device for nfRFi_dev_psp_MV_Dev            0            0
(  775)  unstable device for nfRFi_dev_MV_Device_            0            0
(  777)  unstable device for nfRF6_dev_psp_Device            0            0
(  779)  unstable device for nfRF6_dev_Device_95             0            0
(  781)  unstable device for nfRFi_dev_psp_Device            0            0
(  783)  unstable device for nfRFi_dev_Device_93             0            0
(  785)  unstable device for pfet_mul_HVT_Device_            0            0
(  787)  unstable device for pfet_mul_SCG_Device_            0            0
(  789)  unstable device for pfet_mul_TG_Device_9            0            0
(  791)  unstable device for pfet_mul_psp_HV_Devi            0            0
(  793)  unstable device for pfet_mul_HV_Device_8            0            0
(  795)  unstable device for pfet_mul_psp_MV_Devi            0            0
(  797)  unstable device for pfet_mul_MV_Device_8            0            0
(  799)  unstable device for pfet_mul_psp_Device_            0            0
(  801)  unstable device for pfet_mul_Device_84              0            0
(  803)  unstable device for nfet_mul_HVT_Device_            0            0
(  805)  unstable device for nfet_mul_TG_Device_8            0            0
(  807)  unstable device for nfet_mul_TG_Device_8            0            0
(  809)  unstable device for nfet_mul_psp_HV_Devi            0            0
(  811)  unstable device for nfet_mul_psp_HV_Devi            0            0
(  813)  unstable device for nfet_mul_HV_Device_7            0            0
(  815)  unstable device for nfet_mul_HV_Device_7            0            0
(  817)  unstable device for nfet_mul_psp_MV_Devi            0            0
(  819)  unstable device for nfet_mul_psp_MV_Devi            0            0
(  821)  unstable device for nfet_mul_MV_Device_7            0            0
(  823)  unstable device for nfet_mul_MV_Device_7            0            0
(  825)  unstable device for nfzv_mul_HV_Device_7            0            0
(  827)  unstable device for nfzv_mul_Device_71              0            0
(  829)  unstable device for nfet_mul_psp_Device_            0            0
(  831)  unstable device for nfet_mul_psp_Device_            0            0
(  833)  unstable device for nfet_mul_Device_67              0            0
(  835)  unstable device for nfet_mul_Device_68              0            0
(  837)  unstable device for nfet6_mul_TG_Device_            0            0
(  839)  unstable device for nfeti_mul_TG_Device_            0            0
(  841)  unstable device for nfet6_mul_psp_HV_Dev            0            0
(  843)  unstable device for nfet6_mul_HV_Device_            0            0
(  845)  unstable device for nfeti_mul_psp_HV_Dev            0            0
(  847)  unstable device for nfeti_mul_HV_Device_            0            0
(  849)  unstable device for nfet6_mul_psp_MV_Dev            0            0
(  851)  unstable device for nfet6_mul_MV_Device_            0            0
(  853)  unstable device for nfeti_mul_psp_MV_Dev            0            0
(  855)  unstable device for nfeti_mul_MV_Device_            0            0
(  857)  unstable device for nfet6_mul_psp_Device            0            0
(  859)  unstable device for nfet6_mul_Device_55             0            0
(  861)  unstable device for nfeti_mul_psp_Device            0            0
(  863)  unstable device for nfeti_mul_Device_53             0            0
(  865)  unstable device for pfet_dev_psp_b_Devic            0            0
(  867)  unstable device for pfet_dev_b_Device_51            0            0
(  869)  unstable device for pfet_dev_HVT_b_Devic            0            0
(  871)  unstable device for pfet_dev_HVT_Device_            0            0
(  873)  unstable device for pfet_dev_SCG_Device_            0            0
(  875)  unstable device for pfet_dev_TG_Device_4            0            0
(  877)  unstable device for pfet_dev_psp_HV_Devi            0            0
(  879)  unstable device for pfet_dev_HV_Device_4            0            0
(  881)  unstable device for pfet_dev_psp_MV_Devi            0            0
(  883)  unstable device for pfet_dev_MV_Device_4            0            0
(  885)  unstable device for pfet_dev_psp_Device_            0            0
(  887)  unstable device for pfet_dev_Device_41              0            0
(  889)  unstable device for nfet_dev_psp_b_Devic            0            0
(  891)  unstable device for nfet_dpw_psp_b_Devic            0            0
(  893)  unstable device for nfet_dev_b_Device_38            0            0
(  895)  unstable device for nfet_dpw_b_Device_37            0            0
(  897)  unstable device for nfet_dev_HVT_b_Devic            0            0
(  899)  unstable device for nfet_dev_HVT_Device_            0            0
(  901)  unstable device for nfet_dev_TG_Device_3            0            0
(  903)  unstable device for nfet_dpw_TG_Device_3            0            0
(  905)  unstable device for nfet_dev_psp_HV_Devi            0            0
(  907)  unstable device for nfet_dpw_psp_HV_Devi            0            0
(  909)  unstable device for nfet_dev_HV_Device_3            0            0
(  911)  unstable device for nfet_dpw_HV_Device_2            0            0
(  913)  unstable device for nfet_dev_psp_MV_Devi            0            0
(  915)  unstable device for nfet_dpw_psp_MV_Devi            0            0
(  917)  unstable device for nfet_dev_MV_Device_2            0            0
(  919)  unstable device for nfet_dpw_MV_Device_2            0            0
(  921)  unstable device for nfzv_dev_HV_Device_2            0            0
(  923)  unstable device for nfzv_dev_Device_23              0            0
(  925)  unstable device for nfet_dev_psp_Device_            0            0
(  927)  unstable device for nfet_dpw_psp_Device_            0            0
(  929)  unstable device for nfet_dev_Device_20              0            0
(  931)  unstable device for nfet_dpw_Device_19              0            0
(  933)  unstable device for nfet6_dev_TG_Device_            0            0
(  935)  unstable device for nfeti_dev_TG_Device_            0            0
(  937)  unstable device for nfet6_dev_psp_HV_Dev            0            0
(  939)  unstable device for nfet6_dev_HV_Device_            0            0
(  941)  unstable device for nfeti_dev_psp_HV_Dev            0            0
(  943)  unstable device for nfeti_dev_HV_Device_            0            0
(  945)  unstable device for nfet6_dev_psp_MV_Dev            0            0
(  947)  unstable device for nfet6_dev_MV_Device_            0            0
(  949)  unstable device for nfeti_dev_psp_MV_Dev            0            0
(  951)  unstable device for nfeti_dev_MV_Device_            0            0
(  953)  unstable device for nfet6_dev_psp_b_Devi            0            0
(  955)  unstable device for nfet6_dev_b_Device_7            0            0
(  957)  unstable device for nfet6_dev_psp_Device            0            0
(  959)  unstable device for nfet6_dev_Device_5              0            0
(  961)  unstable device for nfeti_dev_psp_b_Devi            0            0
(  963)  unstable device for nfeti_dev_b_Device_3            0            0
(  965)  unstable device for nfeti_dev_psp_Device            0            0
(  967)  unstable device for nfeti_dev_Device_1              0            0
--------------------------------------------------------------------------------
Total  errors:                                               0            0
--------------------------------------------------------------------------------

   Finished creating Error Database ...

   Writing Report into /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.err ...

avrpt cpu sec:    0.34  elapsed:     2  virtual:    93M

Finished /opt/cadence/ASSURA41//tools/assura/bin/avrpt

Starting /opt/cadence/ASSURA41//tools/assura/bin/avcallproc /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.rsf -exec1 -LVS -cdslib /home/DREXEL/jvk27/ECEC472/IBM/cds.lib -libdefs /home/DREXEL/jvk27/ECEC472/IBM/lib.defs

Finished /opt/cadence/ASSURA41//tools/assura/bin/avcallproc

Starting /opt/cadence/ASSURA41//tools/assura/bin/avnx /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.rsf -exec1 -LVS -cdslib /home/DREXEL/jvk27/ECEC472/IBM/cds.lib -libdefs /home/DREXEL/jvk27/ECEC472/IBM/lib.defs
Virtuoso Framework License (111) was checked out successfully. Total checkout time was 0.10s.
*WARNING* lib.defs files and the -libdefs option are no longer supported. The file '/home/DREXEL/jvk27/ECEC472/IBM/lib.defs' will be ignored. The cds.lib file '/home/DREXEL/jvk27/ECEC472/IBM/cds.lib' takes precedence.
Checking out license for Assura_LVS
*WARNING* lib.defs files and the -libdefs option are no longer supported. The file '/home/DREXEL/jvk27/ECEC472/IBM/lib.defs' will be ignored. The cds.lib file '/home/DREXEL/jvk27/ECEC472/IBM/cds.lib' takes precedence.
@(#)$CDS: avnx_64 version av4.1:Production:dfII6.1.5-64b:IC6.1.5-64b.500.17 01/29/2014 13:16 (sjfdl030) $
sub-version 4.1_USR4_HF6, integ signature 2014-01-29-1246

run on xunil-01 from /opt/cadence/ASSURA41/tools.lnx86/assura/bin/64bit/avnx on Sat Mar 15 13:15:26 2014

avnx started...
cpu: 0.74  elap: 1  pf: 0  in: 0  out: 24  virt: 629M  phys: 1223M

Run time =  2.00 seconds
CPU time =  0.81 seconds

                  End of Summary Report

************************************************************************
cpu: 0.03  elap: 1  pf: 0  in: 0  out: 13688  virt: 557M  phys: 1223M
***** avnx terminated normally ***** 


Finished /opt/cadence/ASSURA41//tools/assura/bin/avnx

Starting /opt/cadence/ASSURA41//tools/assura/bin/nvn /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.rsf -postExtract -exec1 -cdslib /home/DREXEL/jvk27/ECEC472/IBM/cds.lib -libdefs /home/DREXEL/jvk27/ECEC472/IBM/lib.defs
Checking out license for Assura_LVS
@(#)$CDS: nvn_64 version av4.1:Production:dfII6.1.5-64b:IC6.1.5-64b.500.17 01/29/2014 13:17 (sjfdl030) $
sub-version 4.1_USR4_HF6, integ signature 2014-01-29-1246
run on xunil-01 at Sat Mar 15 13:15:28 2014
Reading schematic network
Reading layout network
 inputting network ./LVS/SL_LVS.ldb
Preprocessing schematic network phase 1
*WARNING* deleteCellPin - Unable to find cell 'nfet50tw'
*WARNING* deleteCellPin - Unable to find cell 'nfet50tw'
*WARNING* deleteCellPin - Unable to find cell 'nfet33tw'
*WARNING* deleteCellPin - Unable to find cell 'nfet33tw'
*WARNING* deleteCellPin - Unable to find cell 'nfettw'
*WARNING* deleteCellPin - Unable to find cell 'nfettw'
Preprocessing layout network phase 1
Preprocessing schematic network phase 2
Preprocessing layout network phase 2
Comparing BUFFER_J schematic cmrf7sf_digital_layout vs BUFFER_J layout cmrf7sf_digital_layout
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 0 gcon 1 par 1 m 1 wt 3.3e-06 l 1.8e-07 nf 2)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 0 gcon 1 par 1 m 1 wt 4.95e-06 l 1.8e-07 nf 3)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 0 gcon 1 par 1 m 1 wt 6.6e-06 l 1.8e-07 nf 4)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 0 gcon 1 par 1 m 1 wt 3.82e-06 l 1.8e-07 nf 2)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 0 gcon 1 par 1 m 1 wt 5.73e-06 l 1.8e-07 nf 3)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 0 gcon 1 par 1 m 1 wt 7.64e-06 l 1.8e-07 nf 4)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 4 gcon 1 par 1 m 1 wt 3.30628e-06 l 1.81231e-07 nf 2)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 6 gcon 1 par 1 m 1 wt 4.95942e-06 l 1.81231e-07 nf 3)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 8 gcon 1 par 1 m 1 wt 6.61256e-06 l 1.81231e-07 nf 4)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 4 gcon 1 par 1 m 1 wt 3.82628e-06 l 1.81064e-07 nf 2)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 6 gcon 1 par 1 m 1 wt 5.73942e-06 l 1.81064e-07 nf 3)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 8 gcon 1 par 1 m 1 wt 7.65256e-06 l 1.81064e-07 nf 4)
Comparing BUFFER_J schematic cmrf7sf_digital_layout vs BUFFER_J_VAR1 layout cmrf7sf_digital_layout
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 0 gcon 1 par 1 m 1 wt 3.3e-06 l 1.8e-07 nf 2)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 0 gcon 1 par 1 m 1 wt 4.95e-06 l 1.8e-07 nf 3)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 0 gcon 1 par 1 m 1 wt 6.6e-06 l 1.8e-07 nf 4)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 0 gcon 1 par 1 m 1 wt 3.82e-06 l 1.8e-07 nf 2)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 0 gcon 1 par 1 m 1 wt 5.73e-06 l 1.8e-07 nf 3)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 0 gcon 1 par 1 m 1 wt 7.64e-06 l 1.8e-07 nf 4)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 4 gcon 1 par 1 m 1 wt 3.30628e-06 l 1.81231e-07 nf 2)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 6 gcon 1 par 1 m 1 wt 4.95942e-06 l 1.81231e-07 nf 3)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 8 gcon 1 par 1 m 1 wt 6.61256e-06 l 1.81231e-07 nf 4)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 4 gcon 1 par 1 m 1 wt 3.82628e-06 l 1.81064e-07 nf 2)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 6 gcon 1 par 1 m 1 wt 5.73942e-06 l 1.81064e-07 nf 3)
parFETcomb Resultant: (nil psp 0 rf 0 bentgate 8 gcon 1 par 1 m 1 wt 7.65256e-06 l 1.81064e-07 nf 4)
Top cell  SL schematic Julian_Shifts_And_Mux vs SL layout Julian_Shifts_And_Mux
Schematic and Layout Match
cpu=0.00m  wall=0.02m  mem=44.83mb

Finished /opt/cadence/ASSURA41//tools/assura/bin/nvn

Starting /opt/cadence/ASSURA41//tools/assura/bin/vldbToRpa SL_LVS.snn SL_LVS.tre SL_LVS.cel

Finished /opt/cadence/ASSURA41//tools/assura/bin/vldbToRpa

Starting /opt/cadence/ASSURA41//tools/assura/bin/vldbToRpa SL_LVS.lnn SL_LVS.tre2 SL_LVS.cel2

Finished /opt/cadence/ASSURA41//tools/assura/bin/vldbToRpa

Starting /opt/cadence/ASSURA41//tools/assura/bin/ercChk /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.rsf
Virtuoso Framework License (111) was checked out successfully. Total checkout time was 0.10s.
*WARNING* lib.defs files and the -libdefs option are no longer supported. The file '/home/DREXEL/jvk27/ECEC472/IBM/lib.defs' will be ignored. The cds.lib file '/home/DREXEL/jvk27/ECEC472/IBM/cds.lib' takes precedence.
Checking out license for Assura_LVS

*************** ASSURA ERC PATH CHECK *******************

runName("SL_LVS")
;avParameters(  ?set ( "NO_SUBC_IN_GRLOGIC" "resimulate_extracted" )  )
workingDirectory("./LVS")
rootCell("SL layout Julian_Shifts_And_Mux" lay)
bindingFile("/home/DREXEL/yt74/ic615_work/IBM/assura/LVS/bind.vldb")
parameterModifiedDevice("rr_serpentinex" ("mSwitch" "_m" "0"))
parameterModifiedDevice("rr_serpentine" ("mSwitch" "_m" "0"))
parameterModifiedDevice("sblkpdresx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("sblkpdres" ("mSwitch" "_m" "0"))
parameterModifiedDevice("sblkndresx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("sblkndres" ("mSwitch" "_m" "0"))
parameterModifiedDevice("esdndpi" ("mSwitch" "_m" "0"))
parameterModifiedDevice("esdndsx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("esdpnpi" ("mSwitch" "_m" "0"))
parameterModifiedDevice("esdvpnpnw" ("mSwitch" "_m" "0"))
parameterModifiedDevice("havarx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("havar" ("mSwitch" "_m" "0"))
parameterModifiedDevice("diffhavarx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("diffhavar" ("mSwitch" "_m" "0"))
parameterModifiedDevice("divpnpx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("divpnp" ("mSwitch" "_m" "0"))
parameterModifiedDevice("dindpwx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("dindpw" ("mSwitch" "_m" "0"))
parameterModifiedDevice("dipdnwx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("dipdnw" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pcap" ("mSwitch" "_m" "0"))
parameterModifiedDevice("diffmosvarx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("diffmosvar" ("mSwitch" "_m" "0"))
parameterModifiedDevice("mosvar50x" ("mSwitch" "_m" "0"))
parameterModifiedDevice("mosvar50" ("mSwitch" "_m" "0"))
parameterModifiedDevice("mosvarx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("mosvar" ("mSwitch" "_m" "0"))
parameterModifiedDevice("oppdresxx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("oppdresx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("oppdres" ("mSwitch" "_m" "0"))
parameterModifiedDevice("opndresx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("opndres" ("mSwitch" "_m" "0"))
parameterModifiedDevice("k1resx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("k1res" ("mSwitch" "_m" "0"))
parameterModifiedDevice("psbd" ("mSwitch" "_m" "0"))
parameterModifiedDevice("sbdnwx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("sbdnw" ("mSwitch" "_m" "0"))
parameterModifiedDevice("sbdx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("sbd" ("mSwitch" "_m" "0"))
parameterModifiedDevice("p5pcdcap50x" ("mSwitch" "_m" "0"))
parameterModifiedDevice("p5pcdcap50" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pcdcapx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pcdcap33x" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pcdcap50x" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pcdcap50" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pcdcap33" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pcdcap" ("mSwitch" "_m" "0"))
parameterModifiedDevice("singlewire" ("mSwitch" "_m" "0"))
parameterModifiedDevice("inds" ("mSwitch" "_m" "0"))
parameterModifiedDevice("indp" ("mSwitch" "_m" "0"))
parameterModifiedDevice("symindp" ("mSwitch" "_m" "0"))
parameterModifiedDevice("symind" ("mSwitch" "_m" "0"))
parameterModifiedDevice("ind" ("mSwitch" "_m" "0"))
parameterModifiedDevice("indlinex" ("mSwitch" "_m" "0"))
parameterModifiedDevice("indline" ("mSwitch" "_m" "0"))
parameterModifiedDevice("zvtnfet33x" ("mSwitch" "_m" "0"))
parameterModifiedDevice("zvtnfet33" ("mSwitch" "_m" "0"))
parameterModifiedDevice("zvtnfetx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("zvtnfet" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pfetx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pfethvx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pfethv" ("mSwitch" "_m" "0"))
parameterModifiedDevice("p5pfet50x" ("mSwitch" "_m" "0"))
parameterModifiedDevice("p5pfet50" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pfet50x" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pfet50" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pfet33x" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pfet33" ("mSwitch" "_m" "0"))
parameterModifiedDevice("pfet" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfetx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfettw4" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfet33tw4" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfet50tw4" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfettw" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfethvx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfethv" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfet50x" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfet50tw" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfet50" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfet33x" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfet33tw" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfet33" ("mSwitch" "_m" "0"))
parameterModifiedDevice("nfet" ("mSwitch" "_m" "0"))
parameterModifiedDevice("vlnpn" ("mSwitch" "_m" "0"))
parameterModifiedDevice("jfetjc" ("mSwitch" "_m" "0"))
parameterModifiedDevice("coupledwires" ("mSwitch" "_m" "0"))
parameterModifiedDevice("mimhkx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("mimhk" ("mSwitch" "_m" "0"))
parameterModifiedDevice("mimx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("mim" ("mSwitch" "_m" "0"))
parameterModifiedDevice("dualmimx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("dualmim" ("mSwitch" "_m" "0"))
parameterModifiedDevice("mimhdx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("mimhd" ("mSwitch" "_m" "0"))
parameterModifiedDevice("dualmimhdx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("dualmimhd" ("mSwitch" "_m" "0"))
parameterModifiedDevice("vncapx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("vncap" ("mSwitch" "_m" "0"))
parameterModifiedDevice("oprrpresx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("oprrpres" ("mSwitch" "_m" "0"))
parameterModifiedDevice("oprppresx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("oprppres" ("mSwitch" "_m" "0"))
parameterModifiedDevice("opppcresx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("opppcres" ("mSwitch" "_m" "0"))
parameterModifiedDevice("bondpadx" ("mSwitch" "_m" "0"))
parameterModifiedDevice("bondpad" ("mSwitch" "_m" "0"))
parameterModifiedDevice("esdpsh_base" ("mSwitch" "_m" "0"))
parameterModifiedDevice("esdnsh_base" ("mSwitch" "_m" "0"))
expandOnError((swap nil)(swapThres nil)(reduce t)(pins nil)(instCount t)(skipMatchOnReduceError t)(ambiguousPinAssignment nil)(parameter nil)(unstableDevices t))
listFilteredDevices()
listXRef()
formGate( none )
autoPinSwap(t)
verifyTopSchPins( (t notKeepFloatingPins) )
nameBinding((cell t)(pin t)(net nil)(instance nil))
compareParameter("rr_serpentinex_m1"  multiRRSERPcomp)
compareParameter("rr_serpentine_m1"  multiRRSERPcomp)
compareParameter("rr_serpentinex_m0"  multiRRSERPcomp)
compareParameter("rr_serpentine_m0"  multiRRSERPcomp)
compareParameter("sblkpdresx_m1"  multiSBLKREScomp)
compareParameter("sblkpdres_m1"  multiSBLKREScomp)
compareParameter("sblkndresx_m1"  multiSBLKREScomp)
compareParameter("sblkndres_m1"  multiSBLKREScomp)
compareParameter("sblkpdresx_m0"  multiSBLKREScomp)
compareParameter("sblkpdres_m0"  multiSBLKREScomp)
compareParameter("sblkndresx_m0"  multiSBLKREScomp)
compareParameter("sblkndres_m0"  multiSBLKREScomp)
compareParameter("esdndpi_m0"  ESDNDPIcomp)
compareParameter("esdndsx_m0"  ESDNDSXcomp)
compareParameter("esdpnpi_m0"  ESDPNPIcomp)
compareParameter("esdvpnpnw_m0"  ESDVPNPcomp)
compareParameter("diffhavarx_m1"  multiDIFFHAVARcomp)
compareParameter("diffhavarx_m0"  multiDIFFHAVARcomp)
compareParameter("diffhavar_m1"  multiDIFFHAVARcomp)
compareParameter("diffhavar_m0"  multiDIFFHAVARcomp)
compareParameter("havarx_m1"  multiHAVARcomp)
compareParameter("havar_m1"  multiHAVARcomp)
compareParameter("havarx_m0"  HAVARcomp)
compareParameter("havar_m0"  HAVARcomp)
compareParameter("DIVPNPX_m1"  multiDIPDNWcomp)
compareParameter("divpnpx_m1"  multiDIPDNWcomp)
compareParameter("DIVPNP_m1"  multiDIPDNWcomp)
compareParameter("divpnp_m1"  multiDIPDNWcomp)
compareParameter("DIVPNPX_m0"  DIPDNWcomp)
compareParameter("divpnpx_m0"  DIPDNWcomp)
compareParameter("DIVPNP_m0"  DIPDNWcomp)
compareParameter("divpnp_m0"  DIPDNWcomp)
compareParameter("DINDPWX_m1"  multiDIPDNWcomp)
compareParameter("dindpwx_m1"  multiDIPDNWcomp)
compareParameter("DINDPW_m1"  multiDIPDNWcomp)
compareParameter("dindpww_m1"  multiDIPDNWcomp)
compareParameter("DINDPWX_m0"  DIPDNWcomp)
compareParameter("dindpwx_m0"  DIPDNWcomp)
compareParameter("DINDPW_m0"  DIPDNWcomp)
compareParameter("dindpw_m0"  DIPDNWcomp)
compareParameter("DIPDNWX_m1"  multiDIPDNWcomp)
compareParameter("dipdnwx_m1"  multiDIPDNWcomp)
compareParameter("DIPDNW_m1"  multiDIPDNWcomp)
compareParameter("dipdnw_m1"  multiDIPDNWcomp)
compareParameter("DIPDNWX_m0"  DIPDNWcomp)
compareParameter("dipdnwx_m0"  DIPDNWcomp)
compareParameter("DIPDNW_m0"  DIPDNWcomp)
compareParameter("dipdnw_m0"  DIPDNWcomp)
compareParameter("diffmosvarx_m1"  multiDIFFMOSVARcomp)
compareParameter("diffmosvarx_m0"  multiDIFFMOSVARcomp)
compareParameter("diffmosvar_m1"  multiDIFFMOSVARcomp)
compareParameter("diffmosvar_m0"  multiDIFFMOSVARcomp)
compareParameter("pcap_m1"  multiMOSVARcomp)
compareParameter("pcap_m0"  multiMOSVARcomp)
compareParameter("mosvar50x_m1"  multiMOSVARcomp)
compareParameter("mosvar50x_m0"  multiMOSVARcomp)
compareParameter("mosvar50_m1"  multiMOSVARcomp)
compareParameter("mosvar50_m0"  multiMOSVARcomp)
compareParameter("mosvarx_m1"  multiMOSVARcomp)
compareParameter("mosvarx_m0"  multiMOSVARcomp)
compareParameter("mosvar_m1"  multiMOSVARcomp)
compareParameter("mosvar_m0"  multiMOSVARcomp)
compareParameter("oppdresxx_m1"  multiRES2comp)
compareParameter("oppdresx_m1"  multiRES2comp)
compareParameter("oppdres_m1"  multiRES2comp)
compareParameter("opndresx_m1"  multiRES2comp)
compareParameter("opndres_m1"  multiRES2comp)
compareParameter("k1resx_m1"  multiRES2comp)
compareParameter("k1res_m1"  multiRES2comp)
compareParameter("oppdresxx_m0"  multiRES2comp)
compareParameter("oppdresx_m0"  multiRES2comp)
compareParameter("oppdres_m0"  multiRES2comp)
compareParameter("opndresx_m0"  multiRES2comp)
compareParameter("opndres_m0"  multiRES2comp)
compareParameter("k1resx_m0"  multiRES2comp)
compareParameter("k1res_m0"  multiRES2comp)
compareParameter("psbd_m1"  multiSBDcomp)
compareParameter("sbdnwx_m1"  multiSBDcomp)
compareParameter("sbdnw_m1"  multiSBDcomp)
compareParameter("sbdx_m1"  multiSBDcomp)
compareParameter("sbd_m1"  multiSBDcomp)
compareParameter("psbd_m0"  SBDcomp)
compareParameter("sbdnwx_m0"  SBDcomp)
compareParameter("sbdnw_m0"  SBDcomp)
compareParameter("sbdx_m0"  SBDcomp)
compareParameter("sbd_m0"  SBDcomp)
compareParameter("p5pcdcap50x_m1"  multiMOSVARcomp)
compareParameter("p5pcdcap50x_m0"  multiMOSVARcomp)
compareParameter("pcdcapx_m1"  multiPCDCAPcomp)
compareParameter("pcdcapx_m0"  multiPCDCAPcomp)
compareParameter("pcdcap33x_m1"  multiPCDCAPcomp)
compareParameter("pcdcap33x_m0"  multiPCDCAPcomp)
compareParameter("pcdcap50x_m1"  multiPCDCAPcomp)
compareParameter("pcdcap50x_m0"  multiPCDCAPcomp)
compareParameter("pcdcap50_m1"  multiPCDCAPcomp)
compareParameter("pcdcap50_m0"  multiPCDCAPcomp)
compareParameter("p5pcdcap50_m1"  multiMOSVARcomp)
compareParameter("p5pcdcap50_m0"  multiMOSVARcomp)
compareParameter("pcdcap33_m1"  multiPCDCAPcomp)
compareParameter("pcdcap33_m0"  multiPCDCAPcomp)
compareParameter("pcdcap_m1"  multiPCDCAPcomp)
compareParameter("pcdcap_m0"  multiPCDCAPcomp)
compareParameter("singlewire_m0"  SINGLEWIREcomp)
compareParameter("inds_m0"  INDcomp)
compareParameter("indp_m0"  INDcomp)
compareParameter("symindp_m0"  SYMINDcomp)
compareParameter("symind_m0"  SYMINDcomp)
compareParameter("ind_m0"  INDcomp)
compareParameter("indlinex_m0"  INDLINEcomp)
compareParameter("indline_m0"  INDLINEcomp)
compareParameter("zvtnfet33x_m1"  multiFETcomp)
compareParameter("zvtnfet33_m1"  multiFETcomp)
compareParameter("zvtnfetx_m1"  multiFETcomp)
compareParameter("zvtnfet_m1"  multiFETcomp)
compareParameter("pfetx_m1"  multiFETcomp)
compareParameter("pfethvx_m1"  multiFETcomp)
compareParameter("pfethv_m1"  multiFETcomp)
compareParameter("p5pfet50x_m1"  multiFETcomp)
compareParameter("p5pfet50_m1"  multiFETcomp)
compareParameter("pfet50x_m1"  multiFETcomp)
compareParameter("pfet50_m1"  multiFETcomp)
compareParameter("pfet33x_m1"  multiFETcomp)
compareParameter("pfet33_m1"  multiFETcomp)
compareParameter("pfet_m1"  multiFETcomp)
compareParameter("nfetx_m1"  multiFETcomp)
compareParameter("nfettw4_m1"  multiFETcomp)
compareParameter("nfet33tw4_m1"  multiFETcomp)
compareParameter("nfet50tw4_m1"  multiFETcomp)
compareParameter("nfettw_m1"  multiFETcomp)
compareParameter("nfethvx_m1"  multiFETcomp)
compareParameter("nfethv_m1"  multiFETcomp)
compareParameter("nfet50x_m1"  multiFETcomp)
compareParameter("nfet50tw_m1"  multiFETcomp)
compareParameter("nfet50_m1"  multiFETcomp)
compareParameter("nfet33x_m1"  multiFETcomp)
compareParameter("nfet33tw_m1"  multiFETcomp)
compareParameter("nfet33_m1"  multiFETcomp)
compareParameter("nfet_m1"  multiFETcomp)
compareParameter("nfettw4_m0"  FETNFcomp)
compareParameter("nfet33tw4_m0"  FETNFcomp)
compareParameter("nfet50tw4_m0"  FETNFcomp)
compareParameter("nfettw_m0"  FETNFcomp)
compareParameter("nfet33tw_m0"  FETNFcomp)
compareParameter("nfet50tw_m0"  FETNFcomp)
compareParameter("zvtnfet33x_m0"  FETcomp)
compareParameter("zvtnfet33_m0"  FETcomp)
compareParameter("zvtnfetx_m0"  FETcomp)
compareParameter("zvtnfet_m0"  FETcomp)
compareParameter("pfetx_m0"  FETcomp)
compareParameter("pfethvx_m0"  FETcomp)
compareParameter("pfethv_m0"  FETcomp)
compareParameter("p5pfet50x_m0"  FETcomp)
compareParameter("p5pfet50_m0"  FETcomp)
compareParameter("pfet50x_m0"  FETcomp)
compareParameter("pfet50_m0"  FETcomp)
compareParameter("pfet33x_m0"  FETcomp)
compareParameter("pfet33_m0"  FETcomp)
compareParameter("pfet_m0"  FETcomp)
compareParameter("nfetx_m0"  FETcomp)
compareParameter("nfethvx_m0"  FETcomp)
compareParameter("nfethv_m0"  FETcomp)
compareParameter("nfet50x_m0"  FETcomp)
compareParameter("nfet50_m0"  FETcomp)
compareParameter("nfet33x_m0"  FETcomp)
compareParameter("nfet33_m0"  FETcomp)
compareParameter("nfet_m0"  FETcomp)
compareParameter("vlnpn_m1"  multiVLNPNcomp)
compareParameter("vlnpn_m0"  VLNPNcomp)
compareParameter("jfetjc_m1"  multiJFETcomp)
compareParameter("jfetjc_m0"  JFETcomp)
compareParameter("coupledwires_m0"  CWIREcomp)
compareParameter("mimhkx_m1"  multiMIMHKcomp)
compareParameter("mimhkx_m0"  multiMIMHKcomp)
compareParameter("mimhk_m1"  multiMIMHKcomp)
compareParameter("mimhk_m0"  multiMIMHKcomp)
compareParameter("mimx_m1"  multiMIMcomp)
compareParameter("mimx_m0"  multiMIMcomp)
compareParameter("mim_m1"  multiMIMcomp)
compareParameter("mim_m0"  multiMIMcomp)
compareParameter("dualmimx_m1"  multiMIMcomp)
compareParameter("dualmimx_m0"  multiMIMcomp)
compareParameter("dualmim_m1"  multiMIMcomp)
compareParameter("dualmim_m0"  multiMIMcomp)
compareParameter("mimhdx_m1"  multiMIMcomp)
compareParameter("mimhdx_m0"  multiMIMcomp)
compareParameter("mimhd_m1"  multiMIMcomp)
compareParameter("mimhd_m0"  multiMIMcomp)
compareParameter("dualmimhdx_m1"  multiMIMcomp)
compareParameter("dualmimhdx_m0"  multiMIMcomp)
compareParameter("dualmimhd_m1"  multiMIMcomp)
compareParameter("dualmimhd_m0"  multiMIMcomp)
compareParameter("vncapx_m1"  multiVPPcomp)
compareParameter("vncapx_m0"  parVPPcomp)
compareParameter("vncap_m1"  multiVPPcomp)
compareParameter("vncap_m0"  parVPPcomp)
compareParameter("oprrpresx_m1"  multiOPREScomp)
compareParameter("oprrpresx_m0"  multiOPREScomp)
compareParameter("oprrpres_m1"  multiOPREScomp)
compareParameter("oprrpres_m0"  multiOPREScomp)
compareParameter("oprppresx_m1"  multiOPREScomp)
compareParameter("oprppresx_m0"  multiOPREScomp)
compareParameter("oprppres_m1"  multiOPREScomp)
compareParameter("oprppres_m0"  multiOPREScomp)
compareParameter("opppcresx_m1"  multiOPREScomp)
compareParameter("opppcresx_m0"  multiOPREScomp)
compareParameter("opppcres_m1"  multiOPREScomp)
compareParameter("opppcres_m0"  multiOPREScomp)
compareParameter("bondpadx_m0"  BONDPADcomp)
compareParameter("bondpad_m0"  BONDPADcomp)
compareParameter("esdpsh_base_m0"  ESDPSHcomp)
compareParameter("esdnsh_base_m0"  ESDNSHcomp)
mergeSeries("rr_serpentinex_m0" noMerge)
mergeSeries("rr_serpentine_m0" noMerge)
mergeParallel("rr_serpentinex_m0" noMerge)
mergeParallel("rr_serpentine_m0" noMerge)
mergeParallel("rr_serpentinex_m1" merge multiRRSERPcomb)
mergeParallel("rr_serpentine_m1" merge multiRRSERPcomb)
mergeParallel("sblkpdresx_m0" noMerge)
mergeParallel("sblkpdres_m0" noMerge)
mergeParallel("sblkndresx_m0" noMerge)
mergeParallel("sblkndres_m0" noMerge)
mergeParallel("sblkpdresx_m1" merge multiSBLKREScomb)
mergeParallel("sblkpdres_m1" merge multiSBLKREScomb)
mergeParallel("sblkndresx_m1" merge multiSBLKREScomb)
mergeParallel("sblkndres_m1" merge multiSBLKREScomb)
mergeParallel("esdndpi_m0" noMerge)
mergeParallel("esdndsx_m0" merge parESDNDSXcomb)
mergeParallel("esdpnpi_m0" noMerge)
mergeParallel("esdvpnpnw_m0" merge parESDVPNPcomb)
mergeParallel("diffhavarx_m0" noMerge)
mergeParallel("diffhavar_m0" noMerge)
mergeParallel("diffhavarx_m1" merge multiDIFFHAVARcomb)
mergeParallel("diffhavar_m1" merge multiDIFFHAVARcomb)
mergeParallel("havarx_m0" noMerge)
mergeParallel("havar_m0" noMerge)
mergeParallel("havarx_m1" merge multiHAVARcomb)
mergeParallel("havar_m1" merge multiHAVARcomb)
mergeParallel("divpnpx_m0" noMerge)
mergeParallel("divpnp_m0" noMerge)
mergeParallel("divpnpx_m1" merge multiDIPDNWcomb)
mergeParallel("divpnp_m1" merge multiDIPDNWcomb)
mergeParallel("dindpwx_m0" noMerge)
mergeParallel("dindpw_m0" noMerge)
mergeParallel("dindpwx_m1" merge multiDIPDNWcomb)
mergeParallel("dindpw_m1" merge multiDIPDNWcomb)
mergeParallel("dipdnwx_m0" noMerge)
mergeParallel("dipdnw_m0" noMerge)
mergeParallel("dipdnwx_m1" merge multiDIPDNWcomb)
mergeParallel("dipdnw_m1" merge multiDIPDNWcomb)
mergeParallel("diffmosvarx_m0" noMerge)
mergeParallel("diffmosvar_m0" noMerge)
mergeParallel("pcap_m0" noMerge)
mergeParallel("mosvar50x_m0" noMerge)
mergeParallel("mosvar50_m0" noMerge)
mergeParallel("mosvarx_m0" noMerge)
mergeParallel("mosvar_m0" noMerge)
mergeParallel("diffmosvarx_m1" merge multiDIFFMOSVARcomb)
mergeParallel("diffmosvar_m1" merge multiDIFFMOSVARcomb)
mergeParallel("pcap_m1" merge multiMOSVARcomb)
mergeParallel("mosvar50x_m1" merge multiMOSVARcomb)
mergeParallel("mosvar50_m1" merge multiMOSVARcomb)
mergeParallel("mosvarx_m1" merge multiMOSVARcomb)
mergeParallel("mosvar_m1" merge multiMOSVARcomb)
mergeSeries("oppdresxx_m0" merge serRES2comb)
mergeSeries("oppdresx_m0" merge serRES2comb)
mergeSeries("oppdres_m0" merge serRES2comb)
mergeSeries("opndresx_m0" merge serRES2comb)
mergeSeries("opndres_m0" merge serRES2comb)
mergeSeries("k1resx_m0" merge serRES2comb)
mergeSeries("k1res_m0" merge serRES2comb)
mergeParallel("oppdresxx_m0" merge parRES2comb)
mergeParallel("oppdresx_m0" merge parRES2comb)
mergeParallel("oppdres_m0" merge parRES2comb)
mergeParallel("opndresx_m0" merge parRES2comb)
mergeParallel("opndres_m0" merge parRES2comb)
mergeParallel("k1resx_m0" merge parRES2comb)
mergeParallel("k1res_m0" merge parRES2comb)
mergeParallel("oppdresxx_m1" merge multiRES2comb)
mergeParallel("oppdresx_m1" merge multiRES2comb)
mergeParallel("oppdres_m1" merge multiRES2comb)
mergeParallel("opndresx_m1" merge multiRES2comb)
mergeParallel("opndres_m1" merge multiRES2comb)
mergeParallel("k1resx_m1" merge multiRES2comb)
mergeParallel("k1res_m1" merge multiRES2comb)
mergeParallel("psbd_m0" noMerge)
mergeParallel("sbdnwx_m0" noMerge)
mergeParallel("sbdnw_m0" noMerge)
mergeParallel("sbdx_m0" noMerge)
mergeParallel("sbd_m0" noMerge)
mergeParallel("psbd_m1" merge multiSBDcomb)
mergeParallel("sbdnwx_m1" merge multiSBDcomb)
mergeParallel("sbdnw_m1" merge multiSBDcomb)
mergeParallel("sbdx_m1" merge multiSBDcomb)
mergeParallel("sbd_m1" merge multiSBDcomb)
mergeParallel("p5pcdcap50x_m0" merge parMOSVARcomb)
mergeParallel("p5pcdcap50_m0" merge parMOSVARcomb)
mergeParallel("pcdcapx_m0" noMerge)
mergeParallel("pcdcap33x_m0" noMerge)
mergeParallel("pcdcap50x_m0" noMerge)
mergeParallel("pcdcap50_m0" noMerge)
mergeParallel("pcdcap33_m0" noMerge)
mergeParallel("pcdcap_m0" noMerge)
mergeParallel("p5pcdcap50x_m1" merge multiMOSVARcomb)
mergeParallel("p5pcdcap50_m1" merge multiMOSVARcomb)
mergeParallel("pcdcapx_m1" merge multiPCDCAPcomb)
mergeParallel("pcdcap50x_m1" merge multiPCDCAPcomb)
mergeParallel("pcdcap50_m1" merge multiPCDCAPcomb)
mergeParallel("pcdcap33x_m1" merge multiPCDCAPcomb)
mergeParallel("pcdcap33_m1" merge multiPCDCAPcomb)
mergeParallel("pcdcap_m1" merge multiPCDCAPcomb)
mergeParallel("singlewire_m0" noMerge)
mergeParallel("inds_m0" noMerge)
mergeParallel("indp_m0" noMerge)
mergeParallel("symindp_m0" noMerge)
mergeParallel("symind_m0" noMerge)
mergeParallel("ind_m0" noMerge)
mergeParallel("indlinex_m0" noMerge)
mergeParallel("indline_m0" noMerge)
mergeParallel("zvtnfet33x_m0" merge parFETcomb)
mergeParallel("zvtnfet33_m0" merge parFETcomb)
mergeParallel("zvtnfetx_m0" merge parFETcomb)
mergeParallel("zvtnfet_m0" merge parFETcomb)
mergeParallel("pfetx_m0" merge parFETcomb)
mergeParallel("pfethvx_m0" merge parFETcomb)
mergeParallel("pfethv_m0" merge parFETcomb)
mergeParallel("p5pfet50x_m0" merge parFETcomb)
mergeParallel("p5pfet50_m0" merge parFETcomb)
mergeParallel("pfet50x_m0" merge parFETcomb)
mergeParallel("pfet50_m0" merge parFETcomb)
mergeParallel("pfet33x_m0" merge parFETcomb)
mergeParallel("pfet33_m0" merge parFETcomb)
mergeParallel("pfet_m0" merge parFETcomb)
mergeParallel("nfetx_m0" merge parFETcomb)
mergeParallel("nfettw4_m0" merge parFETcomb)
mergeParallel("nfet33tw4_m0" merge parFETcomb)
mergeParallel("nfet50tw4_m0" merge parFETcomb)
mergeParallel("nfettw_m0" merge parFETcomb)
mergeParallel("nfethvx_m0" merge parFETcomb)
mergeParallel("nfethv_m0" merge parFETcomb)
mergeParallel("nfet50x_m0" merge parFETcomb)
mergeParallel("nfet50tw_m0" merge parFETcomb)
mergeParallel("nfet50_m0" merge parFETcomb)
mergeParallel("nfet33x_m0" merge parFETcomb)
mergeParallel("nfet33tw_m0" merge parFETcomb)
mergeParallel("nfet33_m0" merge parFETcomb)
mergeParallel("nfet_m0" merge parFETcomb)
mergeParallel("zvtnfet33x_m1" merge multiFETcomb)
mergeParallel("zvtnfet33_m1" merge multiFETcomb)
mergeParallel("zvtnfetx_m1" merge multiFETcomb)
mergeParallel("zvtnfet_m1" merge multiFETcomb)
mergeParallel("pfetx_m1" merge multiFETcomb)
mergeParallel("pfethvx_m1" merge multiFETcomb)
mergeParallel("pfethv_m1" merge multiFETcomb)
mergeParallel("p5pfet50x_m1" merge multiFETcomb)
mergeParallel("p5pfet50_m1" merge multiFETcomb)
mergeParallel("pfet50x_m1" merge multiFETcomb)
mergeParallel("pfet50_m1" merge multiFETcomb)
mergeParallel("pfet33x_m1" merge multiFETcomb)
mergeParallel("pfet33_m1" merge multiFETcomb)
mergeParallel("pfet_m1" merge multiFETcomb)
mergeParallel("nfetx_m1" merge multiFETcomb)
mergeParallel("nfettw4_m1" merge multiFETcomb)
mergeParallel("nfet33tw4_m1" merge multiFETcomb)
mergeParallel("nfet50tw4_m1" merge multiFETcomb)
mergeParallel("nfettw_m1" merge multiFETcomb)
mergeParallel("nfethvx_m1" merge multiFETcomb)
mergeParallel("nfethv_m1" merge multiFETcomb)
mergeParallel("nfet50x_m1" merge multiFETcomb)
mergeParallel("nfet50tw_m1" merge multiFETcomb)
mergeParallel("nfet50_m1" merge multiFETcomb)
mergeParallel("nfet33x_m1" merge multiFETcomb)
mergeParallel("nfet33tw_m1" merge multiFETcomb)
mergeParallel("nfet33_m1" merge multiFETcomb)
mergeParallel("nfet_m1" merge multiFETcomb)
mergeParallel("vlnpn_m1" merge multiVLNPNcomb)
mergeParallel("vlnpn_m0" noMerge)
mergeParallel("jfetjc_m1" merge multiJFETcomb)
mergeParallel("jfetjc_m0" noMerge)
mergeParallel("coupledwires_m0" noMerge)
mergeParallel("vncap_m0" noMerge)
mergeParallel("vncapx_m0" noMerge)
mergeParallel("vncapx_m1" merge multiVPPcomb)
mergeParallel("vncap_m1" merge multiVPPcomb)
mergeSeries("vncapx_m0" noMerge)
mergeSeries("vncap_m0" noMerge)
mergeParallel("mimhkx_m0" noMerge)
mergeParallel("mimhk_m0" noMerge)
mergeParallel("mimhkx_m1" merge multiMIMHKcomb)
mergeParallel("mimhk_m1" merge multiMIMHKcomb)
mergeSeries("mimhkx_m0" noMerge)
mergeSeries("mimhk_m0" noMerge)
mergeParallel("mimx_m0" noMerge)
mergeParallel("mim_m0" noMerge)
mergeParallel("dualmimx_m0" noMerge)
mergeParallel("dualmim_m0" noMerge)
mergeParallel("mimx_m1" merge multiMIMcomb)
mergeParallel("mim_m1" merge multiMIMcomb)
mergeParallel("dualmimx_m1" merge multiMIMcomb)
mergeParallel("dualmim_m1" merge multiMIMcomb)
mergeSeries("mimx_m0" noMerge)
mergeSeries("mim_m0" noMerge)
mergeSeries("dualmimx_m0" noMerge)
mergeSeries("dualmim_m0" noMerge)
mergeParallel("mimhdx_m0" noMerge)
mergeParallel("mimhd_m0" noMerge)
mergeParallel("dualmimhdx_m0" noMerge)
mergeParallel("dualmimhd_m0" noMerge)
mergeParallel("mimhdx_m1" merge multiMIMcomb)
mergeParallel("mimhd_m1" merge multiMIMcomb)
mergeParallel("dualmimhdx_m1" merge multiMIMcomb)
mergeParallel("dualmimhd_m1" merge multiMIMcomb)
mergeSeries("mimhdx_m0" noMerge)
mergeSeries("mimhd_m0" noMerge)
mergeSeries("dualmimhdx_m0" noMerge)
mergeSeries("dualmimhd_m0" noMerge)
mergeSeries("oprrpresx_m0" merge serOPREScomb)
mergeSeries("oprrpres_m0" merge serOPREScomb)
mergeSeries("oprppresx_m0" merge serOPREScomb)
mergeSeries("oprppres_m0" merge serOPREScomb)
mergeSeries("opppcresx_m0" merge serOPREScomb)
mergeSeries("opppcres_m0" merge serOPREScomb)
mergeParallel("oprrpresx_m0" merge parOPREScomb)
mergeParallel("oprrpres_m0" merge parOPREScomb)
mergeParallel("oprppresx_m0" merge parOPREScomb)
mergeParallel("oprppres_m0" merge parOPREScomb)
mergeParallel("opppcresx_m0" merge parOPREScomb)
mergeParallel("opppcres_m0" merge parOPREScomb)
mergeParallel("oprrpresx_m1" merge multiOPREScomb)
mergeParallel("oprrpres_m1" merge multiOPREScomb)
mergeParallel("oprppresx_m1" merge multiOPREScomb)
mergeParallel("oprppres_m1" merge multiOPREScomb)
mergeParallel("opppcresx_m1" merge multiOPREScomb)
mergeParallel("opppcres_m1" merge multiOPREScomb)
mergeParallel("bondpadx_m0" noMerge)
mergeParallel("bondpad_m0" noMerge)
mergeParallel("esdpsh_base_m0" noMerge)
mergeParallel("esdnsh_base_m0" noMerge)
mergeSeries("lvsres" merge)
mergeParallel("lvsres" merge)
mergeParallel("subcx" merge parSubcont)
mergeParallel("subc" merge parSubcont)
Reading layout network
 inputting network ./LVS/SL_LVS.ldb
Preprocessing layout network phase 1
 Database : /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.eln
 Top cell : SL
USER DEFINED ERC POWERS  : *VDD* *Vdd* *vdd* *VCC* *Vcc* *vcc* VHI* VHi* Vhi* vhi* 
USER DEFINED ERC GROUNDS : *GND* *Gnd* *gnd* *VSS* *Vss* *vss* VLO* VLo* Vlo* vlo* 

Reading user defined devices...

--- Path check command list ---
Found supply pins:
vdd! :Power Pin
gnd! :Ground Pin

********* PATH CHECK PROCESSING ******** 
 Creating tree... done
 Smashing tree... done
 Pathchecking ... done
 Extra checking ... done
 Reconnecting one way pathes ... done
 Creating reports ... done
 Saving report ... done

Finished /opt/cadence/ASSURA41//tools/assura/bin/ercChk

Starting /opt/cadence/ASSURA41//tools/assura/bin/avcallproc /home/DREXEL/jvk27/ECEC472/IBM/LVS/SL_LVS.rsf -trp -exec1

Finished /opt/cadence/ASSURA41//tools/assura/bin/avcallproc


Assura LVS terminated normally.



Run ended: Sat Mar 15 13:15:32 2014

*****  Assura terminated normally  *****

